{"mappings":"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","sources":["example/aoRender.js","src/materials/surface/AmbientOcclusionMaterial.js","node_modules/three/examples/jsm/libs/stats.module.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { AmbientOcclusionMaterial } from '../src/materials/surface/AmbientOcclusionMaterial.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { MeshBVHUniformStruct } from 'three-mesh-bvh';\nimport * as MikkTSpace from 'three/examples/jsm/libs/mikktspace.module.js';\nimport { mergeVertices, computeMikkTSpaceTangents } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\n\nlet renderer, controls, camera, scene, stats;\nlet fsQuad, target1, target2, materials;\nlet samplesEl, samples, totalSamples;\nconst params = {\n\n\tresolutionScale: 1 / window.devicePixelRatio,\n\tradius: 2.0,\n\tsamplesPerFrame: 2.0,\n\taccumulate: true,\n\tpause: false,\n\n};\n\ninit();\n\nasync function init() {\n\n\t// initialize renderer\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( { transparent: true } ) );\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 200 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tscene = new THREE.Scene();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\treset();\n\n\t} );\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\t// initialize render targs\n\ttarget1 = new THREE.WebGLRenderTarget( 1, 1, { type: THREE.FloatType, encoding: THREE.LinearEncoding } );\n\n\ttarget2 = new THREE.WebGLRenderTarget( 1, 1, { type: THREE.FloatType, encoding: THREE.LinearEncoding } );\n\n\tmaterials = [];\n\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/FlightHelmet/glTF/FlightHelmet.gltf' )\n\t\t.then( async gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\t// scale the scene to a reasonable size\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst sphere = new THREE.Sphere();\n\t\t\tbox.getBoundingSphere( sphere );\n\n\t\t\tgltf.scene.scale.setScalar( 2.5 / sphere.radius );\n\t\t\tgltf.scene.position.y = - 0.25 * ( box.max.y - box.min.y ) * 2.5 / sphere.radius;\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\t// position the floor\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0x1a1a1a } ),\n\t\t\t);\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.025;\n\t\t\tgroup.add( floor );\n\n\t\t\tawait MikkTSpace.ready;\n\n\t\t\t// requires bundle support for top level await\n\t\t\tgroup.traverse( c => {\n\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tconst geometry = c.geometry;\n\n\t\t\t\t\tif ( ! ( 'tangent' in geometry.attributes ) && 'normal' in geometry.attributes && 'uv' in geometry.attributes ) {\n\n\t\t\t\t\t\tc.geometry = computeMikkTSpaceTangents( geometry, MikkTSpace );\n\t\t\t\t\t\tc.geometry = mergeVertices( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tconst { bvh } = result;\n\n\t\t\tconst bvhUniform = new MeshBVHUniformStruct();\n\t\t\tbvhUniform.updateFrom( bvh );\n\n\t\t\t// TODO: for some reason creating multiple materials _really_ slows down the rendering?\n\t\t\tconst materialMap = new Map();\n\t\t\tconst group = result.scene;\n\t\t\tgroup.traverse( c => {\n\n\t\t\t\t// reuse materials as much as possible since different ones cause slow down\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tconst normalMap = c.material.normalMap;\n\t\t\t\t\tif ( ! materialMap.has( normalMap ) ) {\n\n\t\t\t\t\t\tconst material = new AmbientOcclusionMaterial( {\n\n\t\t\t\t\t\t\tbvh: bvhUniform,\n\t\t\t\t\t\t\tnormalScale: c.material.normalScale,\n\t\t\t\t\t\t\tnormalMap,\n\t\t\t\t\t\t\tnormalMapType: c.material.normalMapType,\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tmaterialMap.set( normalMap, material );\n\t\t\t\t\t\tmaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tc.material = materialMap.get( normalMap );\n\n\t\t\t\t}\n\n\t\t\t} );\n\t\t\tscene.add( group );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait gltfPromise;\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tgui.add( params, 'resolutionScale', 0.1, 1 ).onChange( onResize );\n\tgui.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tgui.add( params, 'radius', 0, 4 ).onChange( reset );\n\tgui.add( params, 'accumulate' ).onChange( reset );\n\tgui.add( params, 'pause' );\n\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.domElement );\n\n\treset();\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst dpr = window.devicePixelRatio * params.resolutionScale;\n\n\ttarget1.setSize( w * dpr, h * dpr );\n\ttarget2.setSize( w * dpr, h * dpr );\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\treset();\n\n}\n\nfunction reset() {\n\n\tsamples = 0;\n\ttotalSamples = 0;\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tstats.update();\n\n\t// update all the material parameters\n\tmaterials.forEach( material => {\n\n\t\tif ( ! params.pause ) {\n\n\t\t\tmaterial.seed ++;\n\n\t\t}\n\n\t\tmaterial.radius = params.radius;\n\t\tmaterial.setDefine( 'SAMPLES', params.samplesPerFrame );\n\n\t} );\n\n\t// update the render targets if it's a first frame or not paused\n\tif ( samples === 0 || ! params.pause ) {\n\n\t\tsamples ++;\n\t\ttotalSamples += params.samplesPerFrame;\n\n\t\tif ( params.accumulate && ! params.pause ) {\n\n\t\t\tconst w = target1.width;\n\t\t\tconst h = target1.height;\n\t\t\tcamera.setViewOffset(\n\t\t\t\tw, h,\n\t\t\t\tMath.random() - 0.5, Math.random() - 0.5,\n\t\t\t\tw, h,\n\t\t\t);\n\n\t\t}\n\n\t\trenderer.setRenderTarget( target1 );\n\t\trenderer.render( scene, camera );\n\n\t\trenderer.setRenderTarget( target2 );\n\t\trenderer.autoClear = false;\n\t\tfsQuad.material.map = target1.texture;\n\t\tfsQuad.material.opacity = params.accumulate ? 1 / samples : 1;\n\t\tfsQuad.render( renderer );\n\t\trenderer.autoClear = true;\n\n\t}\n\n\t// render to screen\n\trenderer.setRenderTarget( null );\n\tfsQuad.material.map = target2.texture;\n\tfsQuad.material.opacity = 1;\n\tfsQuad.render( renderer );\n\n\tsamplesEl.innerText = `Samples: ${ totalSamples }`;\n\n}\n\n\n\n\n","import { TangentSpaceNormalMap, Vector2 } from 'three';\nimport { MaterialBase } from '../MaterialBase.js';\nimport { MeshBVHUniformStruct, shaderStructs, shaderIntersectFunction } from 'three-mesh-bvh';\n\nimport { materialStructGLSL } from '../../shader/structs/materialStruct.glsl.js';\nimport { shapeSamplingGLSL } from '../../shader/sampling/shapeSampling.glsl.js';\nimport { pcgGLSL } from '../../shader/rand/pcg.glsl.js';\n\nexport class AmbientOcclusionMaterial extends MaterialBase {\n\n\tget normalMap() {\n\n\t\treturn this.uniforms.normalMap.value;\n\n\t}\n\n\tset normalMap( v ) {\n\n\t\tthis.uniforms.normalMap.value = v;\n\t\tthis.setDefine( 'USE_NORMALMAP', v ? null : '' );\n\n\t}\n\n\tget normalMapType() {\n\n\t\treturn TangentSpaceNormalMap;\n\n\t}\n\n\tset normalMapType( v ) {\n\n\t\tif ( v !== TangentSpaceNormalMap ) {\n\n\t\t\tthrow new Error( 'AmbientOcclusionMaterial: Only tangent space normal map are supported' );\n\n\t\t}\n\n\t}\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLES: 10,\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tbvh: { value: new MeshBVHUniformStruct() },\n\t\t\t\tradius: { value: 1.0 },\n\t\t\t\tseed: { value: 0 },\n\n\t\t\t\tnormalMap: { value: null },\n\t\t\t\tnormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vNorm;\n\t\t\t\tvarying vec3 vPos;\n\n\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvarying vec4 vTan;\n\n\t\t\t\t#endif\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec4 mvPosition = vec4( position, 1.0 );\n\t\t\t\t\tmvPosition = modelViewMatrix * mvPosition;\n\t\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t\t\tmat3 modelNormalMatrix = transpose( inverse( mat3( modelMatrix ) ) );\n\t\t\t\t\tvNorm = normalize( modelNormalMatrix * normal );\n\t\t\t\t\tvPos = ( modelMatrix * vec4( position, 1.0 ) ).xyz;\n\n\t\t\t\t\t#if defined( USE_NORMALMAP ) && defined( USE_TANGENT )\n\n\t\t\t\t\t\tvUv = uv;\n\t\t\t\t\t\tvTan = tangent;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t}\n\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\t\t\t\t#define RAY_OFFSET 1e-4\n\n\t\t\t\tprecision highp isampler2D;\n\t\t\t\tprecision highp usampler2D;\n\t\t\t\tprecision highp sampler2DArray;\n\t\t\t\t#include <common>\n\t\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\t\t// bvh\n\t\t\t\t${ shaderStructs }\n\t\t\t\t${ shaderIntersectFunction }\n\n\t\t\t\t// uniform structs\n\t\t\t\t${ materialStructGLSL }\n\n\t\t\t\t// rand\n\t\t\t\t${ pcgGLSL }\n\n\t\t\t\t// common\n\t\t\t\t${ shapeSamplingGLSL }\n\n\t\t\t\tuniform BVH bvh;\n\t\t\t\tuniform int seed;\n\t\t\t\tuniform float radius;\n\n\t\t\t\tvarying vec3 vNorm;\n\t\t\t\tvarying vec3 vPos;\n\n\t\t\t\t#if defined(USE_NORMALMAP) && defined(USE_TANGENT)\n\n\t\t\t\t\tuniform sampler2D normalMap;\n\t\t\t\t\tuniform vec2 normalScale;\n\t\t\t\t\tvarying vec2 vUv;\n\t\t\t\t\tvarying vec4 vTan;\n\n\t\t\t\t#endif\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\trng_initialize( gl_FragCoord.xy, seed );\n\n\t\t\t\t\t// compute the flat face surface normal\n\t\t\t\t\tvec3 fdx = vec3( dFdx( vPos.x ), dFdx( vPos.y ), dFdx( vPos.z ) );\n\t\t\t\t\tvec3 fdy = vec3( dFdy( vPos.x ), dFdy( vPos.y ), dFdy( vPos.z ) );\n\t\t\t\t\tvec3 faceNormal = normalize( cross( fdx, fdy ) );\n\n\t\t\t\t\t// find the max component to scale the offset to account for floating point error\n\t\t\t\t\tvec3 absPoint = abs( vPos );\n\t\t\t\t\tfloat maxPoint = max( absPoint.x, max( absPoint.y, absPoint.z ) );\n\t\t\t\t\tvec3 normal = vNorm;\n\n\t\t\t\t\t#if defined( USE_NORMALMAP ) && defined( USE_TANGENT )\n\n\t\t\t\t\t\t// some provided tangents can be malformed (0, 0, 0) causing the normal to be degenerate\n\t\t\t\t\t\t// resulting in NaNs and slow path tracing.\n\t\t\t\t\t\tif ( length( vTan.xyz ) > 0.0 ) {\n\n\t\t\t\t\t\t\tvec2 uv = vUv;\n\t\t\t\t\t\t\tvec3 tangent = normalize( vTan.xyz );\n\t\t\t\t\t\t\tvec3 bitangent = normalize( cross( normal, tangent ) * vTan.w );\n\t\t\t\t\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t\t\t\t\t\tvec3 texNormal = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\n\t\t\t\t\t\t\ttexNormal.xy *= normalScale;\n\t\t\t\t\t\t\tnormal = vTBN * texNormal;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tnormal *= gl_FrontFacing ? 1.0 : - 1.0;\n\n\t\t\t\t\tvec3 rayOrigin = vPos + faceNormal * ( maxPoint + 1.0 ) * RAY_OFFSET;\n\t\t\t\t\tfloat accumulated = 0.0;\n\t\t\t\t\tfor ( int i = 0; i < SAMPLES; i ++ ) {\n\n\t\t\t\t\t\t// sample the cosine weighted hemisphere and discard the sample if it's below\n\t\t\t\t\t\t// the geometric surface\n\t\t\t\t\t\tvec3 rayDirection = sampleHemisphere( normalize( normal ), rand4().xy );\n\n\t\t\t\t\t\t// check if we hit the mesh and its within the specified radius\n\t\t\t\t\t\tfloat side = 1.0;\n\t\t\t\t\t\tfloat dist = 0.0;\n\t\t\t\t\t\tvec3 barycoord = vec3( 0.0 );\n\t\t\t\t\t\tvec3 outNormal = vec3( 0.0 );\n\t\t\t\t\t\tuvec4 faceIndices = uvec4( 0u );\n\n\t\t\t\t\t\t// if the ray is above the geometry surface, and it doesn't hit another surface within the specified radius then\n\t\t\t\t\t\t// we consider it lit\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdot( rayDirection, faceNormal ) > 0.0 &&\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t! bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, outNormal, barycoord, side, dist ) ||\n\t\t\t\t\t\t\t\tdist > radius\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\taccumulated += 1.0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl_FragColor.rgb = vec3( accumulated / float( SAMPLES ) );\n\t\t\t\t\tgl_FragColor.a = 1.0;\n\n\t\t\t\t}\n\n\t\t\t`\n\n\t\t} );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n"],"names":["$ilwiq","parcelRequire","$f998c6d5a75a030f$export$9f19d0b0c805745","$9fZ6X","MaterialBase","normalMap","this","uniforms","value","v","setDefine","normalMapType","TangentSpaceNormalMap","Error","constructor","parameters","super","defines","SAMPLES","bvh","$8Zfx2","MeshBVHUniformStruct","radius","seed","normalScale","Vector2","vertexShader","fragmentShader","shaderStructs","shaderIntersectFunction","$kiOyI","materialStructGLSL","$kmALz","pcgGLSL","$jJR4H","shapeSamplingGLSL","setValues","$5aae44c9b1864d53$var$Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","maxValue","drawImage","$5aae44c9b1864d53$export$2e2bcd8739ae039","$02ecdaccaf80df1c$var$renderer","$02ecdaccaf80df1c$var$controls","$02ecdaccaf80df1c$var$camera","$02ecdaccaf80df1c$var$scene","$02ecdaccaf80df1c$var$stats","$02ecdaccaf80df1c$var$fsQuad","$02ecdaccaf80df1c$var$target1","$02ecdaccaf80df1c$var$target2","$02ecdaccaf80df1c$var$materials","$02ecdaccaf80df1c$var$samplesEl","$02ecdaccaf80df1c$var$samples","$02ecdaccaf80df1c$var$totalSamples","$02ecdaccaf80df1c$var$params","resolutionScale","samplesPerFrame","accumulate","pause","$02ecdaccaf80df1c$var$onResize","w","innerWidth","h","innerHeight","dpr","setSize","setPixelRatio","aspect","updateProjectionMatrix","$02ecdaccaf80df1c$var$reset","$02ecdaccaf80df1c$var$animate","requestAnimationFrame","forEach","material","setViewOffset","random","setRenderTarget","render","autoClear","map","texture","opacity","innerText","async","WebGLRenderer","antialias","outputEncoding","sRGBEncoding","body","$RPVlj","FullScreenQuad","MeshBasicMaterial","transparent","PerspectiveCamera","position","set","Scene","$5Rd1x","OrbitControls","getElementById","WebGLRenderTarget","type","FloatType","encoding","LinearEncoding","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","box","Box3","setFromObject","scene","sphere","Sphere","getBoundingSphere","scale","setScalar","y","updateMatrixWorld","add","floor","Mesh","CylinderGeometry","MeshStandardMaterial","color","geometry","clearGroups","$kkvoh","ready","traverse","c","attributes","$7ePFa","computeMikkTSpaceTangents","mergeVertices","generate","result","bvhUniform","updateFrom","materialMap","Map","isMesh","has","push","get","dispose","remove","gui","$jiuw3","GUI","onChange","$02ecdaccaf80df1c$var$init"],"version":3,"file":"aoRender.43cc9ddb.js.map"}