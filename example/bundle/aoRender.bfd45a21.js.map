{"mappings":"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","sources":["node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"names":["$ilwiq","parcelRequire","$443c013b983d0324$var$_changeEvent","type","$443c013b983d0324$var$_startEvent","$443c013b983d0324$var$_endEvent","$443c013b983d0324$export$8ff7788029dfdf52","EventDispatcher","constructor","object","domElement1","super","this","domElement","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","undefined","pointer","passive"],"version":3,"file":"aoRender.bfd45a21.js.map"}