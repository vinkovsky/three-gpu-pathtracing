{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,2FASA,IAAIC,EAAUC,EAAUC,EAAWC,EAAYC,EAC3CC,EAAmBC,EAAOC,EAC1BC,EAEJ,MAAMC,EAAS,CAEdC,QAAQ,EACRC,OAAO,EACPC,KAAK,EACLC,MAAO,EACPC,gBAAiB,EAEjBC,MAAO,UACPC,UAAW,EACXC,UAAW,EACXC,kBAAmB,EACnBC,cAAe,UACfC,YAAa,EACbC,eAAgB,EAChBC,wBAAyB,EACzBC,wBAAyB,IAEzBC,aAAc,EACdC,IAAK,IACLC,QAAS,EAETC,KAAK,EACLC,QAAS,GA2IV,SAASC,IAER1B,EAAW2B,O,CAIZ,SAASC,IAER,MAAMC,EAAIC,OAAOC,WACXC,EAAIF,OAAOG,YACXC,EAAQ5B,EAAOK,gBACfwB,EAAML,OAAOM,iBAEnBpC,EAAWqC,QAASR,EAAIK,EAAQC,EAAKH,EAAIE,EAAQC,GACjDnC,EAAW2B,QAEX9B,EAASwC,QAASR,EAAGG,GACrBnC,EAASyC,cAAeR,OAAOM,iBAAmBF,GAElD,MAAMK,EAASV,EAAIG,EACnB9B,EAAkBqC,OAASA,EAC3BrC,EAAkBsC,yBAElBxC,EAAW2B,O,CAIZ,SAASc,IAERC,sBAAuBD,GAEvBrC,EAAaQ,MAAM+B,IAAKrC,EAAOM,OAAQgC,sBACvCxC,EAAaS,UAAYP,EAAOO,UAChCT,EAAaU,UAAYR,EAAOQ,UAEhCV,EAAayC,UAAY,EACzBzC,EAAakB,IAAMhB,EAAOgB,IAC1BlB,EAAaiB,aAAef,EAAOe,aACnCjB,EAAaa,YAAcX,EAAOW,YAClCb,EAAac,eAAiBZ,EAAOY,eACrCd,EAAa0C,0BAA4B,CAAExC,EAAOa,wBAAyBb,EAAOc,yBAClFhB,EAAaW,kBAAoBT,EAAOS,kBACxCX,EAAaY,cAAc2B,IAAKrC,EAAOU,eAAgB4B,sBACvDxC,EAAa2C,oBAAsBzC,EAAOkB,IAC1CpB,EAAamB,QAAUjB,EAAOkB,IAAMlB,EAAOmB,QAAUnB,EAAOiB,QAC5DnB,EAAaqB,QAAUrB,EAAamB,QACpCnB,EAAa4C,YAAc5C,EAAamB,QAAU,EAElDvB,EAAWiD,SAASC,UAAUC,WAAYpD,EAAUmD,UAAWnD,EAAUqD,UACzElD,EAAkBmD,qBAEbrD,EAAWsD,QAAU,IAAOhD,EAAOC,SAEvCV,EAAS0D,OAAQpD,EAAOD,GAIpBI,EAAOC,WAEJD,EAAOE,OAASR,EAAWsD,QAAU,IAE3CtD,EAAWwD,SAIZ3D,EAAS4D,WAAY,EACrBxD,EAASgD,SAASS,IAAM1D,EAAW2D,OAAOC,QAC1C3D,EAASsD,OAAQ1D,GACjBA,EAAS4D,WAAY,GAItBpD,EAAUwD,UAAY,YAAaC,KAAKC,MAAO/D,EAAWsD,U,EA7M3DU,iBAECnE,EAAW,IAAIF,EAAAsE,cAAqB,CAAEC,WAAW,IACjDrE,EAASsE,YAAcxE,EAAAyE,sBACvBvE,EAASwE,eAAiB1E,EAAA2E,aAC1BzE,EAAS0E,cAAe,EAAG,GAC3BC,SAASC,KAAKC,YAAa7E,EAAS8E,YAEpC,MAAMpC,EAAST,OAAOC,WAAaD,OAAOG,YAC1C/B,EAAoB,IAAI0E,EAAAC,eAAgB,GAAItC,EAAQ,KAAO,KAC3DrC,EAAkB4E,SAASnC,KAAK,EAAK,EAAG,GAExC3C,EAAa,IAAI4E,EAAAG,oBAAqBlF,GACtCG,EAAWgF,OAAQ,EACnBhF,EAAWiD,SAAW,IAAI2B,EAAAK,4BAC1BjF,EAAWU,MAAMiC,IAAKrC,EAAOI,MAAOJ,EAAOI,OAC3CV,EAAWkF,OAAShF,EAEpBD,EAAW,IAAIkF,EAAAC,eAAgB,IAAIzF,EAAA0F,kBAAyB,CAC3D3B,IAAK1D,EAAW2D,OAAOC,QACvB0B,SAAU3F,EAAA4F,eACVC,mBAAoB3F,EAAS4F,uBAAuBD,sBAGrD1F,EAAW,IAAI4F,EAAAC,cAAezF,EAAmBL,EAAS8E,YAC1D7E,EAAS8F,iBAAkB,UAAU,KAEpC5F,EAAW2B,OAAO,IAInBxB,EAAQ,IAAIR,EAAAkG,MAEZxF,EAAYmE,SAASsB,eAAgB,WAErC,MACMC,EAAS,IAAIC,IAAK,wDADP,4GAC2EC,iBAEtF,IAAIC,EAAAC,YAAaC,YAAazG,EAAA0G,WAClCC,UAAWP,GACXQ,MAAM3C,IAENA,EAAQ4C,QAAU7G,EAAA8G,iCAElBtG,EAAMuG,WAAa9C,EACnBzD,EAAMwG,YAAc/C,EAEpB5D,EAAWiD,SAAS2D,WAAWzD,WAAYS,EAAS,IAItDxD,EAAe,IAAIT,EAAAkH,qBACnB,MAAMC,EAAY,IAAIC,EAAAC,uBAChBC,EAAO,IAAItH,EAAAuH,KAAM,IAAIvH,EAAAwH,eAAgB,EAAG,GAAI,IAAM/G,GAClD2D,EAAQ,IAAIpE,EAAAuH,KAAM,IAAIvH,EAAAyH,YAAa,GAAI,IAAM,IAAM,IAAIzH,EAAA0H,qBAAsB,CAAEzG,MAAO,SAAUC,UAAW,EAAGC,UAAW,KAC/HiD,EAAMe,SAASwC,GAAI,EAEnB,MAAMC,EAAY,IAAI5H,EAAA6H,cAAe,SAAU,GAAI,EAAG,GACtDD,EAAUE,SAASC,GAAM5D,KAAK6D,GAAK,EACnCJ,EAAUzC,SAASnC,IAAK,EAAG,EAAG,GAAIiF,eAAgB,GAElD,MAAMC,EAAQ,IAAIlI,EAAAmI,MAClBD,EAAME,IAAKd,EAAMlD,EAAOwD,GAExBxH,QAAkB+G,EAAUkB,SAAUH,GACtC1H,EAAM4H,IAAKhI,EAAUkI,OAErB,MA7GDC,IA6GSA,EA7GT9E,SA6GcA,EA7GdF,UA6GwBA,GAAcnD,EAC/BoI,EAAWD,EAAIC,SACrBnI,EAAWiD,SAASmF,qBAAuB,EAC3CpI,EAAWiD,SAASiF,IAAI/E,WAAY+E,GACpClI,EAAWiD,SAASoF,gBAAgBlF,WACnCgF,EAASG,WAAWC,OACpBJ,EAASG,WAAWE,QACpBL,EAASG,WAAWG,GACpBN,EAASG,WAAW1H,OAErBZ,EAAWiD,SAASyF,uBAAuBvF,WAAYgF,EAASG,WAAWK,eAC3E3I,EAAWiD,SAASG,SAASwF,YAAa/I,EAAU,KAAM,KAAMuD,GAChEpD,EAAWiD,SAASC,UAAUC,WAAYD,EAAWE,GACrDpD,EAAWiD,SAAS4F,OAAO1F,WAAYpD,EAAU8I,QAEjD/B,EAAUgC,UAEVtE,SAASsB,eAAgB,WAAYiD,SAErCnH,IAEAE,OAAO8D,iBAAkB,SAAUhE,GAEnC,MAAMoH,EAAM,IAAIC,EAAAC,IACVC,EAAWH,EAAII,UAAW,gBAChCD,EAASpB,IAAKzH,EAAQ,UACtB6I,EAASpB,IAAKzH,EAAQ,SACtB6I,EAASpB,IAAKzH,EAAQ,OAAQ+I,UAAUC,IAEvCtJ,EAAWiD,SAASsG,UAAW,cAAeC,OAAQF,IACtDtJ,EAAW2B,OAAO,IAGnBwH,EAASpB,IAAKzH,EAAQ,QAAS,EAAG,EAAG,GAAI+I,UAAUI,IAElDzJ,EAAWU,MAAMiC,IAAK8G,EAAOA,EAAO,IAGrCN,EAASpB,IAAKzH,EAAQ,kBAAmB,GAAK,GAAI+I,UAAU,KAE3DzH,GAAU,IAIX,MAAM8H,EAAYV,EAAII,UAAW,YACjCM,EAAUC,SAAUrJ,EAAQ,SAAU+I,SAAU3H,GAChDgI,EAAU3B,IAAKzH,EAAQ,YAAa,EAAG,GAAI+I,SAAU3H,GACrDgI,EAAU3B,IAAKzH,EAAQ,YAAa,EAAG,GAAI+I,SAAU3H,GACrDgI,EAAU3B,IAAKzH,EAAQ,oBAAqB,EAAG,GAAI+I,SAAU3H,GAC7DgI,EAAUC,SAAUrJ,EAAQ,iBAAkB+I,SAAU3H,GACxDgI,EAAU3B,IAAKzH,EAAQ,eAAgB,EAAG,GAAI+I,SAAU3H,GACxDgI,EAAU3B,IAAKzH,EAAQ,MAAO,EAAG,GAAI+I,SAAU3H,GAE/CgI,EAAU3B,IAAKzH,EAAQ,cAAe,EAAG,GAAI+I,SAAU3H,GACvDgI,EAAU3B,IAAKzH,EAAQ,iBAAkB,EAAG,GAAI+I,SAAU3H,GAC1DgI,EAAU3B,IAAKzH,EAAQ,0BAA2B,EAAG,IAAM,GAAI+I,SAAU3H,GACzEgI,EAAU3B,IAAKzH,EAAQ,0BAA2B,EAAG,IAAM,GAAI+I,SAAU3H,GAEzEgI,EAAU3B,IAAKzH,EAAQ,UAAW,EAAG,GAAI+I,SAAU3H,GACnDgI,EAAU3B,IAAKzH,EAAQ,OAAQ+I,SAAU3H,GACzCgI,EAAU3B,IAAKzH,EAAQ,UAAW,EAAG,KAAM+I,SAAU3H,GAErDe,G,CAnIDmH","sources":["example/iridescenceTest.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { BoxGeometry, EquirectangularReflectionMapping, Group, Mesh, MeshPhysicalMaterial, MeshStandardMaterial, RectAreaLight, SphereGeometry } from 'three';\n\nlet renderer, controls, sceneInfo, ptRenderer, blitQuad;\nlet perspectiveCamera, scene, meshMaterial;\nlet samplesEl;\n\nconst params = {\n\n\tenable: true,\n\tpause: false,\n\tmis: true,\n\ttiles: 2,\n\tresolutionScale: 1,\n\n\tcolor: '#ffcccc',\n\troughness: 0,\n\tmetalness: 0,\n\tspecularIntensity: 1,\n\tspecularColor: '#ffffff',\n\tiridescence: 0.0,\n\tiridescenceIOR: 2,\n\tiridescenceThicknessMin: 0,\n\tiridescenceThicknessMax: 400,\n\n\ttransmission: 0.0,\n\tior: 1.5,\n\topacity: 0.0,\n\n\tfog: false,\n\tdensity: 0,\n\n};\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new PhysicalCamera( 75, aspect, 0.025, 500 );\n\tperspectiveCamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\tptRenderer.camera = perspectiveCamera;\n\n\tblitQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t\tpremultipliedAlpha: renderer.getContextAttributes().premultipliedAlpha,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tconst BASE_URL = 'https://raw.githubusercontent.com/google/model-viewer/master/packages/render-fidelity-tools/test/config/';\n\tconst envUrl = new URL( '../../../shared-assets/environments/lightroom_14b.hdr', BASE_URL ).toString();\n\n\tawait new RGBELoader().setDataType( THREE.FloatType )\n\t\t.loadAsync( envUrl )\n\t\t.then( texture => {\n\n\t\t\ttexture.mapping = EquirectangularReflectionMapping;\n\n\t\t\tscene.background = texture;\n\t\t\tscene.environment = texture;\n\n\t\t\tptRenderer.material.envMapInfo.updateFrom( texture );\n\n\t\t} );\n\n\tmeshMaterial = new MeshPhysicalMaterial();\n\tconst generator = new PathTracingSceneWorker();\n\tconst mesh = new Mesh( new SphereGeometry( 1, 50, 50 ), meshMaterial );\n\tconst floor = new Mesh( new BoxGeometry( 10, 0.01, 10 ), new MeshStandardMaterial( { color: 0xffffff, roughness: 1, metalness: 0 } ) );\n\tfloor.position.y = - 1.0;\n\n\tconst areaLight = new RectAreaLight( 0xffffff, 10, 3, 3 );\n\tareaLight.rotation.x = - Math.PI / 4;\n\tareaLight.position.set( 0, 1, 1 ).multiplyScalar( 3 );\n\n\tconst group = new Group();\n\tgroup.add( mesh, floor, areaLight );\n\n\tsceneInfo = await generator.generate( group );\n\tscene.add( sceneInfo.scene );\n\n\tconst { bvh, textures, materials } = sceneInfo;\n\tconst geometry = bvh.geometry;\n\tptRenderer.material.environmentIntensity = 0;\n\tptRenderer.material.bvh.updateFrom( bvh );\n\tptRenderer.material.attributesArray.updateFrom(\n\t\tgeometry.attributes.normal,\n\t\tgeometry.attributes.tangent,\n\t\tgeometry.attributes.uv,\n\t\tgeometry.attributes.color,\n\t);\n\tptRenderer.material.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\tptRenderer.material.textures.setTextures( renderer, 2048, 2048, textures );\n\tptRenderer.material.materials.updateFrom( materials, textures );\n\tptRenderer.material.lights.updateFrom( sceneInfo.lights );\n\n\tgenerator.dispose();\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'enable' );\n\tptFolder.add( params, 'pause' );\n\tptFolder.add( params, 'mis' ).onChange( v => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst matFolder = gui.addFolder( 'Material' );\n\tmatFolder.addColor( params, 'color' ).onChange( reset );\n\tmatFolder.add( params, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder.add( params, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder.add( params, 'specularIntensity', 0, 1 ).onChange( reset );\n\tmatFolder.addColor( params, 'specularColor' ).onChange( reset );\n\tmatFolder.add( params, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder.add( params, 'ior', 1, 2 ).onChange( reset );\n\n\tmatFolder.add( params, 'iridescence', 0, 1 ).onChange( reset );\n\tmatFolder.add( params, 'iridescenceIOR', 1, 2 ).onChange( reset );\n\tmatFolder.add( params, 'iridescenceThicknessMin', 0, 1000, 1 ).onChange( reset );\n\tmatFolder.add( params, 'iridescenceThicknessMax', 0, 1000, 1 ).onChange( reset );\n\n\tmatFolder.add( params, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder.add( params, 'fog' ).onChange( reset );\n\tmatFolder.add( params, 'density', 0, 100 ).onChange( reset );\n\n\tanimate();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tptRenderer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tmeshMaterial.color.set( params.color ).convertSRGBToLinear();\n\tmeshMaterial.roughness = params.roughness;\n\tmeshMaterial.metalness = params.metalness;\n\n\tmeshMaterial.thickness = 1.0;\n\tmeshMaterial.ior = params.ior;\n\tmeshMaterial.transmission = params.transmission;\n\tmeshMaterial.iridescence = params.iridescence;\n\tmeshMaterial.iridescenceIOR = params.iridescenceIOR;\n\tmeshMaterial.iridescenceThicknessRange = [ params.iridescenceThicknessMin, params.iridescenceThicknessMax ];\n\tmeshMaterial.specularIntensity = params.specularIntensity;\n\tmeshMaterial.specularColor.set( params.specularColor ).convertSRGBToLinear();\n\tmeshMaterial.isFogVolumeMaterial = params.fog;\n\tmeshMaterial.opacity = params.fog ? params.density : params.opacity;\n\tmeshMaterial.density = meshMaterial.opacity;\n\tmeshMaterial.transparent = meshMaterial.opacity < 1.0;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tperspectiveCamera.updateMatrixWorld();\n\n\tif ( ptRenderer.samples < 1 || ! params.enable ) {\n\n\t\trenderer.render( scene, perspectiveCamera );\n\n\t}\n\n\tif ( params.enable ) {\n\n\t\tif ( ! params.pause || ptRenderer.samples < 1 ) {\n\n\t\t\tptRenderer.update();\n\n\t\t}\n\n\t\trenderer.autoClear = false;\n\t\tblitQuad.material.map = ptRenderer.target.texture;\n\t\tblitQuad.render( renderer );\n\t\trenderer.autoClear = true;\n\n\t}\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$3a94310b8b6c2978$var$renderer","$3a94310b8b6c2978$var$controls","$3a94310b8b6c2978$var$sceneInfo","$3a94310b8b6c2978$var$ptRenderer","$3a94310b8b6c2978$var$blitQuad","$3a94310b8b6c2978$var$perspectiveCamera","$3a94310b8b6c2978$var$scene","$3a94310b8b6c2978$var$meshMaterial","$3a94310b8b6c2978$var$samplesEl","$3a94310b8b6c2978$var$params","enable","pause","mis","tiles","resolutionScale","color","roughness","metalness","specularIntensity","specularColor","iridescence","iridescenceIOR","iridescenceThicknessMin","iridescenceThicknessMax","transmission","ior","opacity","fog","density","$3a94310b8b6c2978$var$reset","reset","$3a94310b8b6c2978$var$onResize","w","window","innerWidth","h","innerHeight","scale","dpr","devicePixelRatio","setSize","setPixelRatio","aspect","updateProjectionMatrix","$3a94310b8b6c2978$var$animate","requestAnimationFrame","set","convertSRGBToLinear","thickness","iridescenceThicknessRange","isFogVolumeMaterial","transparent","material","materials","updateFrom","textures","updateMatrixWorld","samples","render","update","autoClear","map","target","texture","innerText","Math","floor","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","position","PathTracingRenderer","alpha","PhysicalPathTracingMaterial","camera","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","premultipliedAlpha","getContextAttributes","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","envUrl","URL","toString","$891vQ","RGBELoader","setDataType","FloatType","loadAsync","then","mapping","EquirectangularReflectionMapping","background","environment","envMapInfo","MeshPhysicalMaterial","generator","$cVdfP","PathTracingSceneWorker","mesh","Mesh","SphereGeometry","BoxGeometry","MeshStandardMaterial","y","areaLight","RectAreaLight","rotation","x","PI","multiplyScalar","group","Group","add","generate","scene","bvh","geometry","environmentIntensity","attributesArray","attributes","normal","tangent","uv","materialIndexAttribute","materialIndex","setTextures","lights","dispose","remove","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","v","setDefine","Number","value","matFolder","addColor","$3a94310b8b6c2978$var$init"],"version":3,"file":"iridescenceTest.1c7bf34d.js.map"}