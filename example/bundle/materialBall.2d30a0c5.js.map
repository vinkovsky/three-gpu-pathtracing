{"mappings":"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","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator, EquirectCamera, DenoiseMaterial } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, activeCamera, blitQuad, denoiseQuad, materials;\nlet perspectiveCamera, orthoCamera, equirectCamera;\nlet envMap, envMapGenerator, scene;\nlet samplesEl;\nlet PT_PROGRAM_ID;\n\nconst orthoWidth = 5;\n\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.3,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\tthinFilm: false,\n\t\tattenuationColor: '#ffffff',\n\t\tattenuationDistance: 0.5,\n\t\topacity: 1.0,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tsheenColor: '#000000',\n\t\tsheenRoughness: 0.0,\n\t\tiridescence: 0.0,\n\t\tiridescenceIOR: 1.5,\n\t\tiridescenceThickness: 400,\n\t\tspecularColor: '#ffffff',\n\t\tspecularIntensity: 1.0,\n\t\tmatte: false,\n\t\tflatShading: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.9,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tthinFilm: false,\n\t\tattenuationColor: '#ffffff',\n\t\tattenuationDistance: 0.5,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tclearcoat: 0.0,\n\t\tclearcoatRoughness: 0.0,\n\t\tsheenColor: '#000000',\n\t\tsheenRoughness: 0.0,\n\t\tiridescence: 0.0,\n\t\tiridescenceIOR: 1.5,\n\t\tiridescenceThickness: 400,\n\t\tspecularColor: '#ffffff',\n\t\tspecularIntensity: 1.0,\n\t\tmatte: false,\n\t\tflatShading: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.1,\n\t\tmetalness: 0.05,\n\t\tmatte: false,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tdenoiseEnabled: true,\n\tdenoiseSigma: 2.5,\n\tdenoiseThreshold: 0.1,\n\tdenoiseKSigma: 1.0,\n\tenvironmentIntensity: 1,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.0,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\tcameraProjection: 'Perspective',\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.23;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\n\tparams.bounces = 10;\n\tparams.tiles = 2;\n\n} else if ( window.location.hash.includes( 'iridescent' ) ) {\n\n\tparams.material1.color = '#474747';\n\tparams.material1.roughness = 0.25;\n\tparams.material1.metalness = 1.0;\n\tparams.material1.iridescence = 1.0;\n\tparams.material1.iridescenceIOR = 2.2;\n\n} else if ( window.location.hash.includes( 'acrylic' ) ) {\n\n\tparams.material1.color = '#ffffff';\n\tparams.material1.roughness = 0;\n\tparams.material1.metalness = 0;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.attenuationDistance = 0.75;\n\tparams.material1.attenuationColor = '#2a6dc6';\n\n\tparams.material2.color = '#ffffff';\n\tparams.material2.roughness = 0.0;\n\tparams.material2.metalness = 0.975;\n\n\tparams.material3.color = '#999999';\n\tparams.material3.roughness = 0.2;\n\tparams.material3.metalness = 0.0;\n\n\tparams.bounces = 20;\n\tparams.tiles = 3;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new PhysicalCamera( 75, aspect, 0.025, 500 );\n\tperspectiveCamera.position.set( - 4, 2, 3 );\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera = new THREE.OrthographicCamera( orthoWidth / - 2, orthoWidth / 2, orthoHeight / 2, orthoHeight / - 2, 0, 100 );\n\torthoCamera.position.set( - 4, 2, 3 );\n\n\tequirectCamera = new EquirectCamera();\n\tequirectCamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tblitQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t\tpremultipliedAlpha: renderer.getContextAttributes().premultipliedAlpha,\n\t} ) );\n\n\tdenoiseQuad = new FullScreenQuad( new DenoiseMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t\tpremultipliedAlpha: renderer.getContextAttributes().premultipliedAlpha,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new RGBELoader().setDataType( THREE.FloatType )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr' )\n\t\t.then( texture => {\n\n\t\t\tenvMap = texture;\n\n\t\t\tupdateEnvBlur();\n\n\t\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshPhysicalMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshPhysicalMaterial();\n\t\t\tconst material2 = new THREE.MeshPhysicalMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.attributesArray.updateFrom(\n\t\t\t\tgeometry.attributes.normal,\n\t\t\t\tgeometry.attributes.tangent,\n\t\t\t\tgeometry.attributes.uv,\n\t\t\t\tgeometry.attributes.color,\n\t\t\t);\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\tconst gui = new GUI();\n\n\tupdateCamera( params.cameraProjection );\n\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tblitQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst denoiseFolder = gui.addFolder( 'Denoising' );\n\tdenoiseFolder.add( params, 'denoiseEnabled' );\n\tdenoiseFolder.add( params, 'denoiseSigma', 0.01, 12.0 );\n\tdenoiseFolder.add( params, 'denoiseThreshold', 0.01, 1.0 );\n\tdenoiseFolder.add( params, 'denoiseKSigma', 0.0, 12.0 );\n\tdenoiseFolder.close();\n\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.makeRotationY( v );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\tenvFolder.close();\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic', 'Equirectangular' ] ).onChange( v => {\n\n\t\tupdateCamera( v );\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tperspectiveCamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tperspectiveCamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\tcameraFolder.close();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'thinFilm', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'attenuationDistance', 0.05, 2.0 ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'attenuationColor' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'sheenColor' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'sheenRoughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'iridescence', 0.0, 1.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'iridescenceIOR', 0.1, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'iridescenceThickness', 0.0, 1200.0 ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'specularColor' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'specularIntensity', 0.0, 1.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'flatShading' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'castShadow' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material2, 'thinFilm', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'attenuationDistance', 0.05, 2.0 ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'attenuationColor' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'clearcoat', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'clearcoatRoughness', 0, 1 ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'sheenColor' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'sheenRoughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'iridescence', 0.0, 1.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'iridescenceIOR', 0.1, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'iridescenceThickness', 0.0, 1200.0 ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'specularColor' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'specularIntensity', 0.0, 1.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'flatShading' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'castShadow' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera.top = orthoHeight / 2;\n\torthoCamera.bottom = orthoHeight / - 2;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction updateCamera( cameraProjection ) {\n\n\tif ( cameraProjection === 'Perspective' ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\tperspectiveCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = perspectiveCamera;\n\n\t} else if ( cameraProjection === 'Orthographic' ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\torthoCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = orthoCamera;\n\n\t} else { // Equirect\n\n\t\tif ( activeCamera ) {\n\n\t\t\tequirectCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = equirectCamera;\n\n\t}\n\n\tcontrols.object = activeCamera;\n\tptRenderer.camera = activeCamera;\n\n\tcontrols.update();\n\n\treset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.attenuationDistance = params.material1.thinFilm ? Infinity : params.material1.attenuationDistance;\n\tm1.attenuationColor.set( params.material1.attenuationColor );\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\tm1.clearcoat = params.material1.clearcoat;\n\tm1.clearcoatRoughness = params.material1.clearcoatRoughness;\n\tm1.sheenColor.set( params.material1.sheenColor ).convertSRGBToLinear();\n\tm1.sheenRoughness = params.material1.sheenRoughness;\n\tm1.iridescence = params.material1.iridescence;\n\tm1.iridescenceIOR = params.material1.iridescenceIOR;\n\tm1.iridescenceThicknessRange = [ 0, params.material1.iridescenceThickness ];\n\tm1.specularColor.set( params.material1.specularColor ).convertSRGBToLinear();\n\tm1.specularIntensity = params.material1.specularIntensity;\n\tm1.transparent = m1.opacity < 1;\n\tm1.flatShading = params.material1.flatShading;\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.attenuationDistance = params.material2.thinFilm ? Infinity : params.material2.attenuationDistance;\n\tm2.attenuationColor.set( params.material2.attenuationColor );\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\tm2.clearcoat = params.material2.clearcoat;\n\tm2.clearcoatRoughness = params.material2.clearcoatRoughness;\n\tm2.sheenColor.set( params.material2.sheenColor ).convertSRGBToLinear();\n\tm2.sheenRoughness = params.material2.sheenRoughness;\n\tm2.iridescence = params.material2.iridescence;\n\tm2.iridescenceIOR = params.material2.iridescenceIOR;\n\tm2.iridescenceThicknessRange = [ 0, params.material2.iridescenceThickness ];\n\tm2.specularColor.set( params.material2.specularColor ).convertSRGBToLinear();\n\tm2.specularIntensity = params.material2.specularIntensity;\n\tm2.transparent = m2.opacity < 1;\n\tm2.flatShading = params.material2.flatShading;\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\tm3.transparent = m3.opacity < 1;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.materials.setMatte( 0, params.material1.matte );\n\tptRenderer.material.materials.setMatte( 1, params.material2.matte );\n\tptRenderer.material.materials.setMatte( 2, params.material3.matte );\n\tptRenderer.material.materials.setCastShadow( 0, params.material1.castShadow );\n\tptRenderer.material.materials.setCastShadow( 1, params.material2.castShadow );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( activeCamera );\n\n\tactiveCamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\t// Get the path tracing shader id. It will be the next program compiled and used here.\n\tif ( PT_PROGRAM_ID === undefined ) {\n\n\t\tPT_PROGRAM_ID = renderer.info.programs.length;\n\n\t}\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\tif ( ! window.DEBUG_SHADERS ) {\n\n\t\tconst gl = renderer.getContext();\n\t\tconst DEBUG_SHADERS = {};\n\n\t\tconst programs = renderer.info.programs;\n\t\tconst ptProgram = programs[ PT_PROGRAM_ID ];\n\t\tDEBUG_SHADERS.context = gl;\n\n\t\tDEBUG_SHADERS.vertexShader = ptProgram.vertexShader;\n\t\tDEBUG_SHADERS.fragmentShader = ptProgram.fragmentShader;\n\n\t\tDEBUG_SHADERS.vertexShaderSource = gl.getShaderSource( ptProgram.vertexShader );\n\t\tDEBUG_SHADERS.fragmentShaderSource = gl.getShaderSource( ptProgram.fragmentShader );\n\n\t\tconst shaderDebugExt = gl.getExtension( 'WEBGL_debug_shaders' );\n\t\tDEBUG_SHADERS.debugVertexShaderSource = shaderDebugExt.getTranslatedShaderSource( ptProgram.vertexShader );\n\t\tDEBUG_SHADERS.debugFragmentShaderSource = shaderDebugExt.getTranslatedShaderSource( ptProgram.fragmentShader );\n\n\t\twindow.DEBUG_SHADERS = DEBUG_SHADERS;\n\t\tconsole.log( 'Original and translated debug shaders added to window.DEBUG_SHADERS object.' );\n\n\t}\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, activeCamera );\n\n\t}\n\n\tdenoiseQuad.material.sigma = params.denoiseSigma;\n\tdenoiseQuad.material.threshold = params.denoiseThreshold;\n\tdenoiseQuad.material.kSigma = params.denoiseKSigma;\n\n\tconst quad = params.denoiseEnabled ? denoiseQuad : blitQuad;\n\n\trenderer.autoClear = false;\n\tquad.material.map = ptRenderer.target.texture;\n\tquad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$activeCamera","$0473c5c83fd2a77a$var$blitQuad","$0473c5c83fd2a77a$var$denoiseQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$perspectiveCamera","$0473c5c83fd2a77a$var$orthoCamera","$0473c5c83fd2a77a$var$equirectCamera","$0473c5c83fd2a77a$var$envMap","$0473c5c83fd2a77a$var$envMapGenerator","$0473c5c83fd2a77a$var$scene","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$PT_PROGRAM_ID","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","thinFilm","attenuationColor","attenuationDistance","opacity","clearcoat","clearcoatRoughness","sheenColor","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","specularColor","specularIntensity","matte","flatShading","castShadow","material2","material3","multipleImportanceSampling","stableNoise","denoiseEnabled","denoiseSigma","denoiseThreshold","denoiseKSigma","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","cameraProjection","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","orthoHeight","top","bottom","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$0473c5c83fd2a77a$var$updateCamera","position","copy","object","camera","update","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","Infinity","iridescenceThicknessRange","transparent","m2","m3","materials","textures","setMatte","setCastShadow","physicalCamera","updateMatrixWorld","background","undefined","info","programs","length","i","l","DEBUG_SHADERS","gl","getContext","ptProgram","context","vertexShader","fragmentShader","vertexShaderSource","getShaderSource","fragmentShaderSource","shaderDebugExt","getExtension","debugVertexShaderSource","getTranslatedShaderSource","debugFragmentShaderSource","console","log","samples","render","sigma","threshold","kSigma","quad","autoClear","map","target","texture","innerText","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","OrthographicCamera","$0473c5c83fd2a77a$var$orthoWidth","EquirectCamera","PathTracingRenderer","alpha","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","premultipliedAlpha","getContextAttributes","DenoiseMaterial","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","$891vQ","RGBELoader","setDataType","FloatType","loadAsync","then","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderGeometry","MeshPhysicalMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","result","bvh","attributesArray","attributes","normal","tangent","uv","materialIndexAttribute","materialIndex","setTextures","dispose","Promise","all","remove","classList","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","denoiseFolder","close","envFolder","PI","v","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}