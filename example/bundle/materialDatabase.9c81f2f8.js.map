{"mappings":"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","sources":["example/materialDatabase.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, BlurredEnvMapGenerator } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, blitQuad, materials;\nlet perspectiveCamera, database;\nlet envMap, envMapGenerator, scene;\nlet samplesEl, materialEl, imgEl, infoEl;\n\nconst params = {\n\thideInfo: false,\n\tacesToneMapping: true,\n\tstableNoise: false,\n\ttiles: 2,\n\tbounces: 5,\n\tmultipleImportanceSampling: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\tenvironmentBlur: 0,\n\tenvironmentIntensity: 1,\n\tenvironmentRotation: 0,\n\tbackgroundBlur: 0.1,\n\tfilterGlossyFactor: 0.5,\n};\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\tparams.hideInfo = true;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new THREE.PerspectiveCamera( 75, aspect, 0.025, 500 );\n\tperspectiveCamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.camera = perspectiveCamera;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tblitQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t\tpremultipliedAlpha: renderer.getContextAttributes().premultipliedAlpha,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\tmaterialEl = document.getElementById( 'materialInfo' );\n\timgEl = document.getElementById( 'materialImage' );\n\tinfoEl = document.getElementById( 'info' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new RGBELoader().setDataType( THREE.FloatType )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/master/hdri/autoshop_01_1k.hdr' )\n\t\t.then( texture => {\n\n\t\t\tenvMap = texture;\n\n\t\t\tupdateEnvBlur();\n\n\t\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshPhysicalMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshPhysicalMaterial();\n\t\t\tconst material2 = new THREE.MeshPhysicalMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.attributesArray.updateFrom(\n\t\t\t\tgeometry.attributes.normal,\n\t\t\t\tgeometry.attributes.tangent,\n\t\t\t\tgeometry.attributes.uv,\n\t\t\t\tgeometry.attributes.color,\n\t\t\t);\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tconst databasePromise = fetch( 'https://api.physicallybased.info/materials' )\n\t\t.then( res => res.json() )\n\t\t.then( json => {\n\n\t\t\tdatabase = {};\n\t\t\tjson.forEach( mat => {\n\n\t\t\t\tdatabase[ mat.name ] = mat;\n\n\t\t\t} );\n\n\t\t} );\n\n\tawait Promise.all( [ databasePromise, gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\n\tconst materialNames = Object.keys( database );\n\tparams.material = materialNames[ 0 ];\n\tgui.add( params, 'material', materialNames ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tgui.add( params, 'hideInfo' );\n\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tblitQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.makeRotationY( v );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction applyMaterialInfo( info, material ) {\n\n\tmaterial.color.set( 0xffffff );\n\tmaterial.transmission = 0.0;\n\tmaterial.attenuationDistance = Infinity;\n\tmaterial.attenuationColor.set( 0xffffff );\n\tmaterial.specularColor.set( 0xffffff );\n\tmaterial.metalness = 0.0;\n\tmaterial.roughness = 1.0;\n\tmaterial.ior = 1.5;\n\tmaterial.thickness = 1.0;\n\n\tif ( info.specularColor ) material.specularColor.setRGB( ...info.specularColor );\n\tif ( 'metalness' in info ) material.metalness = info.metalness;\n\tif ( 'roughness' in info ) material.roughness = info.roughness;\n\tif ( 'ior' in info ) material.ior = info.ior;\n\tif ( 'transmission' in info ) material.transmission = info.transmission;\n\n\tif ( material.transmission ) {\n\n\t\tif ( info.color ) material.attenuationColor.setRGB( ...info.color );\n\t\tmaterial.attenuationDistance = 200 / info.density;\n\n\t} else {\n\n\t\tif ( info.color ) material.color.setRGB( ...info.color );\n\n\t}\n\n\tconst cleanName = info.name.replace( /\\s+/g, '-' ).replace( /[()]+/g, '' );\n\timgEl.src = `https://physicallybased.info/reference/render/${ cleanName }-cycles.webp`;\n\tmaterialEl.innerText = `${ info.description }`;\n\tmaterialEl.style.display = info.description ? 'inline-block' : 'none';\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tinfoEl.style.visibility = params.hideInfo ? 'hidden' : 'visible';\n\n\tconst materialInfo = database[ params.material ];\n\tconst [ shellMaterial, coreMaterial ] = materials;\n\n\tapplyMaterialInfo( materialInfo, shellMaterial );\n\tcoreMaterial.color.setRGB( 0.5, 0.5, 0.5 ).convertSRGBToLinear();\n\tcoreMaterial.roughness = 1.0;\n\tcoreMaterial.metalness = 0.0;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.physicalCamera.updateFrom( perspectiveCamera );\n\n\tperspectiveCamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\tptRenderer.update();\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, perspectiveCamera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tblitQuad.material.map = ptRenderer.target.texture;\n\tblitQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$effb235baa2b1168$var$renderer","$effb235baa2b1168$var$controls","$effb235baa2b1168$var$sceneInfo","$effb235baa2b1168$var$ptRenderer","$effb235baa2b1168$var$blitQuad","$effb235baa2b1168$var$materials","$effb235baa2b1168$var$perspectiveCamera","$effb235baa2b1168$var$database","$effb235baa2b1168$var$envMap","$effb235baa2b1168$var$envMapGenerator","$effb235baa2b1168$var$scene","$effb235baa2b1168$var$samplesEl","$effb235baa2b1168$var$materialEl","$effb235baa2b1168$var$imgEl","$effb235baa2b1168$var$infoEl","$effb235baa2b1168$var$params","hideInfo","acesToneMapping","stableNoise","tiles","bounces","multipleImportanceSampling","resolutionScale","window","devicePixelRatio","environmentBlur","environmentIntensity","environmentRotation","backgroundBlur","filterGlossyFactor","$effb235baa2b1168$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","$effb235baa2b1168$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$effb235baa2b1168$var$animate","requestAnimationFrame","style","visibility","materialInfo","shellMaterial","coreMaterial","info","color","set","transmission","attenuationDistance","Infinity","attenuationColor","specularColor","metalness","roughness","ior","thickness","setRGB","density","cleanName","name","replace","src","innerText","description","display","$effb235baa2b1168$var$applyMaterialInfo","convertSRGBToLinear","materials","textures","physicalCamera","updateMatrixWorld","backgroundAlpha","background","update","samples","render","autoClear","map","target","texture","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","setClearColor","document","body","appendChild","domElement","PerspectiveCamera","position","$4CEV9","PathTracingRenderer","camera","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","premultipliedAlpha","getContextAttributes","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","$891vQ","RGBELoader","setDataType","FloatType","loadAsync","then","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderGeometry","MeshPhysicalMaterial","geometry","toNonIndexed","clearGroups","y","min","material1","material2","traverse","c","computeVertexNormals","result","bvh","attributesArray","attributes","normal","tangent","uv","materialIndexAttribute","materialIndex","setTextures","dispose","databasePromise","fetch","res","json","forEach","mat","Promise","all","remove","gui","$jiuw3","GUI","materialNames","Object","keys","onChange","ptFolder","addFolder","value","NoToneMapping","needsUpdate","envFolder","PI","v","makeRotationY","$effb235baa2b1168$var$init"],"version":3,"file":"materialDatabase.9c81f2f8.js.map"}