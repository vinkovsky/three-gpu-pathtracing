{"mappings":"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","sources":["example/renderVideo.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/universalModuleDefinition","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/browser/defaultOptions.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/browser/fetchFile.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/browser/getCreateFFmpegCore.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/browser/index.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/config.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/createFFmpeg.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/utils/log.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/utils/parseArgs.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/@ffmpeg/ffmpeg/src/utils/parseProgress.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/changedpi/dist/index.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/file-saver/dist/FileSaver.min.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/jszip/dist/jszip.min.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/mdn-polyfills/HTMLCanvasElement.prototype.toBlob.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/micromodal/dist/micromodal.es.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CCapture.js/gif.worker.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/node_modules/resolve-url/resolve-url.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CanvasCapture.ts","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/micromodal.css.ts","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/modals.ts","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/params.ts","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CCapture.js/CCapture.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CCapture.js/download.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CCapture.js/gif.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CCapture.js/tar.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/CCapture.js/webm-writer-0.2.0.js","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/runtime/global","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/runtime/hasOwnProperty shorthand","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/runtime/make namespace object","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/bootstrap","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/runtime/node module decorator","node_modules/canvas-capture/dist/webpack:/CanvasCapture/webpack/runtime/define property getters","node_modules/canvas-capture/dist/webpack:/CanvasCapture/src/index.ts"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { DynamicPathTracingSceneGenerator, PathTracingRenderer, PhysicalPathTracingMaterial } from '../src/index.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { generateRadialFloorTexture } from './utils/generateRadialFloorTexture.js';\nimport CanvasCapture from 'canvas-capture';\n\n// CCapture seems to replace the requestAnimationFrame callback which breaks the ability to render and\n// use CanvasCapture.\nconst requestAnimationFrame = window.requestAnimationFrame;\n\nlet renderer, controls, sceneInfo, ptRenderer, camera, fsQuad, scene, gui, model;\nlet samplesEl, videoEl;\nlet recordedFrames = 0;\nlet animationDuration = 0;\nlet videoUrl = '';\nconst UP_AXIS = new THREE.Vector3( 0, 1, 0 );\n\nconst params = {\n\n\tdisplayVideo: false,\n\n\ttiles: 2,\n\trotation: 2 * Math.PI,\n\tduration: 0,\n\tframeRate: 12,\n\tsamples: 20,\n\trecord: () => {\n\n\t\t// hide the video and revoke any existing blob on record stat\n\t\tparams.displayVideo = false;\n\t\tURL.revokeObjectURL( videoUrl );\n\n\t\t// begin recording\n\t\tCanvasCapture.init( renderer.domElement );\n\t\tCanvasCapture.beginVideoRecord( {\n\t\t\tformat: CanvasCapture.WEBM,\n\t\t\tfps: params.frameRate,\n\t\t\tonExport: blob => {\n\n\t\t\t\tvideoUrl = URL.createObjectURL( blob );\n\t\t\t\tvideoEl.src = videoUrl;\n\t\t\t\tvideoEl.play();\n\n\t\t\t\tparams.displayVideo = true;\n\t\t\t\trebuildGUI();\n\n\t\t\t}\n\t\t} );\n\n\t\t// reinitialize recording variables\n\t\tptRenderer.reset();\n\t\trecordedFrames = 0;\n\t\trebuildGUI();\n\n\t},\n\tstop: () => {\n\n\t\tCanvasCapture.stopRecord();\n\t\trecordedFrames = 0;\n\t\trebuildGUI();\n\n\t},\n\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tresolutionScale: 1,\n\n};\n\n// clamp value for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\n}\n\ninit();\n\nasync function init() {\n\n\t// initialize renderer, scene, camera\n\trenderer = new THREE.WebGLRenderer( { antialias: true, preserveDrawingBuffer: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tscene = new THREE.Scene();\n\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( 5, 8, 12 );\n\n\t// initialize path tracer\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.camera = camera;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.filterGlossyFactor = 0.25;\n\tptRenderer.material.backgroundBlur = 0.1;\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\ttransparent: true,\n\t} ) );\n\n\t// initialize controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.target.set( - 0.15, 4.5, - 0.08 );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tcontrols.update();\n\n\t// get dom elements\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tvideoEl = document.getElementsByTagName( 'video' )[ 0 ];\n\tvideoEl.style.display = 'none';\n\n\t// model models and environment map\n\tconst envMapPromise = new RGBELoader().setDataType( THREE.FloatType )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/master/hdri/phalzer_forest_01_1k.hdr' )\n\t\t.then( texture => {\n\n\t\t\tptRenderer.material.envMapInfo.updateFrom( texture );\n\n\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\tscene.background = texture;\n\t\t\tscene.environment = texture;\n\n\t\t} );\n\n\tconst modelPromise = await loadModel( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/bao-robot/bao-robot.glb' )\n\t\t.then( result => {\n\n\t\t\tmodel = result;\n\t\t\tregenerateScene();\n\n\t\t} );\n\n\tawait Promise.all( [ envMapPromise, modelPromise ] );\n\tscene.add( model.scene );\n\n\t// prep for rendering\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\trebuildGUI();\n\n\tanimate();\n\n}\n\nfunction rebuildGUI() {\n\n\tif ( gui ) {\n\n\t\tgui.destroy();\n\n\t}\n\n\tgui = new GUI();\n\tgui.add( params, 'displayVideo' ).disable( videoUrl === '' );\n\n\t// animation folder with parameters that are locked during animation\n\tconst animationFolder = gui.addFolder( 'animation' );\n\tconst recording = CanvasCapture.isRecording();\n\tanimationFolder.add( params, 'rotation', - 2 * Math.PI, 2 * Math.PI ).disable( recording );\n\tanimationFolder.add( params, 'duration', 0.25, animationDuration, 1e-2 ).disable( recording );\n\tanimationFolder.add( params, 'frameRate', 12, 60, 1 ).disable( recording );\n\tanimationFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( onResize ).disable( recording );\n\tanimationFolder.add( params, recording ? 'stop' : 'record' );\n\n\t// dynamic parameters\n\tconst renderFolder = gui.addFolder( 'rendering' );\n\trenderFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\trenderFolder.add( params, 'samples', 1, 500, 1 );\n\trenderFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\trenderFolder.add( params, 'bounces', 1, 10, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n}\n\nfunction loadModel( url ) {\n\n\t// load the gltf model\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( url )\n\t\t.then( gltf => {\n\n\t\t\t// make the model white since the texture seems to dark for the env map\n\t\t\t// TODO: remove this\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\tc.material.transparent = false;\n\t\t\t\t\tc.material.depthWrite = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\t\t\tgltf.scene.scale.setScalar( 0.3 );\n\n\t\t\t// initialize animations\n\t\t\tconst animations = gltf.animations;\n\t\t\tconst mixer = new THREE.AnimationMixer( gltf.scene );\n\t\t\tconst clip = animations[ 0 ];\n\t\t\tconst action = mixer.clipAction( clip );\n\t\t\taction.play();\n\n\t\t\t// save the duration of the animation\n\t\t\tanimationDuration = parseFloat( clip.duration.toFixed( 2 ) );\n\t\t\tparams.duration = animationDuration;\n\n\t\t\t// add floor\n\t\t\tconst group = new THREE.Group();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst floorTex = generateRadialFloorTexture( 2048 );\n\t\t\tconst floorPlane = new THREE.Mesh(\n\t\t\t\tnew THREE.PlaneGeometry(),\n\t\t\t\tnew THREE.MeshStandardMaterial( {\n\t\t\t\t\tmap: floorTex,\n\t\t\t\t\ttransparent: true,\n\t\t\t\t\tcolor: 0xdddddd,\n\t\t\t\t\troughness: 0.15,\n\t\t\t\t\tmetalness: 0.95\n\t\t\t\t} )\n\t\t\t);\n\t\t\tfloorPlane.scale.setScalar( 50 );\n\t\t\tfloorPlane.rotation.x = - Math.PI / 2;\n\t\t\tfloorPlane.position.y = 0.075;\n\t\t\tgroup.add( floorPlane );\n\n\t\t\t// create the scene generator for updating skinned meshes quickly\n\t\t\treturn {\n\t\t\t\tscene: group,\n\t\t\t\tsceneGenerator: new DynamicPathTracingSceneGenerator( group ),\n\t\t\t\tmixer,\n\t\t\t\taction,\n\t\t\t};\n\n\t\t} );\n\n\treturn gltfPromise;\n\n}\n\nfunction onResize() {\n\n\tconst w = Math.min( 700, window.innerWidth );\n\tconst h = Math.floor( w * 3 / 4 );\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h, false );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\t// update the dom elements\n\trenderer.domElement.style.width = `${ w }px`;\n\tvideoEl.style.width = `${ w }px`;\n\n}\n\nfunction regenerateScene() {\n\n\tconst { scene, sceneGenerator } = model;\n\tscene.updateMatrixWorld( true );\n\tsceneInfo = sceneGenerator.generate();\n\n\tconst { bvh, textures, materials } = sceneInfo;\n\tconst geometry = bvh.geometry;\n\tconst material = ptRenderer.material;\n\n\tmaterial.bvh.updateFrom( bvh );\n\tmaterial.attributesArray.updateFrom(\n\t\tgeometry.attributes.normal,\n\t\tgeometry.attributes.tangent,\n\t\tgeometry.attributes.uv,\n\t\tgeometry.attributes.color,\n\t);\n\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\tmaterial.materials.updateFrom( materials, textures );\n\n\tptRenderer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst isRecording = CanvasCapture.isRecording();\n\tconst displayingVideo = params.displayVideo && ! isRecording && videoUrl !== '';\n\tif ( displayingVideo ) {\n\n\t\tvideoEl.style.display = 'inline-block';\n\n\t} else {\n\n\t\tvideoEl.style.display = 'none';\n\t\tcontrols.enabled = ! isRecording;\n\t\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\t\tptRenderer.material.bounces = params.bounces;\n\n\t\tcamera.updateMatrixWorld();\n\n\t\t// render the samples\n\t\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\t\t// if we're recording and we hit the target samples then record the frame step the animation forward\n\t\t\tif ( isRecording && ptRenderer.samples >= params.samples ) {\n\n\t\t\t\tCanvasCapture.recordFrame();\n\t\t\t\trecordedFrames ++;\n\n\t\t\t\t// stop recording if we've hit enough frames\n\t\t\t\tif ( recordedFrames >= params.frameRate * params.duration ) {\n\n\t\t\t\t\tCanvasCapture.stopRecord();\n\n\t\t\t\t\trecordedFrames = 0;\n\t\t\t\t\trebuildGUI();\n\n\t\t\t\t}\n\n\t\t\t\t// update the camera transform and update the geometry\n\t\t\t\tconst angle = params.rotation / Math.ceil( params.frameRate * animationDuration );\n\t\t\t\tcamera.position.applyAxisAngle( UP_AXIS, angle );\n\t\t\t\tcontrols.update();\n\t\t\t\tcamera.updateMatrixWorld();\n\n\t\t\t\tconst delta = 1 / params.frameRate;\n\t\t\t\tmodel.mixer.update( delta );\n\n\t\t\t\tregenerateScene();\n\n\t\t\t}\n\n\t\t\tptRenderer.update();\n\n\t\t}\n\n\t\t// rasterize if we don't have a full path trace render\n\t\tif ( ptRenderer.samples < 1 ) {\n\n\t\t\trenderer.render( scene, camera );\n\n\t\t}\n\n\t\t// render the path traced image\n\t\trenderer.autoClear = false;\n\t\tfsQuad.render( renderer );\n\t\trenderer.autoClear = true;\n\n\t}\n\n\t// update the stats display\n\tif ( isRecording ) {\n\n\t\tconst total = Math.ceil( params.frameRate * params.duration );\n\t\tconst percStride = 1 / total;\n\t\tconst samplesPerc = ptRenderer.samples / params.samples;\n\t\tconst percentDone = ( samplesPerc + recordedFrames ) * percStride;\n\t\tsamplesEl.innerText = `Frame Samples        : ${ Math.floor( ptRenderer.samples ) }\\n`;\n\t\tsamplesEl.innerText += `Frames Rendered      : ${ recordedFrames } / ${ total }\\n`;\n\t\tsamplesEl.innerText += `Rendering Completion : ${ ( percentDone * 100 ).toFixed( 2 ) }%`;\n\n\t} else {\n\n\t\tsamplesEl.innerText = '';\n\t\tsamplesEl.innerText += `Samples : ${ Math.floor( ptRenderer.samples ) }`;\n\n\t}\n\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasCapture\"] = factory();\n\telse\n\t\troot[\"CanvasCapture\"] = factory();\n})(self, () => {\nreturn ","const resolveURL = require('resolve-url');\nconst { devDependencies } = require('../../package.json');\n\n/*\n * Default options for browser environment\n */\nmodule.exports = {\n  corePath: process.env.NODE_ENV === 'development'\n    ? resolveURL('/node_modules/@ffmpeg/core/dist/ffmpeg-core.js')\n    : `https://unpkg.com/@ffmpeg/core@${devDependencies['@ffmpeg/core'].substring(1)}/dist/ffmpeg-core.js`,\n};\n","const resolveURL = require('resolve-url');\n\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\nmodule.exports = async (_data) => {\n  let data = _data;\n  if (typeof _data === 'undefined') {\n    return new Uint8Array();\n  }\n\n  if (typeof _data === 'string') {\n    /* From base64 format */\n    if (/data:_data\\/([a-zA-Z]*);base64,([^\"]*)/.test(_data)) {\n      data = atob(_data.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    /* From remote server/URL */\n    } else {\n      const res = await fetch(resolveURL(_data));\n      data = await res.arrayBuffer();\n    }\n  /* From Blob or File */\n  } else if (_data instanceof File || _data instanceof Blob) {\n    data = await readFromBlobOrFile(_data);\n  }\n\n  return new Uint8Array(data);\n};\n","/* eslint-disable no-undef */\nconst resolveURL = require('resolve-url');\nconst { log } = require('../utils/log');\n\n/*\n * Fetch data from remote URL and convert to blob URL\n * to avoid CORS issue\n */\nconst toBlobURL = async (url, mimeType) => {\n  log('info', `fetch ${url}`);\n  const buf = await (await fetch(url)).arrayBuffer();\n  log('info', `${url} file size = ${buf.byteLength} bytes`);\n  const blob = new Blob([buf], { type: mimeType });\n  const blobURL = URL.createObjectURL(blob);\n  log('info', `${url} blob URL = ${blobURL}`);\n  return blobURL;\n};\n\nmodule.exports = async ({ corePath: _corePath }) => {\n  if (typeof _corePath !== 'string') {\n    throw Error('corePath should be a string!');\n  }\n  const coreRemotePath = resolveURL(_corePath);\n  const corePath = await toBlobURL(\n    coreRemotePath,\n    'application/javascript',\n  );\n  const wasmPath = await toBlobURL(\n    coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.wasm'),\n    'application/wasm',\n  );\n  const workerPath = await toBlobURL(\n    coreRemotePath.replace('ffmpeg-core.js', 'ffmpeg-core.worker.js'),\n    'application/javascript',\n  );\n  if (typeof createFFmpegCore === 'undefined') {\n    return new Promise((resolve) => {\n      const script = document.createElement('script');\n      const eventHandler = () => {\n        script.removeEventListener('load', eventHandler);\n        log('info', 'ffmpeg-core.js script loaded');\n        resolve({\n          createFFmpegCore,\n          corePath,\n          wasmPath,\n          workerPath,\n        });\n      };\n      script.src = corePath;\n      script.type = 'text/javascript';\n      script.addEventListener('load', eventHandler);\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n  log('info', 'ffmpeg-core.js script is loaded already');\n  return Promise.resolve({\n    createFFmpegCore,\n    corePath,\n    wasmPath,\n    workerPath,\n  });\n};\n","const defaultOptions = require('./defaultOptions');\nconst getCreateFFmpegCore = require('./getCreateFFmpegCore');\nconst fetchFile = require('./fetchFile');\n\nmodule.exports = {\n  defaultOptions,\n  getCreateFFmpegCore,\n  fetchFile,\n};\n","module.exports = {\n  defaultArgs: [\n    /* args[0] is always the binary path */\n    './ffmpeg',\n    /* Disable interaction mode */\n    '-nostdin',\n    /* Force to override output file */\n    '-y',\n  ],\n  baseOptions: {\n    /* Flag to turn on/off log messages in console */\n    log: false,\n    /*\n     * Custom logger to get ffmpeg.wasm output messages.\n     * a sample logger looks like this:\n     *\n     * ```\n     * logger = ({ type, message }) => {\n     *   console.log(type, message);\n     * }\n     * ```\n     *\n     * type can be one of following:\n     *\n     * info: internal workflow debug messages\n     * fferr: ffmpeg native stderr output\n     * ffout: ffmpeg native stdout output\n     */\n    logger: () => {},\n    /*\n     * Progress handler to get current progress of ffmpeg command.\n     * a sample progress handler looks like this:\n     *\n     * ```\n     * progress = ({ ratio }) => {\n     *   console.log(ratio);\n     * }\n     * ```\n     *\n     * ratio is a float number between 0 to 1.\n     */\n    progress: () => {},\n    /*\n     * Path to find/download ffmpeg.wasm-core,\n     * this value should be overwriten by `defaultOptions` in\n     * each environment.\n     */\n    corePath: '',\n  },\n};\n","const { defaultArgs, baseOptions } = require('./config');\nconst { setLogging, setCustomLogger, log } = require('./utils/log');\nconst parseProgress = require('./utils/parseProgress');\nconst parseArgs = require('./utils/parseArgs');\nconst { defaultOptions, getCreateFFmpegCore } = require('./node');\nconst { version } = require('../package.json');\n\nconst NO_LOAD = Error('ffmpeg.wasm is not ready, make sure you have completed load().');\n\nmodule.exports = (_options = {}) => {\n  const {\n    log: logging,\n    logger,\n    progress: optProgress,\n    ...options\n  } = {\n    ...baseOptions,\n    ...defaultOptions,\n    ..._options,\n  };\n  let Core = null;\n  let ffmpeg = null;\n  let runResolve = null;\n  let running = false;\n  let progress = optProgress;\n  const detectCompletion = (message) => {\n    if (message === 'FFMPEG_END' && runResolve !== null) {\n      runResolve();\n      runResolve = null;\n      running = false;\n    }\n  };\n  const parseMessage = ({ type, message }) => {\n    log(type, message);\n    parseProgress(message, progress);\n    detectCompletion(message);\n  };\n\n  /*\n   * Load ffmpeg.wasm-core script.\n   * In browser environment, the ffmpeg.wasm-core script is fetch from\n   * CDN and can be assign to a local path by assigning `corePath`.\n   * In node environment, we use dynamic require and the default `corePath`\n   * is `$ffmpeg/core`.\n   *\n   * Typically the load() func might take few seconds to minutes to complete,\n   * better to do it as early as possible.\n   *\n   */\n  const load = async () => {\n    log('info', 'load ffmpeg-core');\n    if (Core === null) {\n      log('info', 'loading ffmpeg-core');\n      /*\n       * In node environment, all paths are undefined as there\n       * is no need to set them.\n       */\n      const {\n        createFFmpegCore,\n        corePath,\n        workerPath,\n        wasmPath,\n      } = await getCreateFFmpegCore(options);\n      Core = await createFFmpegCore({\n        /*\n         * Assign mainScriptUrlOrBlob fixes chrome extension web worker issue\n         * as there is no document.currentScript in the context of content_scripts\n         */\n        mainScriptUrlOrBlob: corePath,\n        printErr: (message) => parseMessage({ type: 'fferr', message }),\n        print: (message) => parseMessage({ type: 'ffout', message }),\n        /*\n         * locateFile overrides paths of files that is loaded by main script (ffmpeg-core.js).\n         * It is critical for browser environment and we override both wasm and worker paths\n         * as we are using blob URL instead of original URL to avoid cross origin issues.\n         */\n        locateFile: (path, prefix) => {\n          if (typeof window !== 'undefined') {\n            if (typeof wasmPath !== 'undefined'\n              && path.endsWith('ffmpeg-core.wasm')) {\n              return wasmPath;\n            }\n            if (typeof workerPath !== 'undefined'\n              && path.endsWith('ffmpeg-core.worker.js')) {\n              return workerPath;\n            }\n          }\n          return prefix + path;\n        },\n      });\n      ffmpeg = Core.cwrap('proxy_main', 'number', ['number', 'number']);\n      log('info', 'ffmpeg-core loaded');\n    } else {\n      throw Error('ffmpeg.wasm was loaded, you should not load it again, use ffmpeg.isLoaded() to check next time.');\n    }\n  };\n\n  /*\n   * Determine whether the Core is loaded.\n   */\n  const isLoaded = () => Core !== null;\n\n  /*\n   * Run ffmpeg command.\n   * This is the major function in ffmpeg.wasm, you can just imagine it\n   * as ffmpeg native cli and what you need to pass is the same.\n   *\n   * For example, you can convert native command below:\n   *\n   * ```\n   * $ ffmpeg -i video.avi -c:v libx264 video.mp4\n   * ```\n   *\n   * To\n   *\n   * ```\n   * await ffmpeg.run('-i', 'video.avi', '-c:v', 'libx264', 'video.mp4');\n   * ```\n   *\n   */\n  const run = (..._args) => {\n    log('info', `run ffmpeg command: ${_args.join(' ')}`);\n    if (Core === null) {\n      throw NO_LOAD;\n    } else if (running) {\n      throw Error('ffmpeg.wasm can only run one command at a time');\n    } else {\n      running = true;\n      return new Promise((resolve) => {\n        const args = [...defaultArgs, ..._args].filter((s) => s.length !== 0);\n        runResolve = resolve;\n        ffmpeg(...parseArgs(Core, args));\n      });\n    }\n  };\n\n  /*\n   * Run FS operations.\n   * For input/output file of ffmpeg.wasm, it is required to save them to MEMFS\n   * first so that ffmpeg.wasm is able to consume them. Here we rely on the FS\n   * methods provided by Emscripten.\n   *\n   * Common methods to use are:\n   * ffmpeg.FS('writeFile', 'video.avi', new Uint8Array(...)): writeFile writes\n   * data to MEMFS. You need to use Uint8Array for binary data.\n   * ffmpeg.FS('readFile', 'video.mp4'): readFile from MEMFS.\n   * ffmpeg.FS('unlink', 'video.map'): delete file from MEMFS.\n   *\n   * For more info, check https://emscripten.org/docs/api_reference/Filesystem-API.html\n   *\n   */\n  const FS = (method, ...args) => {\n    log('info', `run FS.${method} ${args.map((arg) => (typeof arg === 'string' ? arg : `<${arg.length} bytes binary file>`)).join(' ')}`);\n    if (Core === null) {\n      throw NO_LOAD;\n    } else {\n      let ret = null;\n      try {\n        ret = Core.FS[method](...args);\n      } catch (e) {\n        if (method === 'readdir') {\n          throw Error(`ffmpeg.FS('readdir', '${args[0]}') error. Check if the path exists, ex: ffmpeg.FS('readdir', '/')`);\n        } else if (method === 'readFile') {\n          throw Error(`ffmpeg.FS('readFile', '${args[0]}') error. Check if the path exists`);\n        } else {\n          throw Error('Oops, something went wrong in FS operation.');\n        }\n      }\n      return ret;\n    }\n  };\n\n  /**\n   * forcibly terminate the ffmpeg program.\n   */\n  const exit = () => {\n    if (Core === null) {\n      throw NO_LOAD;\n    } else {\n      running = false;\n      Core.exit(1);\n      Core = null;\n      ffmpeg = null;\n      runResolve = null;\n    }\n  };\n\n  const setProgress = (_progress) => {\n    progress = _progress;\n  };\n\n  const setLogger = (_logger) => {\n    setCustomLogger(_logger);\n  };\n\n  setLogging(logging);\n  setCustomLogger(logger);\n\n  log('info', `use ffmpeg.wasm v${version}`);\n\n  return {\n    setProgress,\n    setLogger,\n    setLogging,\n    load,\n    isLoaded,\n    run,\n    exit,\n    FS,\n  };\n};\n","let logging = false;\nlet customLogger = () => {};\n\nconst setLogging = (_logging) => {\n  logging = _logging;\n};\n\nconst setCustomLogger = (logger) => {\n  customLogger = logger;\n};\n\nconst log = (type, message) => {\n  customLogger({ type, message });\n  if (logging) {\n    console.log(`[${type}] ${message}`);\n  }\n};\n\nmodule.exports = {\n  logging,\n  setLogging,\n  setCustomLogger,\n  log,\n};\n","module.exports = (Core, args) => {\n  const argsPtr = Core._malloc(args.length * Uint32Array.BYTES_PER_ELEMENT);\n  args.forEach((s, idx) => {\n    const buf = Core._malloc(s.length + 1);\n    Core.writeAsciiToMemory(s, buf);\n    Core.setValue(argsPtr + (Uint32Array.BYTES_PER_ELEMENT * idx), buf, 'i32');\n  });\n  return [args.length, argsPtr];\n};\n","let duration = 0;\nlet ratio = 0;\n\nconst ts2sec = (ts) => {\n  const [h, m, s] = ts.split(':');\n  return (parseFloat(h) * 60 * 60) + (parseFloat(m) * 60) + parseFloat(s);\n};\n\nmodule.exports = (message, progress) => {\n  if (typeof message === 'string') {\n    if (message.startsWith('  Duration')) {\n      const ts = message.split(', ')[0].split(': ')[1];\n      const d = ts2sec(ts);\n      progress({ duration: d, ratio });\n      if (duration === 0 || duration > d) {\n        duration = d;\n      }\n    } else if (message.startsWith('frame') || message.startsWith('size')) {\n      const ts = message.split('time=')[1].split(' ')[0];\n      const t = ts2sec(ts);\n      ratio = t / duration;\n      progress({ ratio, time: t });\n    } else if (message.startsWith('video:')) {\n      progress({ ratio: 1 });\n      duration = 0;\n    }\n  }\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeDpiBlob = changeDpiBlob;\nexports.changeDpiDataUrl = changeDpiDataUrl;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createPngDataTable() {\n  /* Table of CRCs of all 8-bit messages. */\n  var crcTable = new Int32Array(256);\n  for (var n = 0; n < 256; n++) {\n    var c = n;\n    for (var k = 0; k < 8; k++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable[n] = c;\n  }\n  return crcTable;\n}\n\nfunction calcCrc(buf) {\n  var c = -1;\n  if (!pngDataTable) pngDataTable = createPngDataTable();\n  for (var n = 0; n < buf.length; n++) {\n    c = pngDataTable[(c ^ buf[n]) & 0xFF] ^ c >>> 8;\n  }\n  return c ^ -1;\n}\n\nvar pngDataTable = void 0;\n\nvar PNG = 'image/png';\nvar JPEG = 'image/jpeg';\n\n// those are 3 possible signature of the physBlock in base64.\n// the pHYs signature block is preceed by the 4 bytes of lenght. The length of\n// the block is always 9 bytes. So a phys block has always this signature:\n// 0 0 0 9 p H Y s.\n// However the data64 encoding aligns we will always find one of those 3 strings.\n// this allow us to find this particular occurence of the pHYs block without\n// converting from b64 back to string\nvar b64PhysSignature1 = 'AAlwSFlz';\nvar b64PhysSignature2 = 'AAAJcEhZ';\nvar b64PhysSignature3 = 'AAAACXBI';\n\nvar _P = 'p'.charCodeAt(0);\nvar _H = 'H'.charCodeAt(0);\nvar _Y = 'Y'.charCodeAt(0);\nvar _S = 's'.charCodeAt(0);\n\nfunction changeDpiBlob(blob, dpi) {\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var headerChunk = blob.slice(0, 33);\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.onload = function () {\n      var dataArray = new Uint8Array(fileReader.result);\n      var tail = blob.slice(33);\n      var changedArray = changeDpiOnArray(dataArray, dpi, blob.type);\n      resolve(new Blob([changedArray, tail], { type: blob.type }));\n    };\n    fileReader.readAsArrayBuffer(headerChunk);\n  });\n}\n\nfunction changeDpiDataUrl(base64Image, dpi) {\n  var dataSplitted = base64Image.split(',');\n  var format = dataSplitted[0];\n  var body = dataSplitted[1];\n  var type = void 0;\n  var headerLength = void 0;\n  var overwritepHYs = false;\n  if (format.indexOf(PNG) !== -1) {\n    type = PNG;\n    var b64Index = detectPhysChunkFromDataUrl(body);\n    // 28 bytes in dataUrl are 21bytes, length of phys chunk with everything inside.\n    if (b64Index >= 0) {\n      headerLength = Math.ceil((b64Index + 28) / 3) * 4;\n      overwritepHYs = true;\n    } else {\n      headerLength = 33 / 3 * 4;\n    }\n  }\n  if (format.indexOf(JPEG) !== -1) {\n    type = JPEG;\n    headerLength = 18 / 3 * 4;\n  }\n  // 33 bytes are ok for pngs and jpegs\n  // to contain the information.\n  var stringHeader = body.substring(0, headerLength);\n  var restOfData = body.substring(headerLength);\n  var headerBytes = atob(stringHeader);\n  var dataArray = new Uint8Array(headerBytes.length);\n  for (var i = 0; i < dataArray.length; i++) {\n    dataArray[i] = headerBytes.charCodeAt(i);\n  }\n  var finalArray = changeDpiOnArray(dataArray, dpi, type, overwritepHYs);\n  var base64Header = btoa(String.fromCharCode.apply(String, _toConsumableArray(finalArray)));\n  return [format, ',', base64Header, restOfData].join('');\n}\n\nfunction detectPhysChunkFromDataUrl(data) {\n  var b64index = data.indexOf(b64PhysSignature1);\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature2);\n  }\n  if (b64index === -1) {\n    b64index = data.indexOf(b64PhysSignature3);\n  }\n  // if b64index === -1 chunk is not found\n  return b64index;\n}\n\nfunction searchStartOfPhys(data) {\n  var length = data.length - 1;\n  // we check from the end since we cut the string in proximity of the header\n  // the header is within 21 bytes from the end.\n  for (var i = length; i >= 4; i--) {\n    if (data[i - 4] === 9 && data[i - 3] === _P && data[i - 2] === _H && data[i - 1] === _Y && data[i] === _S) {\n      return i - 3;\n    }\n  }\n}\n\nfunction changeDpiOnArray(dataArray, dpi, format, overwritepHYs) {\n  if (format === JPEG) {\n    dataArray[13] = 1; // 1 pixel per inch or 2 pixel per cm\n    dataArray[14] = dpi >> 8; // dpiX high byte\n    dataArray[15] = dpi & 0xff; // dpiX low byte\n    dataArray[16] = dpi >> 8; // dpiY high byte\n    dataArray[17] = dpi & 0xff; // dpiY low byte\n    return dataArray;\n  }\n  if (format === PNG) {\n    var physChunk = new Uint8Array(13);\n    // chunk header pHYs\n    // 9 bytes of data\n    // 4 bytes of crc\n    // this multiplication is because the standard is dpi per meter.\n    dpi *= 39.3701;\n    physChunk[0] = _P;\n    physChunk[1] = _H;\n    physChunk[2] = _Y;\n    physChunk[3] = _S;\n    physChunk[4] = dpi >>> 24; // dpiX highest byte\n    physChunk[5] = dpi >>> 16; // dpiX veryhigh byte\n    physChunk[6] = dpi >>> 8; // dpiX high byte\n    physChunk[7] = dpi & 0xff; // dpiX low byte\n    physChunk[8] = physChunk[4]; // dpiY highest byte\n    physChunk[9] = physChunk[5]; // dpiY veryhigh byte\n    physChunk[10] = physChunk[6]; // dpiY high byte\n    physChunk[11] = physChunk[7]; // dpiY low byte\n    physChunk[12] = 1; // dot per meter....\n\n    var crc = calcCrc(physChunk);\n\n    var crcChunk = new Uint8Array(4);\n    crcChunk[0] = crc >>> 24;\n    crcChunk[1] = crc >>> 16;\n    crcChunk[2] = crc >>> 8;\n    crcChunk[3] = crc & 0xff;\n\n    if (overwritepHYs) {\n      var startingIndex = searchStartOfPhys(dataArray);\n      dataArray.set(physChunk, startingIndex);\n      dataArray.set(crcChunk, startingIndex + 13);\n      return dataArray;\n    } else {\n      // i need to give back an array of data that is divisible by 3 so that\n      // dataurl encoding gives me integers, for luck this chunk is 17 + 4 = 21\n      // if it was we could add a text chunk contaning some info, untill desired\n      // length is met.\n\n      // chunk structur 4 bytes for length is 9\n      var chunkLength = new Uint8Array(4);\n      chunkLength[0] = 0;\n      chunkLength[1] = 0;\n      chunkLength[2] = 0;\n      chunkLength[3] = 9;\n\n      var finalHeader = new Uint8Array(54);\n      finalHeader.set(dataArray, 0);\n      finalHeader.set(chunkLength, 33);\n      finalHeader.set(physChunk, 37);\n      finalHeader.set(crcChunk, 50);\n      return finalHeader;\n    }\n  }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/*!\n\nJSZip v3.7.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n\n!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=t()}}(function(){return function s(a,o,h){function u(r,t){if(!o[r]){if(!a[r]){var e=\"function\"==typeof require&&require;if(!t&&e)return e(r,!0);if(l)return l(r,!0);var i=new Error(\"Cannot find module '\"+r+\"'\");throw i.code=\"MODULE_NOT_FOUND\",i}var n=o[r]={exports:{}};a[r][0].call(n.exports,function(t){var e=a[r][1][t];return u(e||t)},n,n.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,t=0;t<h.length;t++)u(h[t]);return u}({1:[function(t,e,r){\"use strict\";var c=t(\"./utils\"),d=t(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(t){for(var e,r,i,n,s,a,o,h=[],u=0,l=t.length,f=l,d=\"string\"!==c.getTypeOf(t);u<t.length;)f=l-u,i=d?(e=t[u++],r=u<l?t[u++]:0,u<l?t[u++]:0):(e=t.charCodeAt(u++),r=u<l?t.charCodeAt(u++):0,u<l?t.charCodeAt(u++):0),n=e>>2,s=(3&e)<<4|r>>4,a=1<f?(15&r)<<2|i>>6:64,o=2<f?63&i:64,h.push(p.charAt(n)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(t){var e,r,i,n,s,a,o=0,h=0,u=\"data:\";if(t.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(t=t.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\")).length/4;if(t.charAt(t.length-1)===p.charAt(64)&&f--,t.charAt(t.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=d.uint8array?new Uint8Array(0|f):new Array(0|f);o<t.length;)e=p.indexOf(t.charAt(o++))<<2|(n=p.indexOf(t.charAt(o++)))>>4,r=(15&n)<<4|(s=p.indexOf(t.charAt(o++)))>>2,i=(3&s)<<6|(a=p.indexOf(t.charAt(o++))),l[h++]=e,64!==s&&(l[h++]=r),64!==a&&(l[h++]=i);return l}},{\"./support\":30,\"./utils\":32}],2:[function(t,e,r){\"use strict\";var i=t(\"./external\"),n=t(\"./stream/DataWorker\"),s=t(\"./stream/Crc32Probe\"),a=t(\"./stream/DataLengthProbe\");function o(t,e,r,i,n){this.compressedSize=t,this.uncompressedSize=e,this.crc32=r,this.compression=i,this.compressedContent=n}o.prototype={getContentWorker:function(){var t=new n(i.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),e=this;return t.on(\"end\",function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),t},getCompressedWorker:function(){return new n(i.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(t,e,r){return t.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(e.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",e)},e.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(t,e,r){\"use strict\";var i=t(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(t){return new i(\"STORE compression\")},uncompressWorker:function(){return new i(\"STORE decompression\")}},r.DEFLATE=t(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(t,e,r){\"use strict\";var i=t(\"./utils\");var o=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e){return void 0!==t&&t.length?\"string\"!==i.getTypeOf(t)?function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t}(0|e,t,t.length,0):function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e.charCodeAt(a))];return-1^t}(0|e,t,t.length,0):0}},{\"./utils\":32}],5:[function(t,e,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(t,e,r){\"use strict\";var i=null;i=\"undefined\"!=typeof Promise?Promise:t(\"lie\"),e.exports={Promise:i}},{lie:37}],7:[function(t,e,r){\"use strict\";var i=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,n=t(\"pako\"),s=t(\"./utils\"),a=t(\"./stream/GenericWorker\"),o=i?\"uint8array\":\"array\";function h(t,e){a.call(this,\"FlateWorker/\"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,t.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new n[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var e=this;this._pako.onData=function(t){e.push({data:t,meta:e.meta})}},r.compressWorker=function(t){return new h(\"Deflate\",t)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(t,e,r){\"use strict\";function A(t,e){var r,i=\"\";for(r=0;r<e;r++)i+=String.fromCharCode(255&t),t>>>=8;return i}function i(t,e,r,i,n,s){var a,o,h=t.file,u=t.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),d=I.transformTo(\"string\",O.utf8encode(h.name)),c=h.comment,p=I.transformTo(\"string\",s(c)),m=I.transformTo(\"string\",O.utf8encode(c)),_=d.length!==h.name.length,g=m.length!==c.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};e&&!r||(x.crc32=t.crc32,x.compressedSize=t.compressedSize,x.uncompressedSize=t.uncompressedSize);var S=0;e&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===n?(C=798,z|=function(t,e){var r=t;return t||(r=e?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(t){return 63&(t||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+d,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(i,4)+f+b+p}}var I=t(\"../utils\"),n=t(\"../stream/GenericWorker\"),O=t(\"../utf8\"),B=t(\"../crc32\"),R=t(\"../signature\");function s(t,e,r,i){n.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=r,this.encodeFileName=i,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,n),s.prototype.push=function(t){var e=t.meta.percent||0,r=this.entriesCount,i=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,n.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:r?(e+100*(r-i-1))/r:100}}))},s.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var r=i(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,r=i(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),e)this.push({data:function(t){return R.DATA_DESCRIPTOR+A(t.crc32,4)+A(t.compressedSize,4)+A(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var r=this.bytesWritten-t,i=function(t,e,r,i,n){var s=I.transformTo(\"string\",n(i));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(t,2)+A(t,2)+A(e,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,t,this.zipComment,this.encodeFileName);this.push({data:i,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on(\"data\",function(t){e.processChunk(t)}),t.on(\"end\",function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()}),t.on(\"error\",function(t){e.error(t)}),this},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(t){var e=this._sources;if(!n.prototype.error.call(this,t))return!1;for(var r=0;r<e.length;r++)try{e[r].error(t)}catch(t){}return!0},s.prototype.lock=function(){n.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},e.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(t,e,r){\"use strict\";var u=t(\"../compressions\"),i=t(\"./ZipFileWorker\");r.generateWorker=function(t,a,e){var o=new i(a.streamFiles,e,a.platform,a.encodeFileName),h=0;try{t.forEach(function(t,e){h++;var r=function(t,e){var r=t||e,i=u[r];if(!i)throw new Error(r+\" is not a valid compression method !\");return i}(e.options.compression,a.compression),i=e.options.compressionOptions||a.compressionOptions||{},n=e.dir,s=e.date;e._compressWorker(r,i).withStreamInfo(\"file\",{name:t,dir:n,date:s,comment:e.comment||\"\",unixPermissions:e.unixPermissions,dosPermissions:e.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(t){o.error(t)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(t,e,r){\"use strict\";function i(){if(!(this instanceof i))return new i;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var t=new i;for(var e in this)\"function\"!=typeof this[e]&&(t[e]=this[e]);return t}}(i.prototype=t(\"./object\")).loadAsync=t(\"./load\"),i.support=t(\"./support\"),i.defaults=t(\"./defaults\"),i.version=\"3.7.1\",i.loadAsync=function(t,e){return(new i).loadAsync(t,e)},i.external=t(\"./external\"),e.exports=i},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(t,e,r){\"use strict\";var i=t(\"./utils\"),n=t(\"./external\"),o=t(\"./utf8\"),h=t(\"./zipEntries\"),s=t(\"./stream/Crc32Probe\"),u=t(\"./nodejsUtils\");function l(i){return new n.Promise(function(t,e){var r=i.decompressed.getContentWorker().pipe(new s);r.on(\"error\",function(t){e(t)}).on(\"end\",function(){r.streamInfo.crc32!==i.decompressed.crc32?e(new Error(\"Corrupted zip : CRC32 mismatch\")):t()}).resume()})}e.exports=function(t,s){var a=this;return s=i.extend(s||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:o.utf8decode}),u.isNode&&u.isStream(t)?n.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):i.prepareContent(\"the loaded zip file\",t,!0,s.optimizedBinaryString,s.base64).then(function(t){var e=new h(s);return e.load(t),e}).then(function(t){var e=[n.Promise.resolve(t)],r=t.files;if(s.checkCRC32)for(var i=0;i<r.length;i++)e.push(l(r[i]));return n.Promise.all(e)}).then(function(t){for(var e=t.shift(),r=e.files,i=0;i<r.length;i++){var n=r[i];a.file(n.fileNameStr,n.decompressed,{binary:!0,optimizedBinaryString:!0,date:n.date,dir:n.dir,comment:n.fileCommentStr.length?n.fileCommentStr:null,unixPermissions:n.unixPermissions,dosPermissions:n.dosPermissions,createFolders:s.createFolders})}return e.zipComment.length&&(a.comment=e.zipComment),a})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"../stream/GenericWorker\");function s(t,e){n.call(this,\"Nodejs stream input adapter for \"+t),this._upstreamEnded=!1,this._bindStream(e)}i.inherits(s,n),s.prototype._bindStream=function(t){var e=this;(this._stream=t).pause(),t.on(\"data\",function(t){e.push({data:t,meta:{percent:0}})}).on(\"error\",function(t){e.isPaused?this.generatedError=t:e.error(t)}).on(\"end\",function(){e.isPaused?e._upstreamEnded=!0:e.end()})},s.prototype.pause=function(){return!!n.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},e.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(t,e,r){\"use strict\";var n=t(\"readable-stream\").Readable;function i(t,e,r){n.call(this,e),this._helper=t;var i=this;t.on(\"data\",function(t,e){i.push(t)||i._helper.pause(),r&&r(e)}).on(\"error\",function(t){i.emit(\"error\",t)}).on(\"end\",function(){i.push(null)})}t(\"../utils\").inherits(i,n),i.prototype._read=function(){this._helper.resume()},e.exports=i},{\"../utils\":32,\"readable-stream\":16}],14:[function(t,e,r){\"use strict\";e.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(t,e){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(t,e);if(\"number\"==typeof t)throw new Error('The \"data\" argument must not be a number');return new Buffer(t,e)},allocBuffer:function(t){if(Buffer.alloc)return Buffer.alloc(t);var e=new Buffer(t);return e.fill(0),e},isBuffer:function(t){return Buffer.isBuffer(t)},isStream:function(t){return t&&\"function\"==typeof t.on&&\"function\"==typeof t.pause&&\"function\"==typeof t.resume}}},{}],15:[function(t,e,r){\"use strict\";function s(t,e,r){var i,n=u.getTypeOf(e),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(t=g(t)),s.createFolders&&(i=_(t))&&b.call(this,i,!0);var a=\"string\"===n&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(e instanceof d&&0===e.uncompressedSize||s.dir||!e||0===e.length)&&(s.base64=!1,s.binary=!0,e=\"\",s.compression=\"STORE\",n=\"string\");var o=null;o=e instanceof d||e instanceof l?e:p.isNode&&p.isStream(e)?new m(t,e):u.prepareContent(t,e,s.binary,s.optimizedBinaryString,s.base64);var h=new c(t,o,s);this.files[t]=h}var n=t(\"./utf8\"),u=t(\"./utils\"),l=t(\"./stream/GenericWorker\"),a=t(\"./stream/StreamHelper\"),f=t(\"./defaults\"),d=t(\"./compressedObject\"),c=t(\"./zipObject\"),o=t(\"./generate\"),p=t(\"./nodejsUtils\"),m=t(\"./nodejs/NodejsStreamInputAdapter\"),_=function(t){\"/\"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf(\"/\");return 0<e?t.substring(0,e):\"\"},g=function(t){return\"/\"!==t.slice(-1)&&(t+=\"/\"),t},b=function(t,e){return e=void 0!==e?e:f.createFolders,t=g(t),this.files[t]||s.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function h(t){return\"[object RegExp]\"===Object.prototype.toString.call(t)}var i={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(t){var e,r,i;for(e in this.files)i=this.files[e],(r=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(r,i)},filter:function(r){var i=[];return this.forEach(function(t,e){r(t,e)&&i.push(e)}),i},file:function(t,e,r){if(1!==arguments.length)return t=this.root+t,s.call(this,t,e,r),this;if(h(t)){var i=t;return this.filter(function(t,e){return!e.dir&&i.test(t)})}var n=this.files[this.root+t];return n&&!n.dir?n:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(t,e){return e.dir&&r.test(t)});var t=this.root+r,e=b.call(this,t),i=this.clone();return i.root=e.name,i},remove:function(r){r=this.root+r;var t=this.files[r];if(t||(\"/\"!==r.slice(-1)&&(r+=\"/\"),t=this.files[r]),t&&!t.dir)delete this.files[r];else for(var e=this.filter(function(t,e){return e.name.slice(0,r.length)===r}),i=0;i<e.length;i++)delete this.files[e[i].name];return this},generate:function(t){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(t){var e,r={};try{if((r=u.extend(t||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:n.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var i=r.comment||this.comment||\"\";e=o.generateWorker(this,r,i)}catch(t){(e=new l(\"error\")).error(t)}return new a(e,r.type||\"string\",r.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type=\"nodebuffer\"),this.generateInternalStream(t).toNodejsStream(e)}};e.exports=i},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(t,e,r){e.exports=t(\"stream\")},{stream:void 0}],17:[function(t,e,r){\"use strict\";var i=t(\"./DataReader\");function n(t){i.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}t(\"../utils\").inherits(n,i),n.prototype.byteAt=function(t){return this.data[this.zero+t]},n.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),r=t.charCodeAt(1),i=t.charCodeAt(2),n=t.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===e&&this.data[s+1]===r&&this.data[s+2]===i&&this.data[s+3]===n)return s-this.zero;return-1},n.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),r=t.charCodeAt(1),i=t.charCodeAt(2),n=t.charCodeAt(3),s=this.readData(4);return e===s[0]&&r===s[1]&&i===s[2]&&n===s[3]},n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./DataReader\":18}],18:[function(t,e,r){\"use strict\";var i=t(\"../utils\");function n(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}n.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+t+\"). Corrupted zip ?\")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(t){},readInt:function(t){var e,r=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)r=(r<<8)+this.byteAt(e);return this.index+=t,r},readString:function(t){return i.transformTo(\"string\",this.readData(t))},readData:function(t){},lastIndexOfSignature:function(t){},readAndCheckSignature:function(t){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},e.exports=n},{\"../utils\":32}],19:[function(t,e,r){\"use strict\";var i=t(\"./Uint8ArrayReader\");function n(t){i.call(this,t)}t(\"../utils\").inherits(n,i),n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(t,e,r){\"use strict\";var i=t(\"./DataReader\");function n(t){i.call(this,t)}t(\"../utils\").inherits(n,i),n.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},n.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},n.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./DataReader\":18}],21:[function(t,e,r){\"use strict\";var i=t(\"./ArrayReader\");function n(t){i.call(this,t)}t(\"../utils\").inherits(n,i),n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"../support\"),s=t(\"./ArrayReader\"),a=t(\"./StringReader\"),o=t(\"./NodeBufferReader\"),h=t(\"./Uint8ArrayReader\");e.exports=function(t){var e=i.getTypeOf(t);return i.checkSupport(e),\"string\"!==e||n.uint8array?\"nodebuffer\"===e?new o(t):n.uint8array?new h(i.transformTo(\"uint8array\",t)):new s(i.transformTo(\"array\",t)):new a(t)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(t,e,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(t,e,r){\"use strict\";var i=t(\"./GenericWorker\"),n=t(\"../utils\");function s(t){i.call(this,\"ConvertWorker to \"+t),this.destType=t}n.inherits(s,i),s.prototype.processChunk=function(t){this.push({data:n.transformTo(this.destType,t.data),meta:t.meta})},e.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(t,e,r){\"use strict\";var i=t(\"./GenericWorker\"),n=t(\"../crc32\");function s(){i.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}t(\"../utils\").inherits(s,i),s.prototype.processChunk=function(t){this.streamInfo.crc32=n(t.data,this.streamInfo.crc32||0),this.push(t)},e.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"./GenericWorker\");function s(t){n.call(this,\"DataLengthProbe for \"+t),this.propName=t,this.withStreamInfo(t,0)}i.inherits(s,n),s.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}n.prototype.processChunk.call(this,t)},e.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"./GenericWorker\");function s(t){n.call(this,\"DataWorker\");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,t.then(function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=i.getTypeOf(t),e.isPaused||e._tickAndRepeat()},function(t){e.error(t)})}i.inherits(s,n),s.prototype.cleanUp=function(){n.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,i.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(i.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":t=this.data.substring(this.index,e);break;case\"uint8array\":t=this.data.subarray(this.index,e);break;case\"array\":case\"nodebuffer\":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},e.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(t,e,r){\"use strict\";function i(t){this.name=t||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}i.prototype={push:function(t){this.emit(\"data\",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit(\"error\",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit(\"error\",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var r=0;r<this._listeners[t].length;r++)this._listeners[t][r].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on(\"data\",function(t){e.processChunk(t)}),t.on(\"end\",function(){e.end()}),t.on(\"error\",function(t){e.error(t)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+t:t}},e.exports=i},{}],29:[function(t,e,r){\"use strict\";var h=t(\"../utils\"),n=t(\"./ConvertWorker\"),s=t(\"./GenericWorker\"),u=t(\"../base64\"),i=t(\"../support\"),a=t(\"../external\"),o=null;if(i.nodestream)try{o=t(\"../nodejs/NodejsStreamOutputAdapter\")}catch(t){}function l(t,o){return new a.Promise(function(e,r){var i=[],n=t._internalType,s=t._outputType,a=t._mimeType;t.on(\"data\",function(t,e){i.push(t),o&&o(e)}).on(\"error\",function(t){i=[],r(t)}).on(\"end\",function(){try{var t=function(t,e,r){switch(t){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",e),r);case\"base64\":return u.encode(e);default:return h.transformTo(t,e)}}(s,function(t,e){var r,i=0,n=null,s=0;for(r=0;r<e.length;r++)s+=e[r].length;switch(t){case\"string\":return e.join(\"\");case\"array\":return Array.prototype.concat.apply([],e);case\"uint8array\":for(n=new Uint8Array(s),r=0;r<e.length;r++)n.set(e[r],i),i+=e[r].length;return n;case\"nodebuffer\":return Buffer.concat(e);default:throw new Error(\"concat : unsupported type '\"+t+\"'\")}}(n,i),a);e(t)}catch(t){r(t)}i=[]}).resume()})}function f(t,e,r){var i=e;switch(e){case\"blob\":case\"arraybuffer\":i=\"uint8array\";break;case\"base64\":i=\"string\"}try{this._internalType=i,this._outputType=e,this._mimeType=r,h.checkSupport(i),this._worker=t.pipe(new n(i)),t.lock()}catch(t){this._worker=new s(\"error\"),this._worker.error(t)}}f.prototype={accumulate:function(t){return l(this,t)},on:function(t,e){var r=this;return\"data\"===t?this._worker.on(t,function(t){e.call(r,t.data,t.meta)}):this._worker.on(t,function(){h.delay(e,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},t)}},e.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(t,e,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var i=new ArrayBuffer(0);try{r.blob=0===new Blob([i],{type:\"application/zip\"}).size}catch(t){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);n.append(i),r.blob=0===n.getBlob(\"application/zip\").size}catch(t){r.blob=!1}}}try{r.nodestream=!!t(\"readable-stream\").Readable}catch(t){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(t,e,s){\"use strict\";for(var o=t(\"./utils\"),h=t(\"./support\"),r=t(\"./nodejsUtils\"),i=t(\"./stream/GenericWorker\"),u=new Array(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;u[254]=u[254]=1;function a(){i.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){i.call(this,\"utf-8 encode\")}s.utf8encode=function(t){return h.nodebuffer?r.newBufferFrom(t,\"utf-8\"):function(t){var e,r,i,n,s,a=t.length,o=0;for(n=0;n<a;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),o+=r<128?1:r<2048?2:r<65536?3:4;for(e=h.uint8array?new Uint8Array(o):new Array(o),n=s=0;s<o;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),r<128?e[s++]=r:(r<2048?e[s++]=192|r>>>6:(r<65536?e[s++]=224|r>>>12:(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63),e[s++]=128|r>>>6&63),e[s++]=128|63&r);return e}(t)},s.utf8decode=function(t){return h.nodebuffer?o.transformTo(\"nodebuffer\",t).toString(\"utf-8\"):function(t){var e,r,i,n,s=t.length,a=new Array(2*s);for(e=r=0;e<s;)if((i=t[e++])<128)a[r++]=i;else if(4<(n=u[i]))a[r++]=65533,e+=n-1;else{for(i&=2===n?31:3===n?15:7;1<n&&e<s;)i=i<<6|63&t[e++],n--;1<n?a[r++]=65533:i<65536?a[r++]=i:(i-=65536,a[r++]=55296|i>>10&1023,a[r++]=56320|1023&i)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(t=o.transformTo(h.uint8array?\"uint8array\":\"array\",t))},o.inherits(a,i),a.prototype.processChunk=function(t){var e=o.transformTo(h.uint8array?\"uint8array\":\"array\",t.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=e;(e=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),e.set(r,this.leftOver.length)}else e=this.leftOver.concat(e);this.leftOver=null}var i=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0?e:0===r?e:r+u[t[r]]>e?r:e}(e),n=e;i!==e.length&&(h.uint8array?(n=e.subarray(0,i),this.leftOver=e.subarray(i,e.length)):(n=e.slice(0,i),this.leftOver=e.slice(i,e.length))),this.push({data:s.utf8decode(n),meta:t.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,i),l.prototype.processChunk=function(t){this.push({data:s.utf8encode(t.data),meta:t.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(t,e,a){\"use strict\";var o=t(\"./support\"),h=t(\"./base64\"),r=t(\"./nodejsUtils\"),i=t(\"set-immediate-shim\"),u=t(\"./external\");function n(t){return t}function l(t,e){for(var r=0;r<t.length;++r)e[r]=255&t.charCodeAt(r);return e}a.newBlob=function(e,r){a.checkSupport(\"blob\");try{return new Blob([e],{type:r})}catch(t){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return i.append(e),i.getBlob(r)}catch(t){throw new Error(\"Bug : can't construct the Blob.\")}}};var s={stringifyByChunk:function(t,e,r){var i=[],n=0,s=t.length;if(s<=r)return String.fromCharCode.apply(null,t);for(;n<s;)\"array\"===e||\"nodebuffer\"===e?i.push(String.fromCharCode.apply(null,t.slice(n,Math.min(n+r,s)))):i.push(String.fromCharCode.apply(null,t.subarray(n,Math.min(n+r,s)))),n+=r;return i.join(\"\")},stringifyByChar:function(t){for(var e=\"\",r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(t){return!1}}()}};function f(t){var e=65536,r=a.getTypeOf(t),i=!0;if(\"uint8array\"===r?i=s.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(i=s.applyCanBeUsed.nodebuffer),i)for(;1<e;)try{return s.stringifyByChunk(t,r,e)}catch(t){e=Math.floor(e/2)}return s.stringifyByChar(t)}function d(t,e){for(var r=0;r<t.length;r++)e[r]=t[r];return e}a.applyFromCharCode=f;var c={};c.string={string:n,array:function(t){return l(t,new Array(t.length))},arraybuffer:function(t){return c.string.uint8array(t).buffer},uint8array:function(t){return l(t,new Uint8Array(t.length))},nodebuffer:function(t){return l(t,r.allocBuffer(t.length))}},c.array={string:f,array:n,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return r.newBufferFrom(t)}},c.arraybuffer={string:function(t){return f(new Uint8Array(t))},array:function(t){return d(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:n,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return r.newBufferFrom(new Uint8Array(t))}},c.uint8array={string:f,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:n,nodebuffer:function(t){return r.newBufferFrom(t)}},c.nodebuffer={string:f,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return c.nodebuffer.uint8array(t).buffer},uint8array:function(t){return d(t,new Uint8Array(t.length))},nodebuffer:n},a.transformTo=function(t,e){if(e=e||\"\",!t)return e;a.checkSupport(t);var r=a.getTypeOf(e);return c[r][t](e)},a.getTypeOf=function(t){return\"string\"==typeof t?\"string\":\"[object Array]\"===Object.prototype.toString.call(t)?\"array\":o.nodebuffer&&r.isBuffer(t)?\"nodebuffer\":o.uint8array&&t instanceof Uint8Array?\"uint8array\":o.arraybuffer&&t instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(t){if(!o[t.toLowerCase()])throw new Error(t+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(t){var e,r,i=\"\";for(r=0;r<(t||\"\").length;r++)i+=\"\\\\x\"+((e=t.charCodeAt(r))<16?\"0\":\"\")+e.toString(16).toUpperCase();return i},a.delay=function(t,e,r){i(function(){t.apply(r||null,e||[])})},a.inherits=function(t,e){function r(){}r.prototype=e.prototype,t.prototype=new r},a.extend=function(){var t,e,r={};for(t=0;t<arguments.length;t++)for(e in arguments[t])arguments[t].hasOwnProperty(e)&&void 0===r[e]&&(r[e]=arguments[t][e]);return r},a.prepareContent=function(r,t,i,n,s){return u.Promise.resolve(t).then(function(i){return o.blob&&(i instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(i)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(e,r){var t=new FileReader;t.onload=function(t){e(t.target.result)},t.onerror=function(t){r(t.target.error)},t.readAsArrayBuffer(i)}):i}).then(function(t){var e=a.getTypeOf(t);return e?(\"arraybuffer\"===e?t=a.transformTo(\"uint8array\",t):\"string\"===e&&(s?t=h.decode(t):i&&!0!==n&&(t=function(t){return l(t,o.uint8array?new Uint8Array(t.length):new Array(t.length))}(t))),t):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,\"set-immediate-shim\":54}],33:[function(t,e,r){\"use strict\";var i=t(\"./reader/readerFor\"),n=t(\"./utils\"),s=t(\"./signature\"),a=t(\"./zipEntry\"),o=(t(\"./utf8\"),t(\"./support\"));function h(t){this.files=[],this.loadOptions=t}h.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+n.pretty(e)+\", expected \"+n.pretty(t)+\")\")}},isSignature:function(t,e){var r=this.reader.index;this.reader.setIndex(t);var i=this.reader.readString(4)===e;return this.reader.setIndex(r),i},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=o.uint8array?\"uint8array\":\"array\",r=n.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,r,i=this.zip64EndOfCentralSize-44;0<i;)t=this.reader.readInt(2),e=this.reader.readInt(4),r=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(t=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(t<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(t);var e=t;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===n.MAX_VALUE_16BITS||this.diskWithCentralDirStart===n.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===n.MAX_VALUE_16BITS||this.centralDirRecords===n.MAX_VALUE_16BITS||this.centralDirSize===n.MAX_VALUE_32BITS||this.centralDirOffset===n.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(t),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var i=e-r;if(0<i)this.isSignature(e,s.CENTRAL_FILE_HEADER)||(this.reader.zero=i);else if(i<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(i)+\" bytes.\")},prepareReader:function(t){this.reader=i(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},e.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utf8\":31,\"./utils\":32,\"./zipEntry\":34}],34:[function(t,e,r){\"use strict\";var i=t(\"./reader/readerFor\"),s=t(\"./utils\"),n=t(\"./compressedObject\"),a=t(\"./crc32\"),o=t(\"./utf8\"),h=t(\"./compressions\"),u=t(\"./support\");function l(t,e){this.options=t,this.loadOptions=e}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(t){var e,r;if(t.skip(22),this.fileNameLength=t.readInt(2),r=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(e=function(t){for(var e in h)if(h.hasOwnProperty(e)&&h[e].magic===t)return h[e];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new n(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(t){if(this.extraFields[1]){var e=i(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(t){var e,r,i,n=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<n;)e=t.readInt(2),r=t.readInt(2),i=t.readData(r),this.extraFields[e]={id:e,length:r,value:i};t.setIndex(n)},handleUTF8:function(){var t=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var r=s.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var i=this.findExtraFieldUnicodeComment();if(null!==i)this.fileCommentStr=i;else{var n=s.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(n)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:a(this.fileName)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:a(this.fileComment)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null}},e.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(t,e,r){\"use strict\";function i(t,e,r){this.name=t,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=e,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=t(\"./stream/StreamHelper\"),n=t(\"./stream/DataWorker\"),a=t(\"./utf8\"),o=t(\"./compressedObject\"),h=t(\"./stream/GenericWorker\");i.prototype={internalStream:function(t){var e=null,r=\"string\";try{if(!t)throw new Error(\"No output type specified.\");var i=\"string\"===(r=t.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),e=this._decompressWorker();var n=!this._dataBinary;n&&!i&&(e=e.pipe(new a.Utf8EncodeWorker)),!n&&i&&(e=e.pipe(new a.Utf8DecodeWorker))}catch(t){(e=new h(\"error\")).error(t)}return new s(e,r,\"\")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||\"nodebuffer\").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof o&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,t,e)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new n(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)i.prototype[u[f]]=l;e.exports=i},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(t,l,e){(function(e){\"use strict\";var r,i,t=e.MutationObserver||e.WebKitMutationObserver;if(t){var n=0,s=new t(u),a=e.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=n=++n%2}}else if(e.setImmediate||void 0===e.MessageChannel)r=\"document\"in e&&\"onreadystatechange\"in e.document.createElement(\"script\")?function(){var t=e.document.createElement(\"script\");t.onreadystatechange=function(){u(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(u,0)};else{var o=new e.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var t,e;i=!0;for(var r=h.length;r;){for(e=h,h=[],t=-1;++t<r;)e[t]();r=h.length}i=!1}l.exports=function(t){1!==h.push(t)||i||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(t,e,r){\"use strict\";var n=t(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],i=[\"PENDING\"];function o(t){if(\"function\"!=typeof t)throw new TypeError(\"resolver must be a function\");this.state=i,this.queue=[],this.outcome=void 0,t!==u&&c(this,t)}function h(t,e,r){this.promise=t,\"function\"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(e,r,i){n(function(){var t;try{t=r(i)}catch(t){return l.reject(e,t)}t===e?l.reject(e,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(e,t)})}function d(t){var e=t&&t.then;if(t&&(\"object\"==typeof t||\"function\"==typeof t)&&\"function\"==typeof e)return function(){e.apply(t,arguments)}}function c(e,t){var r=!1;function i(t){r||(r=!0,l.reject(e,t))}function n(t){r||(r=!0,l.resolve(e,t))}var s=p(function(){t(n,i)});\"error\"===s.status&&i(s.value)}function p(t,e){var r={};try{r.value=t(e),r.status=\"success\"}catch(t){r.status=\"error\",r.value=t}return r}(e.exports=o).prototype.finally=function(e){if(\"function\"!=typeof e)return this;var r=this.constructor;return this.then(function(t){return r.resolve(e()).then(function(){return t})},function(t){return r.resolve(e()).then(function(){throw t})})},o.prototype.catch=function(t){return this.then(null,t)},o.prototype.then=function(t,e){if(\"function\"!=typeof t&&this.state===a||\"function\"!=typeof e&&this.state===s)return this;var r=new this.constructor(u);this.state!==i?f(r,this.state===a?t:e,this.outcome):this.queue.push(new h(r,t,e));return r},h.prototype.callFulfilled=function(t){l.resolve(this.promise,t)},h.prototype.otherCallFulfilled=function(t){f(this.promise,this.onFulfilled,t)},h.prototype.callRejected=function(t){l.reject(this.promise,t)},h.prototype.otherCallRejected=function(t){f(this.promise,this.onRejected,t)},l.resolve=function(t,e){var r=p(d,e);if(\"error\"===r.status)return l.reject(t,r.value);var i=r.value;if(i)c(t,i);else{t.state=a,t.outcome=e;for(var n=-1,s=t.queue.length;++n<s;)t.queue[n].callFulfilled(e)}return t},l.reject=function(t,e){t.state=s,t.outcome=e;for(var r=-1,i=t.queue.length;++r<i;)t.queue[r].callRejected(e);return t},o.resolve=function(t){if(t instanceof this)return t;return l.resolve(new this(u),t)},o.reject=function(t){var e=new this(u);return l.reject(e,t)},o.all=function(t){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(t))return this.reject(new TypeError(\"must be an array\"));var i=t.length,n=!1;if(!i)return this.resolve([]);var s=new Array(i),a=0,e=-1,o=new this(u);for(;++e<i;)h(t[e],e);return o;function h(t,e){r.resolve(t).then(function(t){s[e]=t,++a!==i||n||(n=!0,l.resolve(o,s))},function(t){n||(n=!0,l.reject(o,t))})}},o.race=function(t){var e=this;if(\"[object Array]\"!==Object.prototype.toString.call(t))return this.reject(new TypeError(\"must be an array\"));var r=t.length,i=!1;if(!r)return this.resolve([]);var n=-1,s=new this(u);for(;++n<r;)a=t[n],e.resolve(a).then(function(t){i||(i=!0,l.resolve(s,t))},function(t){i||(i=!0,l.reject(s,t))});var a;return s}},{immediate:36}],38:[function(t,e,r){\"use strict\";var i={};(0,t(\"./lib/utils/common\").assign)(i,t(\"./lib/deflate\"),t(\"./lib/inflate\"),t(\"./lib/zlib/constants\")),e.exports=i},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(t,e,r){\"use strict\";var a=t(\"./zlib/deflate\"),o=t(\"./utils/common\"),h=t(\"./utils/strings\"),n=t(\"./zlib/messages\"),s=t(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,d=0,c=8;function p(t){if(!(this instanceof p))return new p(t);this.options=o.assign({level:f,method:c,chunkSize:16384,windowBits:15,memLevel:8,strategy:d,to:\"\"},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(r!==l)throw new Error(n[r]);if(e.header&&a.deflateSetHeader(this.strm,e.header),e.dictionary){var i;if(i=\"string\"==typeof e.dictionary?h.string2buf(e.dictionary):\"[object ArrayBuffer]\"===u.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(r=a.deflateSetDictionary(this.strm,i))!==l)throw new Error(n[r]);this._dict_set=!0}}function i(t,e){var r=new p(e);if(r.push(t,!0),r.err)throw r.msg||n[r.err];return r.result}p.prototype.push=function(t,e){var r,i,n=this.strm,s=this.options.chunkSize;if(this.ended)return!1;i=e===~~e?e:!0===e?4:0,\"string\"==typeof t?n.input=h.string2buf(t):\"[object ArrayBuffer]\"===u.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;do{if(0===n.avail_out&&(n.output=new o.Buf8(s),n.next_out=0,n.avail_out=s),1!==(r=a.deflate(n,i))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==n.avail_out&&(0!==n.avail_in||4!==i&&2!==i)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(n.output,n.next_out))):this.onData(o.shrinkBuf(n.output,n.next_out)))}while((0<n.avail_in||0===n.avail_out)&&1!==r);return 4===i?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==i||(this.onEnd(l),!(n.avail_out=0))},p.prototype.onData=function(t){this.chunks.push(t)},p.prototype.onEnd=function(t){t===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Deflate=p,r.deflate=i,r.deflateRaw=function(t,e){return(e=e||{}).raw=!0,i(t,e)},r.gzip=function(t,e){return(e=e||{}).gzip=!0,i(t,e)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(t,e,r){\"use strict\";var d=t(\"./zlib/inflate\"),c=t(\"./utils/common\"),p=t(\"./utils/strings\"),m=t(\"./zlib/constants\"),i=t(\"./zlib/messages\"),n=t(\"./zlib/zstream\"),s=t(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(t){if(!(this instanceof a))return new a(t);this.options=c.assign({chunkSize:16384,windowBits:0,to:\"\"},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new n,this.strm.avail_out=0;var r=d.inflateInit2(this.strm,e.windowBits);if(r!==m.Z_OK)throw new Error(i[r]);this.header=new s,d.inflateGetHeader(this.strm,this.header)}function o(t,e){var r=new a(e);if(r.push(t,!0),r.err)throw r.msg||i[r.err];return r.result}a.prototype.push=function(t,e){var r,i,n,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;i=e===~~e?e:!0===e?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof t?h.input=p.binstring2buf(t):\"[object ArrayBuffer]\"===_.call(t)?h.input=new Uint8Array(t):h.input=t,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new c.Buf8(u),h.next_out=0,h.avail_out=u),(r=d.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=d.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||i!==m.Z_FINISH&&i!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(n=p.utf8border(h.output,h.next_out),s=h.next_out-n,a=p.buf2string(h.output,n),h.next_out=s,h.avail_out=u-s,s&&c.arraySet(h.output,h.output,n,s,0),this.onData(a)):this.onData(c.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(i=m.Z_FINISH),i===m.Z_FINISH?(r=d.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):i!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(t){this.chunks.push(t)},a.prototype.onEnd=function(t){t===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=c.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(t,e){return(e=e||{}).raw=!0,o(t,e)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(t,e,r){\"use strict\";var i=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var r=e.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i])}}return t},r.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,r,i,n){if(e.subarray&&t.subarray)t.set(e.subarray(r,r+i),n);else for(var s=0;s<i;s++)t[n+s]=e[r+s]},flattenChunks:function(t){var e,r,i,n,s,a;for(e=i=0,r=t.length;e<r;e++)i+=t[e].length;for(a=new Uint8Array(i),e=n=0,r=t.length;e<r;e++)s=t[e],a.set(s,n),n+=s.length;return a}},s={arraySet:function(t,e,r,i,n){for(var s=0;s<i;s++)t[n+s]=e[r+s]},flattenChunks:function(t){return[].concat.apply([],t)}};r.setTyped=function(t){t?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,n)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(i)},{}],42:[function(t,e,r){\"use strict\";var h=t(\"./common\"),n=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){s=!1}for(var u=new h.Buf8(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;function l(t,e){if(e<65537&&(t.subarray&&s||!t.subarray&&n))return String.fromCharCode.apply(null,h.shrinkBuf(t,e));for(var r=\"\",i=0;i<e;i++)r+=String.fromCharCode(t[i]);return r}u[254]=u[254]=1,r.string2buf=function(t){var e,r,i,n,s,a=t.length,o=0;for(n=0;n<a;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),o+=r<128?1:r<2048?2:r<65536?3:4;for(e=new h.Buf8(o),n=s=0;s<o;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),r<128?e[s++]=r:(r<2048?e[s++]=192|r>>>6:(r<65536?e[s++]=224|r>>>12:(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63),e[s++]=128|r>>>6&63),e[s++]=128|63&r);return e},r.buf2binstring=function(t){return l(t,t.length)},r.binstring2buf=function(t){for(var e=new h.Buf8(t.length),r=0,i=e.length;r<i;r++)e[r]=t.charCodeAt(r);return e},r.buf2string=function(t,e){var r,i,n,s,a=e||t.length,o=new Array(2*a);for(r=i=0;r<a;)if((n=t[r++])<128)o[i++]=n;else if(4<(s=u[n]))o[i++]=65533,r+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&r<a;)n=n<<6|63&t[r++],s--;1<s?o[i++]=65533:n<65536?o[i++]=n:(n-=65536,o[i++]=55296|n>>10&1023,o[i++]=56320|1023&n)}return l(o,i)},r.utf8border=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0?e:0===r?e:r+u[t[r]]>e?r:e}},{\"./common\":41}],43:[function(t,e,r){\"use strict\";e.exports=function(t,e,r,i){for(var n=65535&t|0,s=t>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(n=n+e[i++]|0)|0,--a;);n%=65521,s%=65521}return n|s<<16|0}},{}],44:[function(t,e,r){\"use strict\";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,e,r){\"use strict\";var o=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t}},{}],46:[function(t,e,r){\"use strict\";var h,d=t(\"../utils/common\"),u=t(\"./trees\"),c=t(\"./adler32\"),p=t(\"./crc32\"),i=t(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,n=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(t,e){return t.msg=i[e],e}function T(t){return(t<<1)-(4<t?9:0)}function D(t){for(var e=t.length;0<=--e;)t[e]=0}function F(t){var e=t.state,r=e.pending;r>t.avail_out&&(r=t.avail_out),0!==r&&(d.arraySet(t.output,e.pending_buf,e.pending_out,r,t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,0===e.pending&&(e.pending_out=0))}function N(t,e){u._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,F(t.strm)}function U(t,e){t.pending_buf[t.pending++]=e}function P(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function L(t,e){var r,i,n=t.max_chain_length,s=t.strstart,a=t.prev_length,o=t.nice_match,h=t.strstart>t.w_size-z?t.strstart-(t.w_size-z):0,u=t.window,l=t.w_mask,f=t.prev,d=t.strstart+S,c=u[s+a-1],p=u[s+a];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(u[(r=e)+a]===p&&u[r+a-1]===c&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<d);if(i=S-(d-s),s=d-S,a<i){if(t.match_start=e,o<=(a=i))break;c=u[s+a-1],p=u[s+a]}}}while((e=f[e&l])>h&&0!=--n);return a<=t.lookahead?a:t.lookahead}function j(t){var e,r,i,n,s,a,o,h,u,l,f=t.w_size;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=f+(f-z)){for(d.arraySet(t.window,t.window,f,f,0),t.match_start-=f,t.strstart-=f,t.block_start-=f,e=r=t.hash_size;i=t.head[--e],t.head[e]=f<=i?i-f:0,--r;);for(e=r=f;i=t.prev[--e],t.prev[e]=f<=i?i-f:0,--r;);n+=f}if(0===t.strm.avail_in)break;if(a=t.strm,o=t.window,h=t.strstart+t.lookahead,u=n,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,d.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=c(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),t.lookahead+=r,t.lookahead+t.insert>=x)for(s=t.strstart-t.insert,t.ins_h=t.window[s],t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+x-1])&t.hash_mask,t.prev[s&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=s,s++,t.insert--,!(t.lookahead+t.insert<x)););}while(t.lookahead<z&&0!==t.strm.avail_in)}function Z(t,e){for(var r,i;;){if(t.lookahead<z){if(j(t),t.lookahead<z&&e===l)return A;if(0===t.lookahead)break}if(r=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==r&&t.strstart-r<=t.w_size-z&&(t.match_length=L(t,r)),t.match_length>=x)if(i=u._tr_tally(t,t.strstart-t.match_start,t.match_length-x),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=x){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else i=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}function W(t,e){for(var r,i,n;;){if(t.lookahead<z){if(j(t),t.lookahead<z&&e===l)return A;if(0===t.lookahead)break}if(r=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=x-1,0!==r&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-z&&(t.match_length=L(t,r),t.match_length<=5&&(1===t.strategy||t.match_length===x&&4096<t.strstart-t.match_start)&&(t.match_length=x-1)),t.prev_length>=x&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-x,i=u._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-x),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=x-1,t.strstart++,i&&(N(t,!1),0===t.strm.avail_out))return A}else if(t.match_available){if((i=u._tr_tally(t,0,t.window[t.strstart-1]))&&N(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return A}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=u._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}function M(t,e,r,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=i,this.func=n}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new d.Buf16(2*w),this.dyn_dtree=new d.Buf16(2*(2*a+1)),this.bl_tree=new d.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new d.Buf16(k+1),this.heap=new d.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new d.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=n,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?C:E,t.adler=2===e.wrap?0:1,e.last_flush=l,u._tr_init(e),m):R(t,_)}function K(t){var e=G(t);return e===m&&function(t){t.window_size=2*t.w_size,D(t.head),t.max_lazy_match=h[t.level].max_lazy,t.good_match=h[t.level].good_length,t.nice_match=h[t.level].nice_length,t.max_chain_length=h[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=x-1,t.match_available=0,t.ins_h=0}(t.state),e}function Y(t,e,r,i,n,s){if(!t)return _;var a=1;if(e===g&&(e=6),i<0?(a=0,i=-i):15<i&&(a=2,i-=16),n<1||y<n||r!==v||i<8||15<i||e<0||9<e||s<0||b<s)return R(t,_);8===i&&(i=9);var o=new H;return(t.state=o).strm=t,o.wrap=a,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new d.Buf8(2*o.w_size),o.head=new d.Buf16(o.hash_size),o.prev=new d.Buf16(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new d.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=e,o.strategy=s,o.method=r,K(t)}h=[new M(0,0,0,0,function(t,e){var r=65535;for(r>t.pending_buf_size-5&&(r=t.pending_buf_size-5);;){if(t.lookahead<=1){if(j(t),0===t.lookahead&&e===l)return A;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var i=t.block_start+r;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,N(t,!1),0===t.strm.avail_out))return A;if(t.strstart-t.block_start>=t.w_size-z&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):(t.strstart>t.block_start&&(N(t,!1),t.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(t,e){return Y(t,e,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?_:(t.state.gzhead=e,m):_},r.deflate=function(t,e){var r,i,n,s;if(!t||!t.state||5<e||e<0)return t?R(t,_):_;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||666===i.status&&e!==f)return R(t,0===t.avail_out?-5:_);if(i.strm=t,r=i.last_flush,i.last_flush=e,i.status===C)if(2===i.wrap)t.adler=0,U(i,31),U(i,139),U(i,8),i.gzhead?(U(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),U(i,255&i.gzhead.time),U(i,i.gzhead.time>>8&255),U(i,i.gzhead.time>>16&255),U(i,i.gzhead.time>>24&255),U(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),U(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(U(i,255&i.gzhead.extra.length),U(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=p(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(U(i,0),U(i,0),U(i,0),U(i,0),U(i,0),U(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),U(i,3),i.status=E);else{var a=v+(i.w_bits-8<<4)<<8;a|=(2<=i.strategy||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(a|=32),a+=31-a%31,i.status=E,P(i,a),0!==i.strstart&&(P(i,t.adler>>>16),P(i,65535&t.adler)),t.adler=1}if(69===i.status)if(i.gzhead.extra){for(n=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending!==i.pending_buf_size));)U(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending===i.pending_buf_size)){s=1;break}s=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,U(i,s)}while(0!==s);i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),0===s&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending===i.pending_buf_size)){s=1;break}s=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,U(i,s)}while(0!==s);i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),0===s&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&F(t),i.pending+2<=i.pending_buf_size&&(U(i,255&t.adler),U(i,t.adler>>8&255),t.adler=0,i.status=E)):i.status=E),0!==i.pending){if(F(t),0===t.avail_out)return i.last_flush=-1,m}else if(0===t.avail_in&&T(e)<=T(r)&&e!==f)return R(t,-5);if(666===i.status&&0!==t.avail_in)return R(t,-5);if(0!==t.avail_in||0!==i.lookahead||e!==l&&666!==i.status){var o=2===i.strategy?function(t,e){for(var r;;){if(0===t.lookahead&&(j(t),0===t.lookahead)){if(e===l)return A;break}if(t.match_length=0,r=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}(i,e):3===i.strategy?function(t,e){for(var r,i,n,s,a=t.window;;){if(t.lookahead<=S){if(j(t),t.lookahead<=S&&e===l)return A;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=x&&0<t.strstart&&(i=a[n=t.strstart-1])===a[++n]&&i===a[++n]&&i===a[++n]){s=t.strstart+S;do{}while(i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&n<s);t.match_length=S-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=x?(r=u._tr_tally(t,1,t.match_length-x),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}(i,e):h[i.level].func(i,e);if(o!==O&&o!==B||(i.status=666),o===A||o===O)return 0===t.avail_out&&(i.last_flush=-1),m;if(o===I&&(1===e?u._tr_align(i):5!==e&&(u._tr_stored_block(i,0,0,!1),3===e&&(D(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),F(t),0===t.avail_out))return i.last_flush=-1,m}return e!==f?m:i.wrap<=0?1:(2===i.wrap?(U(i,255&t.adler),U(i,t.adler>>8&255),U(i,t.adler>>16&255),U(i,t.adler>>24&255),U(i,255&t.total_in),U(i,t.total_in>>8&255),U(i,t.total_in>>16&255),U(i,t.total_in>>24&255)):(P(i,t.adler>>>16),P(i,65535&t.adler)),F(t),0<i.wrap&&(i.wrap=-i.wrap),0!==i.pending?m:1)},r.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==C&&69!==e&&73!==e&&91!==e&&103!==e&&e!==E&&666!==e?R(t,_):(t.state=null,e===E?R(t,-3):m):_},r.deflateSetDictionary=function(t,e){var r,i,n,s,a,o,h,u,l=e.length;if(!t||!t.state)return _;if(2===(s=(r=t.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(t.adler=c(t.adler,e,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new d.Buf8(r.w_size),d.arraySet(u,e,l-r.w_size,r.w_size,0),e=u,l=r.w_size),a=t.avail_in,o=t.next_in,h=t.input,t.avail_in=l,t.next_in=0,t.input=e,j(r);r.lookahead>=x;){for(i=r.strstart,n=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[i+x-1])&r.hash_mask,r.prev[i&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=i,i++,--n;);r.strstart=i,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,t.next_in=o,t.input=h,t.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(t,e,r){\"use strict\";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(t,e,r){\"use strict\";e.exports=function(t,e){var r,i,n,s,a,o,h,u,l,f,d,c,p,m,_,g,b,v,y,w,k,x,S,z,C;r=t.state,i=t.next_in,z=t.input,n=i+(t.avail_in-5),s=t.next_out,C=t.output,a=s-(e-t.avail_out),o=s+(t.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,d=r.window,c=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;t:do{p<15&&(c+=z[i++]<<p,p+=8,c+=z[i++]<<p,p+=8),v=m[c&g];e:for(;;){if(c>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(c&(1<<y)-1)];continue e}if(32&y){r.mode=12;break t}t.msg=\"invalid literal/length code\",r.mode=30;break t}w=65535&v,(y&=15)&&(p<y&&(c+=z[i++]<<p,p+=8),w+=c&(1<<y)-1,c>>>=y,p-=y),p<15&&(c+=z[i++]<<p,p+=8,c+=z[i++]<<p,p+=8),v=_[c&b];r:for(;;){if(c>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(c&(1<<y)-1)];continue r}t.msg=\"invalid distance code\",r.mode=30;break t}if(k=65535&v,p<(y&=15)&&(c+=z[i++]<<p,(p+=8)<y&&(c+=z[i++]<<p,p+=8)),h<(k+=c&(1<<y)-1)){t.msg=\"invalid distance too far back\",r.mode=30;break t}if(c>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){t.msg=\"invalid distance too far back\",r.mode=30;break t}if(S=d,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=d[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=d[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=d[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=d[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(i<n&&s<o);i-=w=p>>3,c&=(1<<(p-=w<<3))-1,t.next_in=i,t.next_out=s,t.avail_in=i<n?n-i+5:5-(i-n),t.avail_out=s<o?o-s+257:257-(s-o),r.hold=c,r.bits=p}},{}],49:[function(t,e,r){\"use strict\";var I=t(\"../utils/common\"),O=t(\"./adler32\"),B=t(\"./crc32\"),R=t(\"./inffast\"),T=t(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,i=852,n=592;function L(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=P,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new I.Buf32(i),e.distcode=e.distdyn=new I.Buf32(n),e.sane=1,e.back=-1,N):U}function o(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,a(t)):U}function h(t,e){var r,i;return t&&t.state?(i=t.state,e<0?(r=0,e=-e):(r=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?U:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=r,i.wbits=e,o(t))):U}function u(t,e){var r,i;return t?(i=new s,(t.state=i).window=null,(r=h(t,e))!==N&&(t.state=null),r):U}var l,f,d=!0;function j(t){if(d){var e;for(l=new I.Buf32(512),f=new I.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(T(D,t.lens,0,288,l,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;T(F,t.lens,0,32,f,0,t.work,{bits:5}),d=!1}t.lencode=l,t.lenbits=9,t.distcode=f,t.distbits=5}function Z(t,e,r,i){var n,s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),i>=s.wsize?(I.arraySet(s.window,e,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(i<(n=s.wsize-s.wnext)&&(n=i),I.arraySet(s.window,e,r-i,n,s.wnext),(i-=n)?(I.arraySet(s.window,e,r-i,i,0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(t){return u(t,15)},r.inflateInit2=u,r.inflate=function(t,e){var r,i,n,s,a,o,h,u,l,f,d,c,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return U;12===(r=t.state).mode&&(r.mode=13),a=t.next_out,n=t.output,h=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,u=r.hold,l=r.bits,f=o,d=h,x=N;t:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){t.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){t.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){t.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,t.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){t.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){t.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(c=r.length)&&(c=o),c&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,i,s,c,k)),512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,r.length-=c),r.length))break t;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break t;for(c=0;k=i[s+c++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&c<o;);if(512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,k)break t}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break t;for(c=0;k=i[s+c++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&c<o;);if(512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,k)break t}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u!==(65535&r.check)){t.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}t.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,2;t.adler=r.check=1,r.mode=12;case 12:if(5===e||6===e)break t;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==e)break;u>>>=2,l-=2;break t;case 2:r.mode=17;break;case 3:t.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){t.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===e)break t;case 15:r.mode=16;case 16:if(c=r.length){if(o<c&&(c=o),h<c&&(c=h),0===c)break t;I.arraySet(n,i,s,c,a),o-=c,s+=c,h-=c,a+=c,r.length-=c;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){t.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){t.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){t.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],c=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}l-=_,k=0,c=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}l-=_,k=0,c=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+c>r.nlen+r.ndist){t.msg=\"invalid bit length repeat\",r.mode=30;break}for(;c--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){t.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){t.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){t.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===e)break t;case 20:r.mode=21;case 21:if(6<=o&&258<=h){t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,R(t,d),a=t.next_out,n=t.output,h=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){t.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){t.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break t;if(c=d-h,r.offset>c){if((c=r.offset-c)>r.whave&&r.sane){t.msg=\"invalid distance too far back\",r.mode=30;break}p=c>r.wnext?(c-=r.wnext,r.wsize-c):r.wnext-c,c>r.length&&(c=r.length),m=r.window}else m=n,p=a-r.offset,c=r.length;for(h<c&&(c=h),h-=c,r.length-=c;n[a++]=m[p++],--c;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break t;n[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break t;o--,u|=i[s++]<<l,l+=8}if(d-=h,t.total_out+=d,r.total+=d,d&&(t.adler=r.check=r.flags?B(r.check,n,d,a-d):O(r.check,n,d,a-d)),d=h,(r.flags?u:L(u))!==r.check){t.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u!==(4294967295&r.total)){t.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break t;case 30:x=-3;break t;case 31:return-4;case 32:default:return U}return t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,(r.wsize||d!==t.avail_out&&r.mode<30&&(r.mode<27||4!==e))&&Z(t,t.output,t.next_out,d-t.avail_out)?(r.mode=31,-4):(f-=t.avail_in,d-=t.avail_out,t.total_in+=f,t.total_out+=d,r.total+=d,r.wrap&&d&&(t.adler=r.check=r.flags?B(r.check,n,d,t.next_out-d):O(r.check,n,d,t.next_out-d)),t.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===d||4===e)&&x===N&&(x=-5),x)},r.inflateEnd=function(t){if(!t||!t.state)return U;var e=t.state;return e.window&&(e.window=null),t.state=null,N},r.inflateGetHeader=function(t,e){var r;return t&&t.state?0==(2&(r=t.state).wrap)?U:((r.head=e).done=!1,N):U},r.inflateSetDictionary=function(t,e){var r,i=e.length;return t&&t.state?0!==(r=t.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,e,i,0)!==r.check?-3:Z(t,e,i,i)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(t,e,r){\"use strict\";var D=t(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,r,i,n,s,a,o){var h,u,l,f,d,c,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<i;v++)O[e[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===t||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<i;v++)0!==e[r+v]&&(a[B[e[r+v]]++]=v);if(c=0===t?(A=R=a,19):1===t?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,d=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===t&&852<C||2===t&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<c?(m=0,a[v]):a[v]>c?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;n[d+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=e[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),d+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===t&&852<C||2===t&&592<C)return 1;n[l=E&f]=k<<24|x<<16|d-s|0}}return 0!==E&&(n[d+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(t,e,r){\"use strict\";e.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(t,e,r){\"use strict\";var n=t(\"../utils/common\"),o=0,h=1;function i(t){for(var e=t.length;0<=--e;)t[e]=0}var s=0,a=29,u=256,l=u+1+a,f=30,d=19,_=2*l+1,g=15,c=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));i(z);var C=new Array(2*f);i(C);var E=new Array(512);i(E);var A=new Array(256);i(A);var I=new Array(a);i(I);var O,B,R,T=new Array(f);function D(t,e,r,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}function F(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function N(t){return t<256?E[t]:E[256+(t>>>7)]}function U(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function P(t,e,r){t.bi_valid>c-r?(t.bi_buf|=e<<t.bi_valid&65535,U(t,t.bi_buf),t.bi_buf=e>>c-t.bi_valid,t.bi_valid+=r-c):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)}function L(t,e,r){P(t,r[2*e],r[2*e+1])}function j(t,e){for(var r=0;r|=1&t,t>>>=1,r<<=1,0<--e;);return r>>>1}function Z(t,e,r){var i,n,s=new Array(g+1),a=0;for(i=1;i<=g;i++)s[i]=a=a+r[i-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=j(s[o]++,o))}}function W(t){var e;for(e=0;e<l;e++)t.dyn_ltree[2*e]=0;for(e=0;e<f;e++)t.dyn_dtree[2*e]=0;for(e=0;e<d;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*m]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function M(t){8<t.bi_valid?U(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function H(t,e,r,i){var n=2*e,s=2*r;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[r]}function G(t,e,r){for(var i=t.heap[r],n=r<<1;n<=t.heap_len&&(n<t.heap_len&&H(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!H(e,i,t.heap[n],t.depth));)t.heap[r]=t.heap[n],r=n,n<<=1;t.heap[r]=i}function K(t,e,r){var i,n,s,a,o=0;if(0!==t.last_lit)for(;i=t.pending_buf[t.d_buf+2*o]<<8|t.pending_buf[t.d_buf+2*o+1],n=t.pending_buf[t.l_buf+o],o++,0===i?L(t,n,e):(L(t,(s=A[n])+u+1,e),0!==(a=w[s])&&P(t,n-=I[s],a),L(t,s=N(--i),r),0!==(a=k[s])&&P(t,i-=T[s],a)),o<t.last_lit;);L(t,m,e)}function Y(t,e){var r,i,n,s=e.dyn_tree,a=e.stat_desc.static_tree,o=e.stat_desc.has_stree,h=e.stat_desc.elems,u=-1;for(t.heap_len=0,t.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(t.heap[++t.heap_len]=u=r,t.depth[r]=0):s[2*r+1]=0;for(;t.heap_len<2;)s[2*(n=t.heap[++t.heap_len]=u<2?++u:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=a[2*n+1]);for(e.max_code=u,r=t.heap_len>>1;1<=r;r--)G(t,s,r);for(n=h;r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],G(t,s,1),i=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=i,s[2*n]=s[2*r]+s[2*i],t.depth[n]=(t.depth[r]>=t.depth[i]?t.depth[r]:t.depth[i])+1,s[2*r+1]=s[2*i+1]=n,t.heap[1]=n++,G(t,s,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var r,i,n,s,a,o,h=e.dyn_tree,u=e.max_code,l=e.stat_desc.static_tree,f=e.stat_desc.has_stree,d=e.stat_desc.extra_bits,c=e.stat_desc.extra_base,p=e.stat_desc.max_length,m=0;for(s=0;s<=g;s++)t.bl_count[s]=0;for(h[2*t.heap[t.heap_max]+1]=0,r=t.heap_max+1;r<_;r++)p<(s=h[2*h[2*(i=t.heap[r])+1]+1]+1)&&(s=p,m++),h[2*i+1]=s,u<i||(t.bl_count[s]++,a=0,c<=i&&(a=d[i-c]),o=h[2*i],t.opt_len+=o*(s+a),f&&(t.static_len+=o*(l[2*i+1]+a)));if(0!==m){do{for(s=p-1;0===t.bl_count[s];)s--;t.bl_count[s]--,t.bl_count[s+1]+=2,t.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(i=t.bl_count[s];0!==i;)u<(n=t.heap[--r])||(h[2*n+1]!==s&&(t.opt_len+=(s-h[2*n+1])*h[2*n],h[2*n+1]=s),i--)}}(t,e),Z(s,u,t.bl_count)}function X(t,e,r){var i,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),e[2*(r+1)+1]=65535,i=0;i<=r;i++)n=a,a=e[2*(i+1)+1],++o<h&&n===a||(o<u?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[2*b]++):o<=10?t.bl_tree[2*v]++:t.bl_tree[2*y]++,s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4))}function V(t,e,r){var i,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),i=0;i<=r;i++)if(n=a,a=e[2*(i+1)+1],!(++o<h&&n===a)){if(o<u)for(;L(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==s&&(L(t,n,t.bl_tree),o--),L(t,b,t.bl_tree),P(t,o-3,2)):o<=10?(L(t,v,t.bl_tree),P(t,o-3,3)):(L(t,y,t.bl_tree),P(t,o-11,7));s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4)}}i(T);var q=!1;function J(t,e,r,i){P(t,(s<<1)+(i?1:0),3),function(t,e,r,i){M(t),i&&(U(t,r),U(t,~r)),n.arraySet(t.pending_buf,t.window,e,r,t.pending),t.pending+=r}(t,e,r,!0)}r._tr_init=function(t){q||(function(){var t,e,r,i,n,s=new Array(g+1);for(i=r=0;i<a-1;i++)for(I[i]=r,t=0;t<1<<w[i];t++)A[r++]=i;for(A[r-1]=i,i=n=0;i<16;i++)for(T[i]=n,t=0;t<1<<k[i];t++)E[n++]=i;for(n>>=7;i<f;i++)for(T[i]=n<<7,t=0;t<1<<k[i]-7;t++)E[256+n++]=i;for(e=0;e<=g;e++)s[e]=0;for(t=0;t<=143;)z[2*t+1]=8,t++,s[8]++;for(;t<=255;)z[2*t+1]=9,t++,s[9]++;for(;t<=279;)z[2*t+1]=7,t++,s[7]++;for(;t<=287;)z[2*t+1]=8,t++,s[8]++;for(Z(z,l+1,s),t=0;t<f;t++)C[2*t+1]=5,C[2*t]=j(t,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,d,p)}(),q=!0),t.l_desc=new F(t.dyn_ltree,O),t.d_desc=new F(t.dyn_dtree,B),t.bl_desc=new F(t.bl_tree,R),t.bi_buf=0,t.bi_valid=0,W(t)},r._tr_stored_block=J,r._tr_flush_block=function(t,e,r,i){var n,s,a=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,r=4093624447;for(e=0;e<=31;e++,r>>>=1)if(1&r&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return h;for(e=32;e<u;e++)if(0!==t.dyn_ltree[2*e])return h;return o}(t)),Y(t,t.l_desc),Y(t,t.d_desc),a=function(t){var e;for(X(t,t.dyn_ltree,t.l_desc.max_code),X(t,t.dyn_dtree,t.d_desc.max_code),Y(t,t.bl_desc),e=d-1;3<=e&&0===t.bl_tree[2*S[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(s=t.static_len+3+7>>>3)<=n&&(n=s)):n=s=r+5,r+4<=n&&-1!==e?J(t,e,r,i):4===t.strategy||s===n?(P(t,2+(i?1:0),3),K(t,z,C)):(P(t,4+(i?1:0),3),function(t,e,r,i){var n;for(P(t,e-257,5),P(t,r-1,5),P(t,i-4,4),n=0;n<i;n++)P(t,t.bl_tree[2*S[n]+1],3);V(t,t.dyn_ltree,e-1),V(t,t.dyn_dtree,r-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,a+1),K(t,t.dyn_ltree,t.dyn_dtree)),W(t),i&&M(t)},r._tr_tally=function(t,e,r){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&r,t.last_lit++,0===e?t.dyn_ltree[2*r]++:(t.matches++,e--,t.dyn_ltree[2*(A[r]+u+1)]++,t.dyn_dtree[2*N(e)]++),t.last_lit===t.lit_bufsize-1},r._tr_align=function(t){P(t,2,3),L(t,m,z),function(t){16===t.bi_valid?(U(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{\"../utils/common\":41}],53:[function(t,e,r){\"use strict\";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,e,r){\"use strict\";e.exports=\"function\"==typeof setImmediate?setImmediate:function(){var t=[].slice.apply(arguments);t.splice(1,0,0),setTimeout.apply(null,t)}},{}]},{},[10])(10)});","HTMLCanvasElement.prototype.toBlob||(HTMLCanvasElement.prototype.toBlob=function(a,r,t){var i=this.toDataURL(r,t).split(\",\")[1];setTimeout(function(){for(var t=atob(i),o=t.length,e=new Uint8Array(o),n=0;n<o;n++)e[n]=t.charCodeAt(n);a(new Blob([e],{type:r||\"image/png\"}))})});\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MicroModal = function () {\n\n  var FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  var Modal = /*#__PURE__*/function () {\n    function Modal(_ref) {\n      var targetModal = _ref.targetModal,\n          _ref$triggers = _ref.triggers,\n          triggers = _ref$triggers === void 0 ? [] : _ref$triggers,\n          _ref$onShow = _ref.onShow,\n          onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n          _ref$onClose = _ref.onClose,\n          onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n          _ref$openTrigger = _ref.openTrigger,\n          openTrigger = _ref$openTrigger === void 0 ? 'data-micromodal-trigger' : _ref$openTrigger,\n          _ref$closeTrigger = _ref.closeTrigger,\n          closeTrigger = _ref$closeTrigger === void 0 ? 'data-micromodal-close' : _ref$closeTrigger,\n          _ref$openClass = _ref.openClass,\n          openClass = _ref$openClass === void 0 ? 'is-open' : _ref$openClass,\n          _ref$disableScroll = _ref.disableScroll,\n          disableScroll = _ref$disableScroll === void 0 ? false : _ref$disableScroll,\n          _ref$disableFocus = _ref.disableFocus,\n          disableFocus = _ref$disableFocus === void 0 ? false : _ref$disableFocus,\n          _ref$awaitCloseAnimat = _ref.awaitCloseAnimation,\n          awaitCloseAnimation = _ref$awaitCloseAnimat === void 0 ? false : _ref$awaitCloseAnimat,\n          _ref$awaitOpenAnimati = _ref.awaitOpenAnimation,\n          awaitOpenAnimation = _ref$awaitOpenAnimati === void 0 ? false : _ref$awaitOpenAnimati,\n          _ref$debugMode = _ref.debugMode,\n          debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode;\n\n      _classCallCheck(this, Modal);\n\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode: debugMode,\n        disableScroll: disableScroll,\n        openTrigger: openTrigger,\n        closeTrigger: closeTrigger,\n        openClass: openClass,\n        onShow: onShow,\n        onClose: onClose,\n        awaitCloseAnimation: awaitCloseAnimation,\n        awaitOpenAnimation: awaitOpenAnimation,\n        disableFocus: disableFocus\n      }; // Register click events only if pre binding eventListeners\n\n      if (triggers.length > 0) this.registerTriggers.apply(this, _toConsumableArray(triggers)); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    _createClass(Modal, [{\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this = this;\n\n        for (var _len = arguments.length, triggers = new Array(_len), _key = 0; _key < _len; _key++) {\n          triggers[_key] = arguments[_key];\n        }\n\n        triggers.filter(Boolean).forEach(function (trigger) {\n          trigger.addEventListener('click', function (event) {\n            return _this.showModal(event);\n          });\n        });\n      }\n    }, {\n      key: \"showModal\",\n      value: function showModal() {\n        var _this2 = this;\n\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.activeElement = document.activeElement;\n        this.modal.setAttribute('aria-hidden', 'false');\n        this.modal.classList.add(this.config.openClass);\n        this.scrollBehaviour('disable');\n        this.addEventListeners();\n\n        if (this.config.awaitOpenAnimation) {\n          var handler = function handler() {\n            _this2.modal.removeEventListener('animationend', handler, false);\n\n            _this2.setFocusToFirstNode();\n          };\n\n          this.modal.addEventListener('animationend', handler, false);\n        } else {\n          this.setFocusToFirstNode();\n        }\n\n        this.config.onShow(this.modal, this.activeElement, event);\n      }\n    }, {\n      key: \"closeModal\",\n      value: function closeModal() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var modal = this.modal;\n        this.modal.setAttribute('aria-hidden', 'true');\n        this.removeEventListeners();\n        this.scrollBehaviour('enable');\n\n        if (this.activeElement && this.activeElement.focus) {\n          this.activeElement.focus();\n        }\n\n        this.config.onClose(this.modal, this.activeElement, event);\n\n        if (this.config.awaitCloseAnimation) {\n          var openClass = this.config.openClass; // <- old school ftw\n\n          this.modal.addEventListener('animationend', function handler() {\n            modal.classList.remove(openClass);\n            modal.removeEventListener('animationend', handler, false);\n          }, false);\n        } else {\n          modal.classList.remove(this.config.openClass);\n        }\n      }\n    }, {\n      key: \"closeModalById\",\n      value: function closeModalById(targetModal) {\n        this.modal = document.getElementById(targetModal);\n        if (this.modal) this.closeModal();\n      }\n    }, {\n      key: \"scrollBehaviour\",\n      value: function scrollBehaviour(toggle) {\n        if (!this.config.disableScroll) return;\n        var body = document.querySelector('body');\n\n        switch (toggle) {\n          case 'enable':\n            Object.assign(body.style, {\n              overflow: ''\n            });\n            break;\n\n          case 'disable':\n            Object.assign(body.style, {\n              overflow: 'hidden'\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        this.modal.addEventListener('touchstart', this.onClick);\n        this.modal.addEventListener('click', this.onClick);\n        document.addEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"removeEventListeners\",\n      value: function removeEventListeners() {\n        this.modal.removeEventListener('touchstart', this.onClick);\n        this.modal.removeEventListener('click', this.onClick);\n        document.removeEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (event.target.hasAttribute(this.config.closeTrigger)) {\n          this.closeModal(event);\n        }\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (event.keyCode === 27) this.closeModal(event); // esc\n\n        if (event.keyCode === 9) this.retainFocus(event); // tab\n      }\n    }, {\n      key: \"getFocusableNodes\",\n      value: function getFocusableNodes() {\n        var nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n        return Array.apply(void 0, _toConsumableArray(nodes));\n      }\n      /**\n       * Tries to set focus on a node which is not a close trigger\n       * if no other nodes exist then focuses on first close trigger\n       */\n\n    }, {\n      key: \"setFocusToFirstNode\",\n      value: function setFocusToFirstNode() {\n        var _this3 = this;\n\n        if (this.config.disableFocus) return;\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return; // remove nodes on whose click, the modal closes\n        // could not think of a better name :(\n\n        var nodesWhichAreNotCloseTargets = focusableNodes.filter(function (node) {\n          return !node.hasAttribute(_this3.config.closeTrigger);\n        });\n        if (nodesWhichAreNotCloseTargets.length > 0) nodesWhichAreNotCloseTargets[0].focus();\n        if (nodesWhichAreNotCloseTargets.length === 0) focusableNodes[0].focus();\n      }\n    }, {\n      key: \"retainFocus\",\n      value: function retainFocus(event) {\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return;\n        /**\n         * Filters nodes which are hidden to prevent\n         * focus leak outside modal\n         */\n\n        focusableNodes = focusableNodes.filter(function (node) {\n          return node.offsetParent !== null;\n        }); // if disableFocus is true\n\n        if (!this.modal.contains(document.activeElement)) {\n          focusableNodes[0].focus();\n        } else {\n          var focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n          if (event.shiftKey && focusedItemIndex === 0) {\n            focusableNodes[focusableNodes.length - 1].focus();\n            event.preventDefault();\n          }\n\n          if (!event.shiftKey && focusableNodes.length > 0 && focusedItemIndex === focusableNodes.length - 1) {\n            focusableNodes[0].focus();\n            event.preventDefault();\n          }\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  var activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  var generateTriggerMap = function generateTriggerMap(triggers, triggerAttr) {\n    var triggerMap = [];\n    triggers.forEach(function (trigger) {\n      var targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  var validateModalPresence = function validateModalPresence(id) {\n    if (!document.getElementById(id)) {\n      console.warn(\"MicroModal: \\u2757Seems like you have missed %c'\".concat(id, \"'\"), 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<div class=\\\"modal\\\" id=\\\"\".concat(id, \"\\\"></div>\"));\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  var validateTriggerPresence = function validateTriggerPresence(triggers) {\n    if (triggers.length <= 0) {\n      console.warn(\"MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<a href=\\\"#\\\" data-micromodal-trigger=\\\"my-modal\\\"></a>\");\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  var validateArgs = function validateArgs(triggers, triggerMap) {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) {\n      validateModalPresence(id);\n    }\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  var init = function init(config) {\n    // Create an config object with default openTrigger\n    var options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    var triggers = _toConsumableArray(document.querySelectorAll(\"[\".concat(options.openTrigger, \"]\"))); // Makes a mappings of modals with their trigger nodes\n\n\n    var triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      var value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = _toConsumableArray(value);\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  var show = function show(targetModal, config) {\n    var options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // clear events in case previous modal wasn't close\n\n    if (activeModal) activeModal.removeEventListeners(); // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  var close = function close(targetModal) {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init: init,\n    show: show,\n    close: close\n  };\n}();\nwindow.MicroModal = MicroModal;\n\nexport default MicroModal;\n","export default \"(function(b){function a(b,d){if({}.hasOwnProperty.call(a.cache,b))return a.cache[b];var e=a.resolve(b);if(!e)throw new Error('Failed to resolve module '+b);var c={id:b,require:a,filename:b,exports:{},loaded:!1,parent:d,children:[]};d&&d.children.push(c);var f=b.slice(0,b.lastIndexOf('/')+1);return a.cache[b]=c.exports,e.call(c.exports,c,c.exports,f,b),c.loaded=!0,a.cache[b]=c.exports}a.modules={},a.cache={},a.resolve=function(b){return{}.hasOwnProperty.call(a.modules,b)?a.modules[b]:void 0},a.define=function(b,c){a.modules[b]=c},a.define('/gif.worker.coffee',function(d,e,f,g){var b,c;b=a('/GIFEncoder.js',d),c=function(a){var c,e,d,f;return c=new b(a.width,a.height),a.index===0?c.writeHeader():c.firstFrame=!1,c.setTransparent(a.transparent),c.setRepeat(a.repeat),c.setDelay(a.delay),c.setQuality(a.quality),c.addFrame(a.data),a.last&&c.finish(),d=c.stream(),a.data=d.pages,a.cursor=d.cursor,a.pageSize=d.constructor.pageSize,a.canTransfer?(f=function(c){for(var b=0,d=a.data.length;b<d;++b)e=a.data[b],c.push(e.buffer);return c}.call(this,[]),self.postMessage(a,f)):self.postMessage(a)},self.onmessage=function(a){return c(a.data)}}),a.define('/GIFEncoder.js',function(e,h,i,j){function c(){this.page=-1,this.pages=[],this.newPage()}function b(a,b){this.width=~~a,this.height=~~b,this.transparent=null,this.transIndex=0,this.repeat=-1,this.delay=0,this.image=null,this.pixels=null,this.indexedPixels=null,this.colorDepth=null,this.colorTab=null,this.usedEntry=new Array,this.palSize=7,this.dispose=-1,this.firstFrame=!0,this.sample=10,this.out=new c}var f=a('/TypedNeuQuant.js',e),g=a('/LZWEncoder.js',e);c.pageSize=4096,c.charMap={};for(var d=0;d<256;d++)c.charMap[d]=String.fromCharCode(d);c.prototype.newPage=function(){this.pages[++this.page]=new Uint8Array(c.pageSize),this.cursor=0},c.prototype.getData=function(){var d='';for(var a=0;a<this.pages.length;a++)for(var b=0;b<c.pageSize;b++)d+=c.charMap[this.pages[a][b]];return d},c.prototype.writeByte=function(a){this.cursor>=c.pageSize&&this.newPage(),this.pages[this.page][this.cursor++]=a},c.prototype.writeUTFBytes=function(b){for(var c=b.length,a=0;a<c;a++)this.writeByte(b.charCodeAt(a))},c.prototype.writeBytes=function(b,d,e){for(var c=e||b.length,a=d||0;a<c;a++)this.writeByte(b[a])},b.prototype.setDelay=function(a){this.delay=Math.round(a/10)},b.prototype.setFrameRate=function(a){this.delay=Math.round(100/a)},b.prototype.setDispose=function(a){a>=0&&(this.dispose=a)},b.prototype.setRepeat=function(a){this.repeat=a},b.prototype.setTransparent=function(a){this.transparent=a},b.prototype.addFrame=function(a){this.image=a,this.getImagePixels(),this.analyzePixels(),this.firstFrame&&(this.writeLSD(),this.writePalette(),this.repeat>=0&&this.writeNetscapeExt()),this.writeGraphicCtrlExt(),this.writeImageDesc(),this.firstFrame||this.writePalette(),this.writePixels(),this.firstFrame=!1},b.prototype.finish=function(){this.out.writeByte(59)},b.prototype.setQuality=function(a){a<1&&(a=1),this.sample=a},b.prototype.writeHeader=function(){this.out.writeUTFBytes('GIF89a')},b.prototype.analyzePixels=function(){var g=this.pixels.length,d=g/3;this.indexedPixels=new Uint8Array(d);var a=new f(this.pixels,this.sample);a.buildColormap(),this.colorTab=a.getColormap();var b=0;for(var c=0;c<d;c++){var e=a.lookupRGB(this.pixels[b++]&255,this.pixels[b++]&255,this.pixels[b++]&255);this.usedEntry[e]=!0,this.indexedPixels[c]=e}this.pixels=null,this.colorDepth=8,this.palSize=7,this.transparent!==null&&(this.transIndex=this.findClosest(this.transparent))},b.prototype.findClosest=function(e){if(this.colorTab===null)return-1;var k=(e&16711680)>>16,l=(e&65280)>>8,m=e&255,c=0,d=16777216,j=this.colorTab.length;for(var a=0;a<j;){var f=k-(this.colorTab[a++]&255),g=l-(this.colorTab[a++]&255),h=m-(this.colorTab[a]&255),i=f*f+g*g+h*h,b=parseInt(a/3);this.usedEntry[b]&&i<d&&(d=i,c=b),a++}return c},b.prototype.getImagePixels=function(){var a=this.width,g=this.height;this.pixels=new Uint8Array(a*g*3);var b=this.image,c=0;for(var d=0;d<g;d++)for(var e=0;e<a;e++){var f=d*a*4+e*4;this.pixels[c++]=b[f],this.pixels[c++]=b[f+1],this.pixels[c++]=b[f+2]}},b.prototype.writeGraphicCtrlExt=function(){this.out.writeByte(33),this.out.writeByte(249),this.out.writeByte(4);var b,a;this.transparent===null?(b=0,a=0):(b=1,a=2),this.dispose>=0&&(a=dispose&7),a<<=2,this.out.writeByte(0|a|0|b),this.writeShort(this.delay),this.out.writeByte(this.transIndex),this.out.writeByte(0)},b.prototype.writeImageDesc=function(){this.out.writeByte(44),this.writeShort(0),this.writeShort(0),this.writeShort(this.width),this.writeShort(this.height),this.firstFrame?this.out.writeByte(0):this.out.writeByte(128|this.palSize)},b.prototype.writeLSD=function(){this.writeShort(this.width),this.writeShort(this.height),this.out.writeByte(240|this.palSize),this.out.writeByte(0),this.out.writeByte(0)},b.prototype.writeNetscapeExt=function(){this.out.writeByte(33),this.out.writeByte(255),this.out.writeByte(11),this.out.writeUTFBytes('NETSCAPE2.0'),this.out.writeByte(3),this.out.writeByte(1),this.writeShort(this.repeat),this.out.writeByte(0)},b.prototype.writePalette=function(){this.out.writeBytes(this.colorTab);var b=768-this.colorTab.length;for(var a=0;a<b;a++)this.out.writeByte(0)},b.prototype.writeShort=function(a){this.out.writeByte(a&255),this.out.writeByte(a>>8&255)},b.prototype.writePixels=function(){var a=new g(this.width,this.height,this.indexedPixels,this.colorDepth);a.encode(this.out)},b.prototype.stream=function(){return this.out},e.exports=b}),a.define('/LZWEncoder.js',function(e,g,h,i){function f(y,D,C,B){function w(a,b){r[f++]=a,f>=254&&t(b)}function x(b){u(a),k=i+2,j=!0,l(i,b)}function u(b){for(var a=0;a<b;++a)h[a]=-1}function A(z,r){var g,t,d,e,y,w,s;for(q=z,j=!1,n_bits=q,m=p(n_bits),i=1<<z-1,o=i+1,k=i+2,f=0,e=v(),s=0,g=a;g<65536;g*=2)++s;s=8-s,w=a,u(w),l(i,r);a:while((t=v())!=c){if(g=(t<<b)+e,d=t<<s^e,h[d]===g){e=n[d];continue}if(h[d]>=0){y=w-d,d===0&&(y=1);do if((d-=y)<0&&(d+=w),h[d]===g){e=n[d];continue a}while(h[d]>=0)}l(e,r),e=t,k<1<<b?(n[d]=k++,h[d]=g):x(r)}l(e,r),l(o,r)}function z(a){a.writeByte(s),remaining=y*D,curPixel=0,A(s+1,a),a.writeByte(0)}function t(a){f>0&&(a.writeByte(f),a.writeBytes(r,0,f),f=0)}function p(a){return(1<<a)-1}function v(){if(remaining===0)return c;--remaining;var a=C[curPixel++];return a&255}function l(a,c){g&=d[e],e>0?g|=a<<e:g=a,e+=n_bits;while(e>=8)w(g&255,c),g>>=8,e-=8;if((k>m||j)&&(j?(m=p(n_bits=q),j=!1):(++n_bits,n_bits==b?m=1<<b:m=p(n_bits))),a==o){while(e>0)w(g&255,c),g>>=8,e-=8;t(c)}}var s=Math.max(2,B),r=new Uint8Array(256),h=new Int32Array(a),n=new Int32Array(a),g,e=0,f,k=0,m,j=!1,q,i,o;this.encode=z}var c=-1,b=12,a=5003,d=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];e.exports=f}),a.define('/TypedNeuQuant.js',function(A,F,E,D){function C(A,B){function I(){o=[],q=new Int32Array(256),t=new Int32Array(a),y=new Int32Array(a),z=new Int32Array(a>>3);var c,d;for(c=0;c<a;c++)d=(c<<b+8)/a,o[c]=new Float64Array([d,d,d,0]),y[c]=e/a,t[c]=0}function J(){for(var c=0;c<a;c++)o[c][0]>>=b,o[c][1]>>=b,o[c][2]>>=b,o[c][3]=c}function K(b,a,c,e,f){o[a][0]-=b*(o[a][0]-c)/d,o[a][1]-=b*(o[a][1]-e)/d,o[a][2]-=b*(o[a][2]-f)/d}function L(j,e,n,l,k){var h=Math.abs(e-j),i=Math.min(e+j,a),g=e+1,f=e-1,m=1,b,d;while(g<i||f>h)d=z[m++],g<i&&(b=o[g++],b[0]-=d*(b[0]-n)/c,b[1]-=d*(b[1]-l)/c,b[2]-=d*(b[2]-k)/c),f>h&&(b=o[f--],b[0]-=d*(b[0]-n)/c,b[1]-=d*(b[1]-l)/c,b[2]-=d*(b[2]-k)/c)}function C(p,s,q){var h=2147483647,k=h,d=-1,m=d,c,j,e,n,l;for(c=0;c<a;c++)j=o[c],e=Math.abs(j[0]-p)+Math.abs(j[1]-s)+Math.abs(j[2]-q),e<h&&(h=e,d=c),n=e-(t[c]>>i-b),n<k&&(k=n,m=c),l=y[c]>>g,y[c]-=l,t[c]+=l<<f;return y[d]+=x,t[d]-=r,m}function D(){var d,b,e,c,h,g,f=0,i=0;for(d=0;d<a;d++){for(e=o[d],h=d,g=e[1],b=d+1;b<a;b++)c=o[b],c[1]<g&&(h=b,g=c[1]);if(c=o[h],d!=h&&(b=c[0],c[0]=e[0],e[0]=b,b=c[1],c[1]=e[1],e[1]=b,b=c[2],c[2]=e[2],e[2]=b,b=c[3],c[3]=e[3],e[3]=b),g!=f){for(q[f]=i+d>>1,b=f+1;b<g;b++)q[b]=d;f=g,i=d}}for(q[f]=i+n>>1,b=f+1;b<256;b++)q[b]=n}function E(j,i,k){var b,d,c,e=1e3,h=-1,f=q[i],g=f-1;while(f<a||g>=0)f<a&&(d=o[f],c=d[1]-i,c>=e?f=a:(f++,c<0&&(c=-c),b=d[0]-j,b<0&&(b=-b),c+=b,c<e&&(b=d[2]-k,b<0&&(b=-b),c+=b,c<e&&(e=c,h=d[3])))),g>=0&&(d=o[g],c=i-d[1],c>=e?g=-1:(g--,c<0&&(c=-c),b=d[0]-j,b<0&&(b=-b),c+=b,c<e&&(b=d[2]-k,b<0&&(b=-b),c+=b,c<e&&(e=c,h=d[3]))));return h}function F(){var c,f=A.length,D=30+(B-1)/3,y=f/(3*B),q=~~(y/w),n=d,o=u,a=o>>h;for(a<=1&&(a=0),c=0;c<a;c++)z[c]=n*((a*a-c*c)*m/(a*a));var i;f<s?(B=1,i=3):f%l!==0?i=3*l:f%k!==0?i=3*k:f%p!==0?i=3*p:i=3*j;var r,t,x,e,g=0;c=0;while(c<y)if(r=(A[g]&255)<<b,t=(A[g+1]&255)<<b,x=(A[g+2]&255)<<b,e=C(r,t,x),K(n,e,r,t,x),a!==0&&L(a,e,r,t,x),g+=i,g>=f&&(g-=f),c++,q===0&&(q=1),c%q===0)for(n-=n/D,o-=o/v,a=o>>h,a<=1&&(a=0),e=0;e<a;e++)z[e]=n*((a*a-e*e)*m/(a*a))}function G(){I(),F(),J(),D()}function H(){var b=[],g=[];for(var c=0;c<a;c++)g[o[c][3]]=c;var d=0;for(var e=0;e<a;e++){var f=g[e];b[d++]=o[f][0],b[d++]=o[f][1],b[d++]=o[f][2]}return b}var o,q,t,y,z;this.buildColormap=G,this.getColormap=H,this.lookupRGB=E}var w=100,a=256,n=a-1,b=4,i=16,e=1<<i,f=10,B=1<<f,g=10,x=e>>g,r=e<<f-g,z=a>>3,h=6,t=1<<h,u=z*t,v=30,o=10,d=1<<o,q=8,m=1<<q,y=o+q,c=1<<y,l=499,k=491,p=487,j=503,s=3*j;A.exports=C}),a('/gif.worker.coffee')}.call(this,this))\\r\\n//# sourceMappingURL=gif.worker.js.map\\r\\n// gif.worker.js 0.1.6 - https://github.com/jnordberg/gif.js\";","// Copyright 2014 Simon Lydell\r\n// X11 (“MIT”) Licensed. (See LICENSE.)\r\n\r\nvoid (function(root, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(factory)\r\n  } else if (typeof exports === \"object\") {\r\n    module.exports = factory()\r\n  } else {\r\n    root.resolveUrl = factory()\r\n  }\r\n}(this, function() {\r\n\r\n  function resolveUrl(/* ...urls */) {\r\n    var numUrls = arguments.length\r\n\r\n    if (numUrls === 0) {\r\n      throw new Error(\"resolveUrl requires at least one argument; got none.\")\r\n    }\r\n\r\n    var base = document.createElement(\"base\")\r\n    base.href = arguments[0]\r\n\r\n    if (numUrls === 1) {\r\n      return base.href\r\n    }\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0]\r\n    head.insertBefore(base, head.firstChild)\r\n\r\n    var a = document.createElement(\"a\")\r\n    var resolved\r\n\r\n    for (var index = 1; index < numUrls; index++) {\r\n      a.href = arguments[index]\r\n      resolved = a.href\r\n      base.href = resolved\r\n    }\r\n\r\n    head.removeChild(base)\r\n\r\n    return resolved\r\n  }\r\n\r\n  return resolveUrl\r\n\r\n}));\r\n","import CCapture from './CCapture.js/CCapture';\nimport { saveAs } from 'file-saver';\n// Polyfill for canvas.toBlob needed for some browsers.\nimport 'mdn-polyfills/HTMLCanvasElement.prototype.toBlob';\n// @ts-ignore\nimport { changeDpiBlob } from 'changedpi';\nimport { PARAMS } from './params';\nimport { initDotWithCSS, showWarning, showDialog, showDot } from './modals';\n// @ts-ignore\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\n\n// Make it so we don't have to specify workersPath for CCapture gif recorder.\n// This is not a large file, so no need to separate from lib.\n// @ts-ignore\nimport gifWorkerString from 'raw-loader!./CCapture.js/gif.worker.js';\n// @ts-ignore\nimport * as JSZip from 'jszip';\nconst gifWorkersPath = URL.createObjectURL(new Blob([gifWorkerString]));\n\nlet ffmpegPath: string;\nlet ffmpeg: FFmpeg | undefined = undefined;\n\n// Export showDialog method in case it is useful.\nexport { showDialog } from './modals';\n\nconst GIF = 'gif' as const;\nexport const WEBM = 'webm' as const;\nexport const MP4 = 'mp4' as const;\nconst JPEGZIP = 'jpegzip' as const;\nconst PNGZIP = 'pngzip' as const;\nconst JPEG = 'jpeg' as const;\nconst PNG = 'png' as const;\ntype onExport = (blob: Blob, filename: string) => void;\ntype CAPTURE_TYPE =\n\ttypeof GIF | typeof WEBM | typeof MP4 |\n\ttypeof JPEGZIP | typeof PNGZIP;\n\n// Save options for hotkey controls.\nexport type WEBM_OPTIONS = {\n\tformat?: typeof WEBM,\n\tfps?: number,\n\tname?: string,\n\tquality?: number, // A number 0-1.\n\tonExportProgress?: (progress: number) => void, // Download is immediate, so this isn't very informative.  progress is a number between 0 and 1.\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tonError?: (error: any) => void,\n};\nexport type MP4_OPTIONS = {\n\tformat?: typeof MP4,\n\tfps?: number,\n\tname?: string,\n\tquality?: number, // A number 0-1.\n\tffmpegOptions?: { [key: string]: string },\n\tonExportProgress?: (progress: number) => void, // FFMPEG encoding progress, progress is a number between 0 and 1.\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tonError?: (error: any) => void,\n};\nexport type GIF_OPTIONS = {\n\tfps?: number,\n\tname?: string,\n\tquality?: number // A number 0-1.\n\tonExportProgress?: (progress: number) => void, // progress is a number between 0 and 1.\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tonError?: (error: any) => void,\n};\nexport type PNG_OPTIONS = {\n\tname?: string,\n\tdpi?: number, // Default is screen dpi (72).\n\tonExportProgress?: (progress: number) => void, // Zipping progress, only used for recording PNG frames, progress is a number between 0 and 1.\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tonError?: (error: any) => void,\n};\nexport type JPEG_OPTIONS = {\n\tname?: string,\n\tquality?: number, // A number 0-1.\n\tdpi?: number, // Default is screen dpi (72).\n\tonExportProgress?: (progress: number) => void, // Zipping progress, only used for recording JPEG frames, progress is a number between 0 and 1.\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tonError?: (error: any) => void,\n};\n\nexport type ACTIVE_CAPTURE = {\n\tname: string,\n\tcapturer: CCapture | JSZip,\n\tnumFrames: number,\n\ttype: CAPTURE_TYPE,\n\tzipOptions?: PNG_OPTIONS | JPEG_OPTIONS, // Only used for frame zip record.\n\tzipPromises?: Promise<void>[],\n\tffmpegOptions?: { [key: string]: string }, // Only used for mp4 record.\n\tonExportProgress?: (progress: number) => void,\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tonError?: (error: any) => void,\n};\nconst activeCaptures: ACTIVE_CAPTURE[] = [];\n\n// This is an unused variable,\n// but needed for proper import of CCapture at the moment.\n// See https://github.com/spite/ccapture.js/issues/78\nconst temp = CCapture;\n\ntype HOTKEY_TYPE =\n\ttypeof GIF | typeof WEBM | typeof MP4 |\n\ttypeof JPEGZIP | typeof PNGZIP |\n\ttypeof JPEG | typeof PNG;\n\nconst hotkeysSinceLastCheck: { key: string}[] = [];\n\nconst hotkeyOptions:\n{\n\t[MP4]?: MP4_OPTIONS,\n\t[WEBM]?: WEBM_OPTIONS,\n\t[GIF]?: GIF_OPTIONS,\n\t[PNGZIP]?: PNG_OPTIONS,\n\t[JPEGZIP]?: JPEG_OPTIONS,\n\t[PNG]?: PNG_OPTIONS,\n\t[JPEG]?: JPEG_OPTIONS,\n} = {};\n\nconst hotkeys: {\n\t[MP4]?: string,\n\t[WEBM]?: string,\n\t[GIF]?: string,\n\t[PNGZIP]?: string,\n\t[JPEGZIP]?: string,\n\t[PNG]?: string,\n\t[JPEG]?: string,\n} = {};\n\nlet canvas: HTMLCanvasElement | null = null;\n\nexport function init(_canvas: HTMLCanvasElement, options?: {\n\tffmpegCorePath?: string,\n\tverbose?: boolean,\n\tshowAlerts?: boolean,\n\tshowDialogs?: boolean,\n\tshowRecDot?: boolean,\n\trecDotCSS?: {[key: string]: string},\n}) {\n\tcanvas = _canvas;\n\t// Use public address if you don't want to host your own.\n\tffmpegPath = options?.ffmpegCorePath || 'https://unpkg.com/@ffmpeg/core@0.10.0/dist/ffmpeg-core.js'\n\tif (options && options.verbose !== undefined) setVerbose(options.verbose);\n\tif (options && options.showAlerts !== undefined) PARAMS.SHOW_ALERTS = options.showAlerts;\n\tif (options && options.showDialogs !== undefined) PARAMS.SHOW_DIALOGS = options.showDialogs;\n\tif (options && options.showRecDot !== undefined) PARAMS.SHOW_REC_DOT = options.showRecDot;\n\tif (PARAMS.SHOW_REC_DOT) {\n\t\tinitDotWithCSS(options?.recDotCSS);\n\t}\n\tcanvas.addEventListener('resize', onResize);\n\twindow.addEventListener('keydown', onKeydown);\n}\n\nfunction onKeydown(e: KeyboardEvent) {\n\thotkeysSinceLastCheck.push({\n\t\tkey: e.key,\n\t});\n\tif (!PARAMS.IS_MANUALLY_CHECKING_HOTKEYS) {\n\t\t// Apply hotkeys immediately.\n\t\tapplyHotkeys();\n\t}\n\t// Otherwise wait until checkHotkeys() is called.\n}\n\nfunction onResize() {\n\tif (activeCaptures.length) {\n\t\tconst warningMsg = \"Don't resize while recording canvas!\";\n\t\tshowWarning(warningMsg);\n\t}\n}\n\nexport function dispose(){\n\tcanvas?.removeEventListener('resize', onResize);\n\tcanvas = null;\n\twindow.removeEventListener('keydown', onKeydown);\n}\n\nexport function setVerbose(state: boolean) {\n\tPARAMS.VERBOSE = !!state;\n\tif (ffmpeg) ffmpeg.setLogging(PARAMS.VERBOSE);\n}\n\nfunction checkCanvas() {\n\tif (canvas === null) {\n\t\tthrow new Error('No canvas supplied, please call CanvasCapture.init() and pass in canvas element.');\n\t}\n}\n\nfunction setHotkey(key: string, type: HOTKEY_TYPE) {\n\t// Unbind other hotkeys attached to same key.\n\tObject.keys(hotkeys).forEach(keyName => {\n\t\tif (hotkeys[keyName as HOTKEY_TYPE] === key) {\n\t\t\tdelete hotkeys[keyName as HOTKEY_TYPE];\n\t\t}\n\t});\n\thotkeys[type] = key;\n}\n\n// Pressing key once will start record, press again to stop.\nexport function bindKeyToVideoRecord(key: string, options?: WEBM_OPTIONS | MP4_OPTIONS) {\n\tif (options?.format === WEBM) {\n\t\thotkeyOptions.webm = options as WEBM_OPTIONS;\n\t\tsetHotkey(key, WEBM);\n\t} else {\n\t\t// Default to MP4.\n\t\thotkeyOptions.mp4 = options as MP4_OPTIONS;\n\t\tsetHotkey(key, MP4);\n\t}\n}\nexport function bindKeyToGIFRecord(key: string, options?: GIF_OPTIONS) {\n\thotkeyOptions.gif = options;\n\tsetHotkey(key, GIF);\n}\nexport function bindKeyToPNGFramesRecord(key: string, options?: PNG_OPTIONS) {\n\thotkeyOptions.pngzip = options;\n\tsetHotkey(key, PNGZIP);\n}\nexport function bindKeyToJPEGFramesRecord(key: string, options?: JPEG_OPTIONS) {\n\thotkeyOptions.jpegzip = options;\n\tsetHotkey(key, JPEGZIP);\n}\n// Snapshots just take a single shot.\nexport function bindKeyToPNGSnapshot(key: string, options?: PNG_OPTIONS) {\n\thotkeyOptions.png = options;\n\tsetHotkey(key, PNG);\n}\nexport function bindKeyToJPEGSnapshot(key: string, options?: JPEG_OPTIONS) {\n\thotkeyOptions.jpeg = options;\n\tsetHotkey(key, JPEG);\n}\n\nfunction applyHotkeys() {\n\tfor (let i = 0; i < hotkeysSinceLastCheck.length; i++) {\n\t\tconst { key } = hotkeysSinceLastCheck[i];\n\t\tif (hotkeys.mp4 && key === hotkeys[MP4]) {\n\t\t\tconst MP4s = activeCapturesOfType(MP4);\n\t\t\tif (MP4s.length) stopRecord(MP4s);\n\t\t\telse {\n\t\t\t\tif (!browserSupportsMP4()) {\n\t\t\t\t\tconst errorMsg = `This browser does not support MP4 video recording, please try again in Chrome.`;\n\t\t\t\t\tconst onError = hotkeyOptions[MP4]?.onError;\n\t\t\t\t\tif (onError) onError(new Error(errorMsg));\n\t\t\t\t\tshowWarning(errorMsg);\n\t\t\t\t}\n\t\t\t\tbeginVideoRecord(hotkeyOptions[MP4]);\n\t\t\t}\n\t\t}\n\t\tif (hotkeys.webm && key === hotkeys[WEBM]) {\n\t\t\tconst WEBMs = activeCapturesOfType(WEBM);\n\t\t\tif (WEBMs.length) stopRecord(WEBMs);\n\t\t\telse {\n\t\t\t\tif (!browserSupportsWEBM()) {\n\t\t\t\t\tconst errorMsg = `This browser does not support WEBM video recording, please try again in Chrome.`;\n\t\t\t\t\tconst onError = hotkeyOptions[WEBM]?.onError;\n\t\t\t\t\tif (onError) onError(new Error(errorMsg));\n\t\t\t\t\tshowWarning(errorMsg);\n\t\t\t\t}\n\t\t\t\tbeginVideoRecord(hotkeyOptions[WEBM]);\n\t\t\t}\n\t\t}\n\t\tif (hotkeys.gif && key === hotkeys[GIF]) {\n\t\t\tconst GIFs = activeCapturesOfType(GIF);\n\t\t\tif (GIFs.length) stopRecord(GIFs);\n\t\t\telse beginGIFRecord(hotkeyOptions[GIF]);\n\t\t}\n\t\tif (hotkeys.pngzip && key === hotkeys[PNGZIP]) {\n\t\t\tconst pngzips = activeCapturesOfType(PNGZIP);\n\t\t\tif (pngzips.length) stopRecord(pngzips);\n\t\t\telse beginPNGFramesRecord(hotkeyOptions[PNGZIP]);\n\t\t}\n\t\tif (hotkeys.jpegzip && key === hotkeys[JPEGZIP]) {\n\t\t\tconst jpgzips = activeCapturesOfType(JPEGZIP);\n\t\t\tif (jpgzips.length) stopRecord(jpgzips);\n\t\t\telse beginJPEGFramesRecord(hotkeyOptions[JPEGZIP]);\n\t\t}\n\t\tif (hotkeys.png && key === hotkeys[PNG]) {\n\t\t\ttakePNGSnapshot(hotkeyOptions[PNG]);\n\t\t}\n\t\tif (hotkeys.jpeg && key === hotkeys[JPEG]) {\n\t\t\ttakeJPEGSnapshot(hotkeyOptions[JPEG]);\n\t\t}\n\t}\n\thotkeysSinceLastCheck.length = 0;\n}\n\nfunction startCapture(capture: ACTIVE_CAPTURE) {\n\tactiveCaptures.push(capture);\n\tif (capture.type !== PNGZIP && capture.type !== JPEGZIP) (capture.capturer as CCapture).start();\n\t// For multi-frame records, we should also throw up an indicator to show that we're in record mode.\n\tshowDot(isRecording());\n}\n\nexport function beginVideoRecord(options?: WEBM_OPTIONS | MP4_OPTIONS) {\n\ttry {\n\t\tconst format = options?.format || MP4; // Default to MP4 record.\n\t\tif (format === MP4) {\n\t\t\tif (!browserSupportsMP4()) {\n\t\t\t\tconst errorMsg = `This browser does not support MP4 video recording, please try again in Chrome.`;\n\t\t\t\tshowWarning(errorMsg);\n\t\t\t\tthrow new Error(errorMsg);\n\t\t\t}\n\t\t} else if (format === WEBM) {\n\t\t\tif (!browserSupportsWEBM()) {\n\t\t\t\tconst errorMsg = `This browser does not support WEBM video recording, please try again in Chrome.`;\n\t\t\t\tshowWarning(errorMsg);\n\t\t\t\tthrow new Error(errorMsg);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(`invalid video format ${format}.`);\n\t\t}\n\t\tif (activeVideoGifCaptures().length) {\n\t\t\tconst errorMsg = `CCapture.js only supports one video/gif capture at a time.`;\n\t\t\tshowWarning(errorMsg);\n\t\t\tthrow new Error(errorMsg);\n\t\t}\n\t\t\n\t\tlet quality = 1;\n\t\tif (options && options.quality) {\n\t\t\tquality = options.quality;\n\t\t}\n\t\tconst name = options?.name || 'Video_Capture';\n\t\t// Create a capturer that exports a WebM video.\n\t\t// @ts-ignore\n\t\tconst capturer = new (window.CCapture as CCapture)({\n\t\t\tformat: WEBM,\n\t\t\tname,\n\t\t\tframerate: options?.fps || 60,\n\t\t\tquality: quality * 100, // CCapture seems to expect a quality between 0 and 100.\n\t\t\tverbose: PARAMS.VERBOSE,\n\t\t});\n\t\tconst capture = {\n\t\t\tname,\n\t\t\tcapturer,\n\t\t\tnumFrames: 0,\n\t\t\ttype: format,\n\t\t\tffmpegOptions: (options as MP4_OPTIONS)?.ffmpegOptions,\n\t\t\tonExportProgress: options?.onExportProgress,\n\t\t\tonExport: options?.onExport,\n\t\t\tonExportFinish: options?.onExportFinish,\n\t\t\tonError: options?.onError,\n\t\t};\n\t\tstartCapture(capture);\n\t\treturn capture;\n\t} catch (error) {\n\t\tif (options?.onError) options.onError(error);\n\t\telse throw error;\n\t}\n}\n\nexport function beginGIFRecord(options?: GIF_OPTIONS) {\n\ttry {\n\t\tif (activeVideoGifCaptures().length) {\n\t\t\tconst errorMsg = `CCapture.js only supports one video/gif capture at a time.`;\n\t\t\tshowWarning(errorMsg);\n\t\t\tthrow new Error(errorMsg);\n\t\t}\n\t\t// CCapture seems to expect a quality between 0 and 100.\n\t\tlet quality = 100;\n\t\tif (options && options.quality) {\n\t\t\tquality = options.quality * 100;\n\t\t}\n\t\tconst name = options?.name || 'GIF_Capture';\n\t\t// Create a capturer that exports a GIF.\n\t\t// @ts-ignore\n\t\tconst capturer = new (window.CCapture as CCapture)({\n\t\t\tformat: GIF,\n\t\t\tname,\n\t\t\tframerate: options?.fps || 60,\n\t\t\tworkersPath: gifWorkersPath,\n\t\t\tquality,\n\t\t\tverbose: PARAMS.VERBOSE,\n\t\t\tonProgress: options?.onExportProgress,\n\t\t});\n\t\tconst capture = {\n\t\t\tname,\n\t\t\tcapturer,\n\t\t\tnumFrames: 0,\n\t\t\ttype: GIF as CAPTURE_TYPE,\n\t\t\tonExport: options?.onExport,\n\t\t\tonExportFinish: options?.onExportFinish,\n\t\t\tonError: options?.onError,\n\t\t};\n\t\tstartCapture(capture);\n\t\treturn capture;\n\t} catch (error) {\n\t\tif (options?.onError) options.onError(error);\n\t\telse throw error;\n\t}\n}\n\nexport function beginPNGFramesRecord(options?: PNG_OPTIONS) {\n\ttry {\n\t\tconst name = options?.name || 'PNG_Frames_Capture';\n\t\tconst zipOptions = { dpi: options?.dpi };\n\t\tconst capture = {\n\t\t\tname,\n\t\t\tzipOptions,\n\t\t\tzipPromises: [],\n\t\t\tcapturer: new JSZip(),\n\t\t\tnumFrames: 0,\n\t\t\ttype: PNGZIP as CAPTURE_TYPE,\n\t\t\tonExportProgress: options?.onExportProgress,\n\t\t\tonExport: options?.onExport,\n\t\t\tonExportFinish: options?.onExportFinish,\n\t\t\tonError: options?.onError,\n\t\t};\n\t\tstartCapture(capture);\n\t\treturn capture;\n\t} catch (error) {\n\t\tif (options?.onError) options.onError(error);\n\t\telse throw error;\n\t}\n}\n\nexport function beginJPEGFramesRecord(options?: JPEG_OPTIONS) {\n\ttry {\n\t\tconst name = options?.name || 'JPEG_Frames_Capture';\n\t\tconst zipOptions = { dpi: options?.dpi, quality: options?.quality };\n\t\tconst capture = {\n\t\t\tname,\n\t\t\tzipOptions,\n\t\t\tzipPromises: [],\n\t\t\tcapturer: new JSZip(),\n\t\t\tnumFrames: 0,\n\t\t\ttype: JPEGZIP as CAPTURE_TYPE,\n\t\t\tonExportProgress: options?.onExportProgress,\n\t\t\tonExport: options?.onExport,\n\t\t\tonExportFinish: options?.onExportFinish,\n\t\t\tonError: options?.onError,\n\t\t};\n\t\tstartCapture(capture);\n\t\treturn capture;\n\t} catch (error) {\n\t\tif (options?.onError) options.onError(error);\n\t\telse throw error;\n\t}\n}\n\nasync function canvasToBlobAsync(canvas: HTMLCanvasElement, type: typeof PNG | typeof JPEG, quality?: number) {\n\treturn new Promise((resolve: (blob: Blob | null) => void) => {\n\t\tcanvas.toBlob((blob: Blob | null) => {\n\t\t\tresolve(blob);\n\t\t}, `image/${type}`, quality);\n\t});\n}\n\nasync function takeImageSnapshot(filename: string, type: typeof PNG | typeof JPEG, quality?: number, options?: JPEG_OPTIONS | PNG_OPTIONS) {\n\tcheckCanvas();\n\tconst onExportFinish = options?.onExportFinish;\n\tconst blob = await canvasToBlobAsync(canvas!, type, quality);\n\tif (!blob) {\n\t\tconst errorMsg = `Problem saving ${type.toUpperCase()}, please try again!`;\n\t\tshowWarning(errorMsg);\n\t\tthrow new Error(errorMsg);\n\t}\n\tconst onExport = options?.onExport || saveAs;\n\tif (options?.dpi) {\n\t\tawait changeDpiBlob(blob, options?.dpi).then((blob: Blob) => {\n\t\t\tonExport(blob, filename);\n\t\t\tif (onExportFinish) onExportFinish();\n\t\t});\n\t} else {\n\t\tonExport(blob, filename);\n\t\tif (onExportFinish) onExportFinish();\n\t}\n}\n\nexport async function takePNGSnapshot(options?: PNG_OPTIONS) {\n\ttry {\n\t\tconst name = options?.name || 'PNG_Capture';\n\t\tconst filename = `${name}.png`;\n\t\tawait takeImageSnapshot(filename, PNG, undefined, options);\n\t} catch (error) {\n\t\tif (options?.onError) options.onError(error);\n\t\telse throw error;\n\t}\n}\n\nexport async function takeJPEGSnapshot(options?: JPEG_OPTIONS) {\n\ttry {\n\t\tconst name = options?.name || 'JPEG_Capture';\n\t\tconst filename = `${name}.jpg`;\n\t\t// Quality is a number between 0 and 1 https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob\n\t\tawait takeImageSnapshot(filename, JPEG, options?.quality || 1, options);\n\t} catch (error) {\n\t\tif (options?.onError) options.onError(error);\n\t\telse throw error;\n\t}\n}\n\nexport function recordFrame(capture?: ACTIVE_CAPTURE | ACTIVE_CAPTURE[]) {\n\tlet captures = activeCaptures;\n\tif (capture) {\n\t\tif (!Array.isArray(capture)) {\n\t\t\tcaptures = [capture];\n\t\t} else {\n\t\t\tcaptures = capture;\n\t\t}\n\t}\n\ttry {\n\t\tcheckCanvas();\n\t\tif (captures.length === 0) {\n\t\t\tconst errorMsg = 'No valid capturer inited, please call CanvasCapture.beginVideoRecord(), CanvasCapture.beginGIFRecord(), CanvasCapture.beginPNGFramesRecord(), or CanvasCapture.beginJPEGFramesRecord() first.';\n\t\t\tshowWarning(errorMsg);\n\t\t\tthrow new Error(errorMsg);\n\t\t}\n\t\tfor (let i = 0; i < captures.length; i++) {\n\t\t\tconst { capturer, type, zipOptions, zipPromises, numFrames } = captures[i];\n\t\t\tif (type === JPEGZIP || type === PNGZIP) {\n\t\t\t\t// Name should correspond to current frame.\n\t\t\t\tconst frameName = `frame_${numFrames + 1}`;\n\t\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\t\tconst options = {\n\t\t\t\t\t\tdpi: zipOptions?.dpi,\n\t\t\t\t\t\tquality: (zipOptions as JPEG_OPTIONS).quality,\n\t\t\t\t\t\tname: frameName,\n\t\t\t\t\t\tonExport: (blob: Blob, filename: string) => {\n\t\t\t\t\t\t\t(capturer as JSZip).file(filename, blob);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonExportFinish: resolve,\n\t\t\t\t\t\tonError: reject,\n\t\t\t\t\t};\n\t\t\t\t\tif (type === JPEGZIP) {\n\t\t\t\t\t\ttakeJPEGSnapshot(options);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttakePNGSnapshot(options);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tzipPromises!.push(promise);\n\t\t\t} else {\n\t\t\t\t(capturer as CCapture).capture(canvas!);\n\t\t\t}\n\t\t\tcaptures[i].numFrames = numFrames + 1\n\t\t}\n\t} catch (error) {\n\t\tlet handled = true;\n\t\tfor (let i = 0; i < captures.length; i++) {\n\t\t\tconst capture = captures[i];\n\t\t\tif (capture.onError) capture.onError(error);\n\t\t\telse handled = false;\n\t\t}\n\t\tif (!captures.length || !handled) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function CCaptureSaveAsync(capturer: CCapture) {\n\treturn new Promise((resolve: (blob: Blob) => void) => {\n\t\tcapturer.save((blob: Blob) => {\n\t\t\tresolve(blob);\n\t\t});\n\t});\n}\n\nasync function stopRecordAtIndex(index: number) {\n\tconst {\n\t\tname,\n\t\tcapturer,\n\t\tnumFrames,\n\t\ttype,\n\t\tzipPromises,\n\t\tonExportProgress,\n\t\tonExport,\n\t\tonExportFinish,\n\t\tonError,\n\t\tffmpegOptions,\n\t} = activeCaptures[index];\n\t// Remove ref to capturer.\n\tactiveCaptures.splice(index, 1);\n\n\tif (type !== PNGZIP && type !== JPEGZIP) (capturer as CCapture).stop();\n\n\tif (numFrames === 0) {\n\t\tconst errorMsg = 'No frames recorded, call CanvasCapture.recordFrame().';\n\t\tshowWarning(errorMsg);\n\t\tthrow new Error(errorMsg);\n\t}\n\n\tswitch (type) {\n\t\tcase MP4:\n\t\t\t{\n\t\t\t\tconst blob = await CCaptureSaveAsync(capturer as CCapture);\n\t\t\t\t// Tell the user that mp4s take a sec to process.\n\t\t\t\tshowDialog(\n\t\t\t\t\t'Processing...',\n\t\t\t\t\t'MP4 is processing and may take a minute to save.  You can close this dialog in the meantime.',\n\t\t\t\t\t{ autoCloseDelay: 7000 },\n\t\t\t\t);\n\t\t\t\tawait convertWEBMtoMP4({\n\t\t\t\t\tname,\n\t\t\t\t\tblob,\n\t\t\t\t\tonExportProgress: onExportProgress,\n\t\t\t\t\tonExport: onExport,\n\t\t\t\t\tonExportFinish: onExportFinish,\n\t\t\t\t\tffmpegOptions,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase WEBM:\n\t\t\t{\n\t\t\t\tif (onExportProgress) onExportProgress(0);\n\t\t\t\tconst blob = await CCaptureSaveAsync(capturer as CCapture);\n\t\t\t\tif (onExportProgress) onExportProgress(1);// Save is nearly immediate.\n\t\t\t\tconst filename = `${name}.webm`;\n\t\t\t\tif (onExport) {\n\t\t\t\t\tonExport(blob, filename);\n\t\t\t\t} else {\n\t\t\t\t\tsaveAs(blob, filename);\n\t\t\t\t}\n\t\t\t\tif (onExportFinish) onExportFinish();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase GIF:\n\t\t\t{\n\t\t\t\t// Tell the user that gifs take a sec to process.\n\t\t\t\tshowDialog(\n\t\t\t\t\t'Processing...',\n\t\t\t\t\t'GIF is processing and may take a minute to save.  You can close this dialog in the meantime.',\n\t\t\t\t\t{ autoCloseDelay: 7000 },\n\t\t\t\t);\n\t\t\t\t// onExportProgress callback already passed to CCapture.\n\t\t\t\tconst blob = await CCaptureSaveAsync(capturer as CCapture);\n\t\t\t\tconst filename = `${name}.gif`;\n\t\t\t\tif (onExport) {\n\t\t\t\t\tonExport(blob, filename);\n\t\t\t\t} else {\n\t\t\t\t\tsaveAs(blob, filename);\n\t\t\t\t}\n\t\t\t\tif (onExportFinish) onExportFinish();\n\t\t\t\tbreak;\n\t\t\t}\n\t\tcase PNGZIP:\n\t\tcase JPEGZIP:\n\t\t\t{\n\t\t\t\t// Wait for all frames to finish saving.\n\t\t\t\tawait Promise.all(zipPromises!);\n\t\t\t\t// Tell the user that frames take a sec to zip.\n\t\t\t\tshowDialog(\n\t\t\t\t\t'Processing...',\n\t\t\t\t\t'Frames are being zipped and may take a minute to save.  You can close this dialog in the meantime.',\n\t\t\t\t\t{ autoCloseDelay: 7000 },\n\t\t\t\t);\n\t\t\t\tawait (capturer as JSZip).generateAsync({ type: 'blob' }, (metadata: { percent: number }) => {\n\t\t\t\t\tif (onExportProgress) onExportProgress(metadata.percent / 100);\n\t\t\t\t}).then((blob: Blob) => {\n\t\t\t\t\tconst filename = `${name}.zip`;\n\t\t\t\t\tif (onExport) {\n\t\t\t\t\t\tonExport(blob, filename);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsaveAs(blob, filename);\n\t\t\t\t\t}\n\t\t\t\t\tif (onExportFinish) onExportFinish();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new Error(`Need to handle saving type ${type}.`);\n\t}\n}\n\nexport async function stopRecord(capture?: ACTIVE_CAPTURE | ACTIVE_CAPTURE[]) {\n\tif (capture && !Array.isArray(capture)) {\n\t\tcapture = [capture];\n\t}\n\tconst captures = capture || activeCaptures;\n\ttry {\n\t\tif (activeCaptures.length === 0) {\n\t\t\tconst errorMsg = 'No valid capturer inited, please call CanvasCapture.beginVideoRecord(), CanvasCapture.beginGIFRecord(), CanvasCapture.beginPNGFramesRecord(), or CanvasCapture.beginJPEGFramesRecord() first.';\n\t\t\tshowWarning(errorMsg);\n\t\t\tthrow new Error(errorMsg);\n\t\t}\n\n\t\tconst promises: Promise<void>[] = [];\n\t\tfor (let i = 0; i < captures.length; i++) {\n\t\t\tconst index = activeCaptures.indexOf(captures[i]);\n\t\t\tif (index < 0) throw new Error(`Invalid capture ${captures[i]} – may have already been stopped.`);\n\t\t\tpromises.push(stopRecordAtIndex(index));\n\t\t}\n\t\tshowDot(isRecording());\n\t\tawait Promise.all(promises);\n\t} catch (error) {\n\t\tlet handled = true;\n\t\tfor (let i = 0; i < captures.length; i++) {\n\t\t\tconst capture = captures[i];\n\t\t\tif (capture.onError) capture.onError(error);\n\t\t\telse handled = false;\n\t\t}\n\t\tif (!captures.length || !handled) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction activeCapturesOfType(type: CAPTURE_TYPE) {\n\tconst captures: ACTIVE_CAPTURE[] = [];\n\tfor (let i = 0; i < activeCaptures.length; i++) {\n\t\tif (activeCaptures[i].type === type) {\n\t\t\tcaptures.push(activeCaptures[i]);\n\t\t}\n\t}\n\treturn captures;\n}\n\nfunction activeVideoGifCaptures() {\n\treturn activeCapturesOfType(WEBM).concat(activeCapturesOfType(MP4)).concat(activeCapturesOfType(GIF));\n}\n\nexport function isRecording() {\n\treturn activeCaptures.length > 0;\n}\n\nexport function checkHotkeys() {\n\tPARAMS.IS_MANUALLY_CHECKING_HOTKEYS = true;\n\tapplyHotkeys();\n}\n\nlet ffmpegLoaded = false;\nasync function convertWEBMtoMP4(options: {\n\tname: string,\n\tblob: Blob,\n\tonExportProgress?: (progress: number) => void,\n\tonExport?: onExport,\n\tonExportFinish?: () => void,\n\tffmpegOptions?: { [key: string]: string },\n}) {\n\tif (!ffmpeg) {\n\t\tconst createFFmpeg = require('@ffmpeg/ffmpeg/src/createFFmpeg');\n\t\tffmpeg = createFFmpeg({\n\t\t\tcorePath: ffmpegPath,\n\t\t});\n\t}\n\tif (!ffmpegLoaded) {\n\t\tawait ffmpeg!.load().catch(() => {\n\t\t\tconst errorMsg = 'MP4 export not supported in this browser, try again in the latest version of Chrome.';\n\t\t\tshowWarning(errorMsg);\n\t\t\tthrow new Error(errorMsg);\n\t\t});\n\t\tffmpegLoaded = true;\n\t}\n\tconst { name, blob, onExportProgress, onExport, onExportFinish, ffmpegOptions } = options;\n\t// Convert blob to Uint8 array.\n\tconst _data = await blob.arrayBuffer();\n\tconst data = new Uint8Array(_data);\n\t// Write data to MEMFS, need to use Uint8Array for binary data.\n\tffmpeg!.FS('writeFile', `${name}.webm`, data);\n\t// Convert to MP4.\n\t// TODO: onProgress callback is not working quite right yet.\n\t// https://github.com/ffmpegwasm/ffmpeg.wasm/issues/112\n\tif (onExportProgress) ffmpeg!.setProgress((progress: { ratio: number }) => {\n\t\tonExportProgress(Math.max(0, Math.min(progress.ratio, 1)));\n\t});\n\t// -vf \"crop=trunc(iw/2)*2:trunc(ih/2)*2\" ensures the dimensions of the mp4 are divisible by 2.\n\t// -c:v libx264 -preset slow -crf 22 encodes as h.264 with better compression settings.\n\t// -pix_fmt yuv420p makes it compatible with the web browser.\n\t// -an creates a video with no audio.\n\tconst defaultFFMPEGOptions = {\n\t\t'-c:v': 'libx264',\n\t\t'-preset': 'slow',\n\t\t'-crf': '22',\n\t\t'-pix_fmt': 'yuv420p',\n\t};\n\tconst combinedOptions: { [key: string]: string } = {...defaultFFMPEGOptions, ...(ffmpegOptions || {})};\n\tconst _ffmpegOptions: string[] = [];\n\tObject.keys(combinedOptions).forEach(key => {\n\t\t_ffmpegOptions.push(key, combinedOptions[key]);\n\t});\n\tconst filename = `${name}.mp4`;\n\tawait ffmpeg!.run(\n\t\t'-i', `${name}.webm`,\n\t\t..._ffmpegOptions,\n\t\t'-vf', 'crop=trunc(iw/2)*2:trunc(ih/2)*2',\n\t\t'-an',\n\t\tfilename,\n\t);\n\tconst output = await ffmpeg!.FS('readFile', filename);\n\tconst outputBlob = new Blob([output], { type: 'video/mp4' });\n\tif (onExport) {\n\t\tonExport(outputBlob, filename);\n\t} else {\n\t\tsaveAs(outputBlob, filename);\n\t}\n\t// Delete files in MEMFS.\n\tffmpeg!.FS('unlink', `${name}.webm`);\n\tffmpeg!.FS('unlink', filename);\n\tif (onExportFinish) onExportFinish();\n}\n\nfunction browserSupportsWEBP() {\n\tconst _canvas = document.createElement('canvas');\n\tconst url = _canvas!.toDataURL('image/webp', { quality: 1 });\n\tif (typeof url !== \"string\" || !url.match(/^data:image\\/webp;base64,/i)) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction browserSupportsSharedArrayBuffer() {\n\ttry {\n\t\tconst test = new SharedArrayBuffer(1024);\n\t} catch {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction browserSupportsWebWorkers() {\n\treturn !!window.Worker;\n}\n\nexport function browserSupportsWEBM() {\n\treturn browserSupportsWEBP();\n}\n\nexport function browserSupportsMP4() {\n\t// Also web workers?\n\t// && browserSupportsWebWorkers()\n\treturn browserSupportsWEBP() && browserSupportsSharedArrayBuffer();\n}\n\nexport function browserSupportsGIF() {\n\treturn browserSupportsWebWorkers();\n}","export const css = `\n/**************************\\\n  Basic Modal Styles\n\\**************************/\n\n.modal {\n  font-family: -apple-system,BlinkMacSystemFont,avenir next,avenir,helvetica neue,helvetica,ubuntu,roboto,noto,segoe ui,arial,sans-serif;\n}\n\n.modal__overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal__container {\n  background-color: #fff;\n  padding: 30px;\n  max-width: 500px;\n  max-height: 100vh;\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.modal__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modal__title {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-weight: 600;\n  font-size: 1.25rem;\n  line-height: 1.25;\n  color: #222;\n  box-sizing: border-box;\n}\n\n.modal__footer {\n  text-align: right;\n}\n\n.modal__footer>.modal__btn {\n  margin-right: 8px;\n}\n\n.modal__close {\n  background: transparent;\n  border: 0;\n}\n\n.modal__header .modal__close:before { content: \"\\u2715\"; }\n\n.modal__content {\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  line-height: 1.5;\n  color: rgba(0,0,0,.8);\n}\n\n.modal__btn {\n  font-size: .875rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  background-color: #e6e6e6;\n  color: rgba(0,0,0,.8);\n  border-radius: .25rem;\n  border-style: none;\n  border-width: 0;\n  cursor: pointer;\n  -webkit-appearance: button;\n  text-transform: none;\n  overflow: visible;\n  line-height: 1.15;\n  margin: 0;\n  will-change: transform;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -webkit-transform: translateZ(0);\n  transform: translateZ(0);\n  transition: -webkit-transform .25s ease-out;\n  transition: transform .25s ease-out;\n  transition: transform .25s ease-out,-webkit-transform .25s ease-out;\n}\n\n.modal__btn:focus, .modal__btn:hover {\n  -webkit-transform: scale(1.05);\n  transform: scale(1.05);\n}\n\n.modal__btn-primary {\n  background-color: #333;\n  color: #fff;\n}\n\n\n\n/**************************\\\n  Demo Animation Style\n\\**************************/\n@keyframes mmfadeIn {\n    from { opacity: 0; }\n      to { opacity: 1; }\n}\n\n@keyframes mmfadeOut {\n    from { opacity: 1; }\n      to { opacity: 0; }\n}\n\n@keyframes mmslideIn {\n  from { transform: translateY(15%); }\n    to { transform: translateY(0); }\n}\n\n@keyframes mmslideOut {\n    from { transform: translateY(0); }\n    to { transform: translateY(-10%); }\n}\n\n.micromodal-slide {\n  display: none;\n}\n\n.micromodal-slide.is-open {\n  display: block;\n}\n\n.micromodal-slide[aria-hidden=\"false\"] .modal__overlay {\n  animation: mmfadeIn .3s cubic-bezier(0.0, 0.0, 0.2, 1);\n}\n\n.micromodal-slide[aria-hidden=\"false\"] .modal__container {\n  animation: mmslideIn .3s cubic-bezier(0, 0, .2, 1);\n}\n\n.micromodal-slide[aria-hidden=\"true\"] .modal__overlay {\n  animation: mmfadeOut .3s cubic-bezier(0.0, 0.0, 0.2, 1);\n}\n\n.micromodal-slide[aria-hidden=\"true\"] .modal__container {\n  animation: mmslideOut .3s cubic-bezier(0, 0, .2, 1);\n}\n\n.micromodal-slide .modal__container,\n.micromodal-slide .modal__overlay {\n  will-change: transform;\n}\n`\n","import MicroModal from 'micromodal';\nimport { css } from './micromodal.css';\nimport { PARAMS } from './params';\n\n// Add modal styling.\nconst style = document.createElement('style');\nstyle.textContent = css;\ndocument.head.append(style);\n\nfunction initModalHTML(modalID: string, title: string, content: string = '') {\n\tconst modalString =\n\t`<div class=\"modal micromodal-slide\" id=\"modal-${modalID}\" aria-hidden=\"true\">\n\t\t<div class=\"modal__overlay\" tabindex=\"-1\" data-micromodal-close>\n\t\t<div class=\"modal__container\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-${modalID}-title\">\n\t\t\t<header class=\"modal__header\">\n\t\t\t\t<h2 class=\"modal__title\" id=\"modal-${modalID}-title\">\n\t\t\t\t\t${title}\n\t\t\t\t</h2>\n\t\t\t\t<button class=\"modal__close\" aria-label=\"Close modal\" data-micromodal-close></button>\n\t\t\t</header>\n\t\t\t<main class=\"modal__content\">\n\t\t\t\t<p id=\"modal-${modalID}-content\">\n\t\t\t\t\t${content}\n\t\t\t\t</p>\n\t\t\t</main>\n\t\t</div>\n\t\t</div>\n\t</div>`;\n\t// This is a trick to create an element from string.\n\tconst temp = document.createElement('div');\n\ttemp.innerHTML = modalString;\n\treturn temp.firstChild as Node;\n};\n\nlet alertModalInited = false;\nlet dialogModalInited = false;\n\nconst ALERT_MODAL_ID = 'alert';\nconst alertModal = initModalHTML(ALERT_MODAL_ID, 'Warning');\n\nconst DIALOG_MODAL_ID = 'dialog';\nconst dialogModal = initModalHTML(DIALOG_MODAL_ID, 'Saving...');\n\nexport function showWarning(message: string) {\n\tconsole.warn(message);\n\tif (!PARAMS.SHOW_ALERTS) {\n\t\treturn;\n\t}\n\tif (!alertModalInited) {\n\t\talertModalInited = true;\n\t\tdocument.getElementsByTagName('body')[0].appendChild(alertModal);\n\t}\n\t(document.getElementById(`modal-${ALERT_MODAL_ID}-content`) as HTMLElement).innerHTML = message;\n\tMicroModal.show(`modal-${ALERT_MODAL_ID}`);\n}\n\nexport function showDialog(title: string, message: string, options?: {\n\tautoCloseDelay?: number,\n}) {\n\tif (PARAMS.VERBOSE) console.log(title, message);\n\tif (!PARAMS.SHOW_DIALOGS) {\n\t\treturn;\n\t}\n\tif (!dialogModalInited) {\n\t\tdialogModalInited = true;\n\t\tdocument.getElementsByTagName('body')[0].appendChild(dialogModal);\n\t}\n\t(document.getElementById(`modal-${DIALOG_MODAL_ID}-title`) as HTMLElement).innerHTML = title;\n\t(document.getElementById(`modal-${DIALOG_MODAL_ID}-content`) as HTMLElement).innerHTML = message;\n\tMicroModal.show(`modal-${DIALOG_MODAL_ID}`);\n\tconst autoCloseDelay = options?.autoCloseDelay !== undefined ? options.autoCloseDelay : -1;\n\tif (autoCloseDelay > 0) {\n\t\tsetTimeout(() => {\n\t\t\tMicroModal.close(`modal-${DIALOG_MODAL_ID}`);\n\t\t}, autoCloseDelay);\n\t}\n}\n\n// Create record red dot vis to overlay when recording is happening.\nconst dot = document.createElement('div');\nexport function initDotWithCSS(css?: {[key: string]: string}){\n\tdot.id = 'recordingDot';\n\tconst dotCSS = {\n\t\tbackground: \"red\",\n\t\twidth: \"20px\",\n\t\theight: \"20px\",\n\t\t\"border-radius\": \"50%\",\n\t\tdisplay: \"none\",\n\t\tposition: \"absolute\",\n\t\ttop: \"0\",\n\t\tright: \"0\",\n\t\t\"z-index\": \"10\",\n\t\tmargin: \"20px\",\n\t\t...css,\n\t};\n\tObject.assign(dot.style, dotCSS);\n\tdocument.getElementsByTagName('body')[0].appendChild(dot);\n}\n\nexport function showDot(visible: boolean) {\n\tif (!PARAMS.SHOW_REC_DOT) return;\n\tif (visible) {\n\t\tdot.style.display = \"inline-block\";\n\t} else {\n\t\tdot.style.display = \"none\";\n\t}\n}","// Params.\nexport const PARAMS = {\n\tVERBOSE: false,\n\tSHOW_ALERTS: false,\n\tSHOW_DIALOGS: false,\n\tSHOW_REC_DOT: false,\n\tIS_MANUALLY_CHECKING_HOTKEYS: false,\n};",";(function() {\r\n\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n  var Tar = require('./tar.js');\r\n  var download = require('./download.js');\r\n  var GIF = require('./gif.js');\r\n  var WebMWriter = require('./webm-writer-0.2.0');\r\n}\r\n\r\n\"use strict\";\r\n\r\nvar objectTypes = {\r\n'function': true,\r\n'object': true\r\n};\r\n\r\nfunction checkGlobal(value) {\r\n    return (value && value.Object === Object) ? value : null;\r\n  }\r\n\r\n/** Built-in method references without a dependency on `root`. */\r\nvar freeParseFloat = parseFloat,\r\n  freeParseInt = parseInt;\r\n\r\n/** Detect free variable `exports`. */\r\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\r\n? exports\r\n: undefined;\r\n\r\n/** Detect free variable `module`. */\r\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\r\n? module\r\n: undefined;\r\n\r\n/** Detect the popular CommonJS extension `module.exports`. */\r\nvar moduleExports = (freeModule && freeModule.exports === freeExports)\r\n? freeExports\r\n: undefined;\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\r\n\r\n/** Detect free variable `window`. */\r\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\r\n\r\n/** Detect `this` as the global object. */\r\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\r\n\r\n/**\r\n* Used as a reference to the global object.\r\n*\r\n* The `this` value is used if it's the global object to avoid Greasemonkey's\r\n* restricted `window` object, otherwise the `window` object is used.\r\n*/\r\nvar root = freeGlobal ||\r\n((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\r\n  freeSelf || thisGlobal || Function('return this')();\r\n\r\nif( !('gc' in window ) ) {\r\n\twindow.gc = function(){}\r\n}\r\n\r\nif (!HTMLCanvasElement.prototype.toBlob) {\r\n Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n  value: function (callback, type, quality) {\r\n\r\n    var binStr = atob( this.toDataURL(type, quality).split(',')[1] ),\r\n        len = binStr.length,\r\n        arr = new Uint8Array(len);\r\n\r\n    for (var i=0; i<len; i++ ) {\r\n     arr[i] = binStr.charCodeAt(i);\r\n    }\r\n\r\n    callback( new Blob( [arr], {type: type || 'image/png'} ) );\r\n  }\r\n });\r\n}\r\n\r\n// @license http://opensource.org/licenses/MIT\r\n// copyright Paul Irish 2015\r\n\r\n\r\n// Date.now() is supported everywhere except IE8. For IE8 we use the Date.now polyfill\r\n//   github.com/Financial-Times/polyfill-service/blob/master/polyfills/Date.now/polyfill.js\r\n// as Safari 6 doesn't have support for NavigationTiming, we use a Date.now() timestamp for relative values\r\n\r\n// if you want values similar to what you'd get with real perf.now, place this towards the head of the page\r\n// but in reality, you're just getting the delta between now() calls, so it's not terribly important where it's placed\r\n\r\n\r\n(function(){\r\n\r\n  if (\"performance\" in window == false) {\r\n      window.performance = {};\r\n  }\r\n\r\n  Date.now = (Date.now || function () {  // thanks IE8\r\n\t  return new Date().getTime();\r\n  });\r\n\r\n  if (\"now\" in window.performance == false){\r\n\r\n    var nowOffset = Date.now();\r\n\r\n    if (performance.timing && performance.timing.navigationStart){\r\n      nowOffset = performance.timing.navigationStart\r\n    }\r\n\r\n    window.performance.now = function now(){\r\n      return Date.now() - nowOffset;\r\n    }\r\n  }\r\n\r\n})();\r\n\r\n\r\nfunction pad( n ) {\r\n\treturn String(\"0000000\" + n).slice(-7);\r\n}\r\n// https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Timers\r\n\r\nvar g_startTime = window.Date.now();\r\n\r\nfunction guid() {\r\n\tfunction s4() {\r\n\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n\t}\r\n\treturn s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\nfunction CCFrameEncoder( settings ) {\r\n\r\n\tvar _handlers = {};\r\n\r\n\tthis.settings = settings;\r\n\r\n\tthis.on = function(event, handler) {\r\n\r\n\t\t_handlers[event] = handler;\r\n\r\n\t};\r\n\r\n\tthis.emit = function(event) {\r\n\r\n\t\tvar handler = _handlers[event];\r\n\t\tif (handler) {\r\n\r\n\t\t\thandler.apply(null, Array.prototype.slice.call(arguments, 1));\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.filename = settings.name || guid();\r\n\tthis.extension = '';\r\n\tthis.mimeType = '';\r\n\r\n}\r\n\r\nCCFrameEncoder.prototype.start = function(){};\r\nCCFrameEncoder.prototype.stop = function(){};\r\nCCFrameEncoder.prototype.add = function(){};\r\nCCFrameEncoder.prototype.save = function(){};\r\nCCFrameEncoder.prototype.dispose = function(){};\r\nCCFrameEncoder.prototype.safeToProceed = function(){ return true; };\r\nCCFrameEncoder.prototype.step = function() { console.log( 'Step not set!' ) }\r\n\r\nfunction CCTarEncoder( settings ) {\r\n\r\n\tCCFrameEncoder.call( this, settings );\r\n\r\n\tthis.extension = '.tar'\r\n\tthis.mimeType = 'application/x-tar'\r\n\tthis.fileExtension = '';\r\n\r\n\tthis.tape = null\r\n\tthis.count = 0;\r\n\r\n}\r\n\r\nCCTarEncoder.prototype = Object.create( CCFrameEncoder.prototype );\r\n\r\nCCTarEncoder.prototype.start = function(){\r\n\r\n\tthis.dispose();\r\n\r\n};\r\n\r\nCCTarEncoder.prototype.add = function( blob ) {\r\n\r\n\tvar fileReader = new FileReader();\r\n\tfileReader.onload = function() {\r\n\t\tthis.tape.append( pad( this.count ) + this.fileExtension, new Uint8Array( fileReader.result ) );\r\n\r\n\t\t//if( this.settings.autoSaveTime > 0 && ( this.frames.length / this.settings.framerate ) >= this.settings.autoSaveTime ) {\r\n\r\n\t\tthis.count++;\r\n\t\tthis.step();\r\n\t}.bind( this );\r\n\tfileReader.readAsArrayBuffer(blob);\r\n\r\n}\r\n\r\nCCTarEncoder.prototype.save = function( callback ) {\r\n\r\n\tcallback( this.tape.save() );\r\n\r\n}\r\n\r\nCCTarEncoder.prototype.dispose = function() {\r\n\r\n\tthis.tape = new Tar();\r\n\tthis.count = 0;\r\n\r\n}\r\n\r\nfunction CCPNGEncoder( settings ) {\r\n\r\n\tCCTarEncoder.call( this, settings );\r\n\r\n\tthis.type = 'image/png';\r\n\tthis.fileExtension = '.png';\r\n\r\n}\r\n\r\nCCPNGEncoder.prototype = Object.create( CCTarEncoder.prototype );\r\n\r\nCCPNGEncoder.prototype.add = function( canvas ) {\r\n\r\n\tcanvas.toBlob( function( blob ) {\r\n\t\tCCTarEncoder.prototype.add.call( this, blob );\r\n\t}.bind( this ), this.type )\r\n\r\n}\r\n\r\nfunction CCJPEGEncoder( settings ) {\r\n\r\n\tCCTarEncoder.call( this, settings );\r\n\r\n\tthis.type = 'image/jpeg';\r\n\tthis.fileExtension = '.jpg';\r\n\tthis.quality = ( settings.quality / 100 ) || .8;\r\n\r\n}\r\n\r\nCCJPEGEncoder.prototype = Object.create( CCTarEncoder.prototype );\r\n\r\nCCJPEGEncoder.prototype.add = function( canvas ) {\r\n\r\n\tcanvas.toBlob( function( blob ) {\r\n\t\tCCTarEncoder.prototype.add.call( this, blob );\r\n\t}.bind( this ), this.type, this.quality )\r\n\r\n}\r\n\r\n/*\r\n\r\n\tWebM Encoder\r\n\r\n*/\r\n\r\nfunction CCWebMEncoder( settings ) {\r\n\r\n\tvar canvas = document.createElement( 'canvas' );\r\n\tif( canvas.toDataURL( 'image/webp' ).substr(5,10) !== 'image/webp' ){\r\n\t\tconsole.log( \"WebP not supported - try another export format\" )\r\n\t}\r\n\r\n\tCCFrameEncoder.call( this, settings );\r\n\r\n\tthis.quality = ( settings.quality / 100 ) || .8;\r\n\r\n\tthis.extension = '.webm'\r\n\tthis.mimeType = 'video/webm'\r\n\tthis.baseFilename = this.filename;\r\n\r\n\tthis.frames = [];\r\n\tthis.part = 1;\r\n\r\n  this.videoWriter = new WebMWriter({\r\n    quality: this.quality,\r\n    fileWriter: null,\r\n    fd: null,\r\n    frameRate: settings.framerate\r\n});\r\n\r\n\r\n}\r\n\r\nCCWebMEncoder.prototype = Object.create( CCFrameEncoder.prototype );\r\n\r\nCCWebMEncoder.prototype.start = function( canvas ) {\r\n\r\n\tthis.dispose();\r\n\r\n}\r\n\r\nCCWebMEncoder.prototype.add = function( canvas ) {\r\n\r\n  this.videoWriter.addFrame(canvas);\r\n\r\n\t//this.frames.push( canvas.toDataURL('image/webp', this.quality) );\r\n\r\n\tif( this.settings.autoSaveTime > 0 && ( this.frames.length / this.settings.framerate ) >= this.settings.autoSaveTime ) {\r\n\t\tthis.save( function( blob ) {\r\n\t\t\tthis.filename = this.baseFilename + '-part-' + pad( this.part );\r\n\t\t\tdownload( blob, this.filename + this.extension, this.mimeType );\r\n\t\t\tthis.dispose();\r\n\t\t\tthis.part++;\r\n\t\t\tthis.filename = this.baseFilename + '-part-' + pad( this.part );\r\n\t\t\tthis.step();\r\n\t\t}.bind( this ) )\r\n\t} else {\r\n\t\tthis.step();\r\n\t}\r\n\r\n}\r\n\r\nCCWebMEncoder.prototype.save = function( callback ) {\r\n\r\n//\tif( !this.frames.length ) return;\r\n\r\n  this.videoWriter.complete().then(callback);\r\n\r\n\t/*var webm = Whammy.fromImageArray( this.frames, this.settings.framerate )\r\n\tvar blob = new Blob( [ webm ], { type: \"octet/stream\" } );\r\n\tcallback( blob );*/\r\n\r\n}\r\n\r\nCCWebMEncoder.prototype.dispose = function( canvas ) {\r\n\r\n\tthis.frames = [];\r\n\r\n}\r\n\r\nfunction CCFFMpegServerEncoder( settings ) {\r\n\r\n\tCCFrameEncoder.call( this, settings );\r\n\r\n\tsettings.quality = ( settings.quality / 100 ) || .8;\r\n\r\n\tthis.encoder = new FFMpegServer.Video( settings );\r\n    this.encoder.on( 'process', function() {\r\n        this.emit( 'process' )\r\n    }.bind( this ) );\r\n    this.encoder.on('finished', function( url, size ) {\r\n        var cb = this.callback;\r\n        if ( cb ) {\r\n            this.callback = undefined;\r\n            cb( url, size );\r\n        }\r\n    }.bind( this ) );\r\n    this.encoder.on( 'progress', function( progress ) {\r\n        if ( this.settings.onProgress ) {\r\n            this.settings.onProgress( progress )\r\n        }\r\n    }.bind( this ) );\r\n    this.encoder.on( 'error', function( data ) {\r\n        alert(JSON.stringify(data, null, 2));\r\n    }.bind( this ) );\r\n\r\n}\r\n\r\nCCFFMpegServerEncoder.prototype = Object.create( CCFrameEncoder.prototype );\r\n\r\nCCFFMpegServerEncoder.prototype.start = function() {\r\n\r\n\tthis.encoder.start( this.settings );\r\n\r\n};\r\n\r\nCCFFMpegServerEncoder.prototype.add = function( canvas ) {\r\n\r\n\tthis.encoder.add( canvas );\r\n\r\n}\r\n\r\nCCFFMpegServerEncoder.prototype.save = function( callback ) {\r\n\r\n    this.callback = callback;\r\n    this.encoder.end();\r\n\r\n}\r\n\r\nCCFFMpegServerEncoder.prototype.safeToProceed = function() {\r\n    return this.encoder.safeToProceed();\r\n};\r\n\r\n/*\r\n\tHTMLCanvasElement.captureStream()\r\n*/\r\n\r\nfunction CCStreamEncoder( settings ) {\r\n\r\n\tCCFrameEncoder.call( this, settings );\r\n\r\n\tthis.framerate = this.settings.framerate;\r\n\tthis.type = 'video/webm';\r\n\tthis.extension = '.webm';\r\n\tthis.stream = null;\r\n\tthis.mediaRecorder = null;\r\n\tthis.chunks = [];\r\n\r\n}\r\n\r\nCCStreamEncoder.prototype = Object.create( CCFrameEncoder.prototype );\r\n\r\nCCStreamEncoder.prototype.add = function( canvas ) {\r\n\r\n\tif( !this.stream ) {\r\n\t\tthis.stream = canvas.captureStream( this.framerate );\r\n\t\tthis.mediaRecorder = new MediaRecorder( this.stream );\r\n\t\tthis.mediaRecorder.start();\r\n\r\n\t\tthis.mediaRecorder.ondataavailable = function(e) {\r\n\t\t\tthis.chunks.push(e.data);\r\n\t\t}.bind( this );\r\n\r\n\t}\r\n\tthis.step();\r\n\r\n}\r\n\r\nCCStreamEncoder.prototype.save = function( callback ) {\r\n\r\n\tthis.mediaRecorder.onstop = function( e ) {\r\n\t\tvar blob = new Blob( this.chunks, { 'type' : 'video/webm' });\r\n\t\tthis.chunks = [];\r\n\t\tcallback( blob );\r\n\r\n\t}.bind( this );\r\n\r\n\tthis.mediaRecorder.stop();\r\n\r\n}\r\n\r\n/*function CCGIFEncoder( settings ) {\r\n\r\n\tCCFrameEncoder.call( this );\r\n\r\n\tsettings.quality = settings.quality || 6;\r\n\tthis.settings = settings;\r\n\r\n\tthis.encoder = new GIFEncoder();\r\n\tthis.encoder.setRepeat( 1 );\r\n  \tthis.encoder.setDelay( settings.step );\r\n  \tthis.encoder.setQuality( 6 );\r\n  \tthis.encoder.setTransparent( null );\r\n  \tthis.encoder.setSize( 150, 150 );\r\n\r\n  \tthis.canvas = document.createElement( 'canvas' );\r\n  \tthis.ctx = this.canvas.getContext( '2d' );\r\n\r\n}\r\n\r\nCCGIFEncoder.prototype = Object.create( CCFrameEncoder );\r\n\r\nCCGIFEncoder.prototype.start = function() {\r\n\r\n\tthis.encoder.start();\r\n\r\n}\r\n\r\nCCGIFEncoder.prototype.add = function( canvas ) {\r\n\r\n\tthis.canvas.width = canvas.width;\r\n\tthis.canvas.height = canvas.height;\r\n\tthis.ctx.drawImage( canvas, 0, 0 );\r\n\tthis.encoder.addFrame( this.ctx );\r\n\r\n\tthis.encoder.setSize( canvas.width, canvas.height );\r\n\tvar readBuffer = new Uint8Array(canvas.width * canvas.height * 4);\r\n\tvar context = canvas.getContext( 'webgl' );\r\n\tcontext.readPixels(0, 0, canvas.width, canvas.height, context.RGBA, context.UNSIGNED_BYTE, readBuffer);\r\n\tthis.encoder.addFrame( readBuffer, true );\r\n\r\n}\r\n\r\nCCGIFEncoder.prototype.stop = function() {\r\n\r\n\tthis.encoder.finish();\r\n\r\n}\r\n\r\nCCGIFEncoder.prototype.save = function( callback ) {\r\n\r\n\tvar binary_gif = this.encoder.stream().getData();\r\n\r\n\tvar data_url = 'data:image/gif;base64,'+encode64(binary_gif);\r\n\twindow.location = data_url;\r\n\treturn;\r\n\r\n\tvar blob = new Blob( [ binary_gif ], { type: \"octet/stream\" } );\r\n\tvar url = window.URL.createObjectURL( blob );\r\n\tcallback( url );\r\n\r\n}*/\r\n\r\nfunction CCGIFEncoder( settings ) {\r\n\r\n\tCCFrameEncoder.call( this, settings );\r\n\r\n\tsettings.quality = 31 - ( ( settings.quality * 30 / 100 ) || 10 );\r\n\tsettings.workers = settings.workers || 4;\r\n\r\n\tthis.extension = '.gif'\r\n\tthis.mimeType = 'image/gif'\r\n\r\n  \tthis.canvas = document.createElement( 'canvas' );\r\n  \tthis.ctx = this.canvas.getContext( '2d' );\r\n  \tthis.sizeSet = false;\r\n\r\n  \tthis.encoder = new GIF({\r\n\t\tworkers: settings.workers,\r\n\t\tquality: settings.quality,\r\n\t\tworkerScript: settings.workersPath,\r\n\t} );\r\n\r\n    this.encoder.on( 'progress', function( progress ) {\r\n        if ( this.settings.onProgress ) {\r\n            this.settings.onProgress( progress )\r\n        }\r\n    }.bind( this ) );\r\n\r\n    this.encoder.on('finished', function( blob ) {\r\n        var cb = this.callback;\r\n        if ( cb ) {\r\n            this.callback = undefined;\r\n            cb( blob );\r\n        }\r\n    }.bind( this ) );\r\n\r\n}\r\n\r\nCCGIFEncoder.prototype = Object.create( CCFrameEncoder.prototype );\r\n\r\nCCGIFEncoder.prototype.add = function( canvas ) {\r\n\r\n\tif( !this.sizeSet ) {\r\n\t\tthis.encoder.setOption( 'width',canvas.width );\r\n\t\tthis.encoder.setOption( 'height',canvas.height );\r\n\t\tthis.sizeSet = true;\r\n\t}\r\n\r\n\tthis.canvas.width = canvas.width;\r\n\tthis.canvas.height = canvas.height;\r\n\tthis.ctx.drawImage( canvas, 0, 0 );\r\n\r\n\tthis.encoder.addFrame( this.ctx, { copy: true, delay: this.settings.step } );\r\n\tthis.step();\r\n\r\n\t/*this.encoder.setSize( canvas.width, canvas.height );\r\n\tvar readBuffer = new Uint8Array(canvas.width * canvas.height * 4);\r\n\tvar context = canvas.getContext( 'webgl' );\r\n\tcontext.readPixels(0, 0, canvas.width, canvas.height, context.RGBA, context.UNSIGNED_BYTE, readBuffer);\r\n\tthis.encoder.addFrame( readBuffer, true );*/\r\n\r\n}\r\n\r\nCCGIFEncoder.prototype.save = function( callback ) {\r\n\r\n    this.callback = callback;\r\n\r\n\tthis.encoder.render();\r\n\r\n}\r\n\r\nfunction CCapture( settings ) {\r\n\r\n\tvar _settings = settings || {},\r\n\t\t_date = new Date(),\r\n\t\t_verbose,\r\n\t\t_display,\r\n\t\t_time,\r\n\t\t_startTime,\r\n\t\t_performanceTime,\r\n\t\t_performanceStartTime,\r\n\t\t_step,\r\n        _encoder,\r\n\t\t_timeouts = [],\r\n\t\t_intervals = [],\r\n\t\t_frameCount = 0,\r\n\t\t_intermediateFrameCount = 0,\r\n\t\t_lastFrame = null,\r\n\t\t_requestAnimationFrameCallbacks = [],\r\n\t\t_capturing = false,\r\n        _handlers = {};\r\n\r\n\t_settings.framerate = _settings.framerate || 60;\r\n\t_settings.motionBlurFrames = 2 * ( _settings.motionBlurFrames || 1 );\r\n\t_verbose = _settings.verbose || false;\r\n\t_display = _settings.display || false;\r\n\t_settings.step = 1000.0 / _settings.framerate ;\r\n\t_settings.timeLimit = _settings.timeLimit || 0;\r\n\t_settings.frameLimit = _settings.frameLimit || 0;\r\n\t_settings.startTime = _settings.startTime || 0;\r\n\r\n\tvar _timeDisplay = document.createElement( 'div' );\r\n\t_timeDisplay.style.position = 'absolute';\r\n\t_timeDisplay.style.left = _timeDisplay.style.top = 0\r\n\t_timeDisplay.style.backgroundColor = 'black';\r\n\t_timeDisplay.style.fontFamily = 'monospace'\r\n\t_timeDisplay.style.fontSize = '11px'\r\n\t_timeDisplay.style.padding = '5px'\r\n\t_timeDisplay.style.color = 'red';\r\n\t_timeDisplay.style.zIndex = 100000\r\n\tif( _settings.display ) document.body.appendChild( _timeDisplay );\r\n\r\n\tvar canvasMotionBlur = document.createElement( 'canvas' );\r\n\tvar ctxMotionBlur = canvasMotionBlur.getContext( '2d' );\r\n\tvar bufferMotionBlur;\r\n\tvar imageData;\r\n\r\n\t_log( 'Step is set to ' + _settings.step + 'ms' );\r\n\r\n    var _encoders = {\r\n\t\tgif: CCGIFEncoder,\r\n\t\twebm: CCWebMEncoder,\r\n\t\tffmpegserver: CCFFMpegServerEncoder,\r\n\t\tpng: CCPNGEncoder,\r\n\t\tjpg: CCJPEGEncoder,\r\n\t\t'webm-mediarecorder': CCStreamEncoder\r\n    };\r\n\r\n    var ctor = _encoders[ _settings.format ];\r\n    if ( !ctor ) {\r\n\t\tthrow \"Error: Incorrect or missing format: Valid formats are \" + Object.keys(_encoders).join(\", \");\r\n    }\r\n    _encoder = new ctor( _settings );\r\n    _encoder.step = _step\r\n\r\n\t_encoder.on('process', _process);\r\n    _encoder.on('progress', _progress);\r\n\r\n    if (\"performance\" in window == false) {\r\n    \twindow.performance = {};\r\n    }\r\n\r\n\tDate.now = (Date.now || function () {  // thanks IE8\r\n\t\treturn new Date().getTime();\r\n\t});\r\n\r\n\tif (\"now\" in window.performance == false){\r\n\r\n\t\tvar nowOffset = Date.now();\r\n\r\n\t\tif (performance.timing && performance.timing.navigationStart){\r\n\t\t\tnowOffset = performance.timing.navigationStart\r\n\t\t}\r\n\r\n\t\twindow.performance.now = function now(){\r\n\t\t\treturn Date.now() - nowOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tvar _oldSetTimeout = window.setTimeout,\r\n\t\t_oldSetInterval = window.setInterval,\r\n\t    \t_oldClearInterval = window.clearInterval,\r\n\t\t_oldClearTimeout = window.clearTimeout,\r\n\t\t_oldRequestAnimationFrame = window.requestAnimationFrame,\r\n\t\t_oldNow = window.Date.now,\r\n\t\t_oldPerformanceNow = window.performance.now,\r\n\t\t_oldGetTime = window.Date.prototype.getTime;\r\n\t// Date.prototype._oldGetTime = Date.prototype.getTime;\r\n\r\n\tvar media = [];\r\n\r\n\tfunction _init() {\r\n\r\n\t\t_log( 'Capturer start' );\r\n\r\n\t\t_startTime = window.Date.now();\r\n\t\t_time = _startTime + _settings.startTime;\r\n\t\t_performanceStartTime = window.performance.now();\r\n\t\t_performanceTime = _performanceStartTime + _settings.startTime;\r\n\r\n\t\twindow.Date.prototype.getTime = function(){\r\n\t\t\treturn _time;\r\n\t\t};\r\n\t\twindow.Date.now = function() {\r\n\t\t\treturn _time;\r\n\t\t};\r\n\r\n\t\twindow.setTimeout = function( callback, time ) {\r\n\t\t\tvar t = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\ttime: time,\r\n\t\t\t\ttriggerTime: _time + time\r\n\t\t\t};\r\n\t\t\t_timeouts.push( t );\r\n\t\t\t_log( 'Timeout set to ' + t.time );\r\n            return t;\r\n\t\t};\r\n\t\twindow.clearTimeout = function( id ) {\r\n\t\t\tfor( var j = 0; j < _timeouts.length; j++ ) {\r\n\t\t\t\tif( _timeouts[ j ] == id ) {\r\n\t\t\t\t\t_timeouts.splice( j, 1 );\r\n\t\t\t\t\t_log( 'Timeout cleared' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\twindow.setInterval = function( callback, time ) {\r\n\t\t\tvar t = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\ttime: time,\r\n\t\t\t\ttriggerTime: _time + time\r\n\t\t\t};\r\n\t\t\t_intervals.push( t );\r\n\t\t\t_log( 'Interval set to ' + t.time );\r\n\t\t\treturn t;\r\n\t\t};\r\n\t\twindow.clearInterval = function( id ) {\r\n\t\t\t_log( 'clear Interval' );\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\twindow.requestAnimationFrame = function( callback ) {\r\n\t\t\t_requestAnimationFrameCallbacks.push( callback );\r\n\t\t};\r\n\t\twindow.performance.now = function(){\r\n\t\t\treturn _performanceTime;\r\n\t\t};\r\n\r\n\t\tfunction hookCurrentTime() {\r\n\t\t\tif( !this._hooked ) {\r\n\t\t\t\tthis._hooked = true;\r\n\t\t\t\tthis._hookedTime = this.currentTime || 0;\r\n\t\t\t\tthis.pause();\r\n\t\t\t\tmedia.push( this );\r\n\t\t\t}\r\n\t\t\treturn this._hookedTime + _settings.startTime;\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tObject.defineProperty( HTMLVideoElement.prototype, 'currentTime', { get: hookCurrentTime } )\r\n\t\t\tObject.defineProperty( HTMLAudioElement.prototype, 'currentTime', { get: hookCurrentTime } )\r\n\t\t} catch (err) {\r\n\t\t\t_log(err);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction _start() {\r\n\t\t_init();\r\n\t\t_encoder.start();\r\n\t\t_capturing = true;\r\n\t}\r\n\r\n\tfunction _stop() {\r\n\t\t_capturing = false;\r\n\t\t_encoder.stop();\r\n\t\t_destroy();\r\n\t}\r\n\r\n\tfunction _call( fn, p ) {\r\n\t\t_oldSetTimeout( fn, 0, p );\r\n\t}\r\n\r\n\tfunction _step() {\r\n\t\t//_oldRequestAnimationFrame( _process );\r\n\t\t_call( _process );\r\n\t}\r\n\r\n\tfunction _destroy() {\r\n\t\t_log( 'Capturer stop' );\r\n\t\twindow.setTimeout = _oldSetTimeout;\r\n\t\twindow.setInterval = _oldSetInterval;\r\n\t\twindow.clearInterval = _oldClearInterval;\r\n\t\twindow.clearTimeout = _oldClearTimeout;\r\n\t\twindow.requestAnimationFrame = _oldRequestAnimationFrame;\r\n\t\twindow.Date.prototype.getTime = _oldGetTime;\r\n\t\twindow.Date.now = _oldNow;\r\n\t\twindow.performance.now = _oldPerformanceNow;\r\n\t}\r\n\r\n\tfunction _updateTime() {\r\n\t\tvar seconds = _frameCount / _settings.framerate;\r\n\t\tif( ( _settings.frameLimit && _frameCount >= _settings.frameLimit ) || ( _settings.timeLimit && seconds >= _settings.timeLimit ) ) {\r\n\t\t\t_stop();\r\n\t\t\t_save();\r\n\t\t}\r\n\t\tvar d = new Date( null );\r\n\t\td.setSeconds( seconds );\r\n\t\tif( _settings.motionBlurFrames > 2 ) {\r\n\t\t\t_timeDisplay.textContent = 'CCapture ' + _settings.format + ' | ' + _frameCount + ' frames (' + _intermediateFrameCount + ' inter) | ' +  d.toISOString().substr( 11, 8 );\r\n\t\t} else {\r\n\t\t\t_timeDisplay.textContent = 'CCapture ' + _settings.format + ' | ' + _frameCount + ' frames | ' +  d.toISOString().substr( 11, 8 );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _checkFrame( canvas ) {\r\n\r\n\t\tif( canvasMotionBlur.width !== canvas.width || canvasMotionBlur.height !== canvas.height ) {\r\n\t\t\tcanvasMotionBlur.width = canvas.width;\r\n\t\t\tcanvasMotionBlur.height = canvas.height;\r\n\t\t\tbufferMotionBlur = new Uint16Array( canvasMotionBlur.height * canvasMotionBlur.width * 4 );\r\n\t\t\tctxMotionBlur.fillStyle = '#0'\r\n\t\t\tctxMotionBlur.fillRect( 0, 0, canvasMotionBlur.width, canvasMotionBlur.height );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction _blendFrame( canvas ) {\r\n\r\n\t\t//_log( 'Intermediate Frame: ' + _intermediateFrameCount );\r\n\r\n\t\tctxMotionBlur.drawImage( canvas, 0, 0 );\r\n\t\timageData = ctxMotionBlur.getImageData( 0, 0, canvasMotionBlur.width, canvasMotionBlur.height );\r\n\t\tfor( var j = 0; j < bufferMotionBlur.length; j+= 4 ) {\r\n\t\t\tbufferMotionBlur[ j ] += imageData.data[ j ];\r\n\t\t\tbufferMotionBlur[ j + 1 ] += imageData.data[ j + 1 ];\r\n\t\t\tbufferMotionBlur[ j + 2 ] += imageData.data[ j + 2 ];\r\n\t\t}\r\n\t\t_intermediateFrameCount++;\r\n\r\n\t}\r\n\r\n\tfunction _saveFrame(){\r\n\r\n\t\tvar data = imageData.data;\r\n\t\tfor( var j = 0; j < bufferMotionBlur.length; j+= 4 ) {\r\n\t\t\tdata[ j ] = bufferMotionBlur[ j ] * 2 / _settings.motionBlurFrames;\r\n\t\t\tdata[ j + 1 ] = bufferMotionBlur[ j + 1 ] * 2 / _settings.motionBlurFrames;\r\n\t\t\tdata[ j + 2 ] = bufferMotionBlur[ j + 2 ] * 2 / _settings.motionBlurFrames;\r\n\t\t}\r\n\t\tctxMotionBlur.putImageData( imageData, 0, 0 );\r\n\t\t_encoder.add( canvasMotionBlur );\r\n\t\t_frameCount++;\r\n\t\t_intermediateFrameCount = 0;\r\n\t\t_log( 'Full MB Frame! ' + _frameCount + ' ' +  _time );\r\n\t\tfor( var j = 0; j < bufferMotionBlur.length; j+= 4 ) {\r\n\t\t\tbufferMotionBlur[ j ] = 0;\r\n\t\t\tbufferMotionBlur[ j + 1 ] = 0;\r\n\t\t\tbufferMotionBlur[ j + 2 ] = 0;\r\n\t\t}\r\n\t\tgc();\r\n\r\n\t}\r\n\r\n\tfunction _capture( canvas ) {\r\n\r\n\t\tif( _capturing ) {\r\n\r\n\t\t\tif( _settings.motionBlurFrames > 2 ) {\r\n\r\n\t\t\t\t_checkFrame( canvas );\r\n\t\t\t\t_blendFrame( canvas );\r\n\r\n\t\t\t\tif( _intermediateFrameCount >= .5 * _settings.motionBlurFrames ) {\r\n\t\t\t\t\t_saveFrame();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_step();\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t_encoder.add( canvas );\r\n\t\t\t\t_frameCount++;\r\n\t\t\t\t_log( 'Full Frame! ' + _frameCount );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction _process() {\r\n\r\n\t\tvar step = 1000 / _settings.framerate;\r\n\t\tvar dt = ( _frameCount + _intermediateFrameCount / _settings.motionBlurFrames ) * step;\r\n\r\n\t\t_time = _startTime + dt;\r\n\t\t_performanceTime = _performanceStartTime + dt;\r\n\r\n\t\tmedia.forEach( function( v ) {\r\n\t\t\tv._hookedTime = dt / 1000;\r\n\t\t} );\r\n\r\n\t\t_updateTime();\r\n\t\t_log( 'Frame: ' + _frameCount + ' ' + _intermediateFrameCount );\r\n\r\n\t\tfor( var j = 0; j < _timeouts.length; j++ ) {\r\n\t\t\tif( _time >= _timeouts[ j ].triggerTime ) {\r\n\t\t\t\t_call( _timeouts[ j ].callback )\r\n\t\t\t\t//console.log( 'timeout!' );\r\n\t\t\t\t_timeouts.splice( j, 1 );\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor( var j = 0; j < _intervals.length; j++ ) {\r\n\t\t\tif( _time >= _intervals[ j ].triggerTime ) {\r\n\t\t\t\t_call( _intervals[ j ].callback );\r\n\t\t\t\t_intervals[ j ].triggerTime += _intervals[ j ].time;\r\n\t\t\t\t//console.log( 'interval!' );\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_requestAnimationFrameCallbacks.forEach( function( cb ) {\r\n     \t\t_call( cb, _time - g_startTime );\r\n        } );\r\n        _requestAnimationFrameCallbacks = [];\r\n\r\n\t}\r\n\r\n\tfunction _save( callback ) {\r\n\r\n\t\tif( !callback ) {\r\n\t\t\tcallback = function( blob ) {\r\n\t\t\t\tdownload( blob, _encoder.filename + _encoder.extension, _encoder.mimeType );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t_encoder.save( callback );\r\n\r\n\t}\r\n\r\n\tfunction _log( message ) {\r\n\t\tif( _verbose ) console.log( message );\r\n\t}\r\n\r\n    function _on( event, handler ) {\r\n\r\n        _handlers[event] = handler;\r\n\r\n    }\r\n\r\n    function _emit( event ) {\r\n\r\n        var handler = _handlers[event];\r\n        if ( handler ) {\r\n\r\n            handler.apply( null, Array.prototype.slice.call( arguments, 1 ) );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function _progress( progress ) {\r\n\r\n        _emit( 'progress', progress );\r\n\r\n    }\r\n\r\n\treturn {\r\n\t\tstart: _start,\r\n\t\tcapture: _capture,\r\n\t\tstop: _stop,\r\n\t\tsave: _save,\r\n        on: _on\r\n\t}\r\n}\r\n\r\n(freeWindow || freeSelf || {}).CCapture = CCapture;\r\n\r\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\r\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\r\n    // Define as an anonymous module so, through path mapping, it can be\r\n    // referenced as the \"underscore\" module.\r\n    define(function() {\r\n    \treturn CCapture;\r\n    });\r\n}\r\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\r\n  else if (freeExports && freeModule) {\r\n    // Export for Node.js.\r\n    if (moduleExports) {\r\n    \t(freeModule.exports = CCapture).CCapture = CCapture;\r\n    }\r\n    // Export for CommonJS support.\r\n    freeExports.CCapture = CCapture;\r\n}\r\nelse {\r\n    // Export to the global object.\r\n    root.CCapture = CCapture;\r\n}\r\n\r\n}());\r\n","//download.js v3.0, by dandavis; 2008-2014. [CCBY2] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support\n\n// data can be a string, Blob, File, or dataURL\n\n\n\n\nfunction download(data, strFileName, strMimeType) {\n\n\tvar self = window, // this script is only for browsers anyway...\n\t\tu = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\tm = strMimeType || u,\n\t\tx = data,\n\t\tD = document,\n\t\ta = D.createElement(\"a\"),\n\t\tz = function(a){return String(a);},\n\n\n\t\tB = self.Blob || self.MozBlob || self.WebKitBlob || z,\n\t\tBB = self.MSBlobBuilder || self.WebKitBlobBuilder || self.BlobBuilder,\n\t\tfn = strFileName || \"download\",\n\t\tblob,\n\t\tb,\n\t\tua,\n\t\tfr;\n\n\t//if(typeof B.bind === 'function' ){ B=B.bind(self); }\n\n\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\tx=[x, m];\n\t\tm=x[0];\n\t\tx=x[1];\n\t}\n\n\n\n\t//go ahead and download dataURLs right away\n\tif(String(x).match(/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/)){\n\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\tnavigator.msSaveBlob(d2b(x), fn) :\n\t\t\tsaver(x) ; // everyone else can save dataURLs un-processed\n\t}//end if dataURL passed?\n\n\ttry{\n\n\t\tblob = x instanceof B ?\n\t\t\tx :\n\t\t\tnew B([x], {type: m}) ;\n\t}catch(y){\n\t\tif(BB){\n\t\t\tb = new BB();\n\t\t\tb.append([x]);\n\t\t\tblob = b.getBlob(m); // the blob\n\t\t}\n\n\t}\n\n\n\n\tfunction d2b(u) {\n\t\tvar p= u.split(/[:;,]/),\n\t\tt= p[1],\n\t\tdec= p[2] == \"base64\" ? atob : decodeURIComponent,\n\t\tbin= dec(p.pop()),\n\t\tmx= bin.length,\n\t\ti= 0,\n\t\tuia= new Uint8Array(mx);\n\n\t\tfor(i;i<mx;++i) uia[i]= bin.charCodeAt(i);\n\n\t\treturn new B([uia], {type: t});\n\t }\n\n\tfunction saver(url, winMode){\n\n\n\t\tif ('download' in a) { //html5 A[download]\n\t\t\ta.href = url;\n\t\t\ta.setAttribute(\"download\", fn);\n\t\t\ta.innerHTML = \"downloading...\";\n\t\t\ta.style.display = 'none';\n\t\t\tD.body.appendChild(a);\n\t\t\tsetTimeout(function() {\n\t\t\t\ta.click();\n\t\t\t\tD.body.removeChild(a);\n\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(a.href);}, 250 );}\n\t\t\t}, 66);\n\t\t\treturn true;\n\t\t}\n\n\t\t//do iframe dataURL download (old ch+FF):\n\t\tvar f = D.createElement(\"iframe\");\n\t\tD.body.appendChild(f);\n\t\tif(!winMode){ // force a mime that will download:\n\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, u);\n\t\t}\n\n\n\t\tf.src = url;\n\t\tsetTimeout(function(){ D.body.removeChild(f); }, 333);\n\n\t}//end saver\n\n\n\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\treturn navigator.msSaveBlob(blob, fn);\n\t}\n\n\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\tsaver(self.URL.createObjectURL(blob), true);\n\t}else{\n\t\t// handle non-Blob()+non-URL browsers:\n\t\tif(typeof blob === \"string\" || blob.constructor===z ){\n\t\t\ttry{\n\t\t\t\treturn saver( \"data:\" +  m   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t}catch(y){\n\t\t\t\treturn saver( \"data:\" +  m   + \",\" + encodeURIComponent(blob)  );\n\t\t\t}\n\t\t}\n\n\t\t// Blob but not URL:\n\t\tfr=new FileReader();\n\t\tfr.onload=function(e){\n\t\t\tsaver(this.result);\n\t\t};\n\t\tfr.readAsDataURL(blob);\n\t}\n\treturn true;\n} /* end download() */\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = download;\n}\n","// gif.js 0.2.0 - https://github.com/jnordberg/gif.js\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.GIF=f()}})(function(){var define,module,exports;return function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e}()({1:[function(require,module,exports){function EventEmitter(){this._events=this._events||{};this._maxListeners=this._maxListeners||undefined}module.exports=EventEmitter;EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._maxListeners=undefined;EventEmitter.defaultMaxListeners=10;EventEmitter.prototype.setMaxListeners=function(n){if(!isNumber(n)||n<0||isNaN(n))throw TypeError(\"n must be a positive number\");this._maxListeners=n;return this};EventEmitter.prototype.emit=function(type){var er,handler,len,args,i,listeners;if(!this._events)this._events={};if(type===\"error\"){if(!this._events.error||isObject(this._events.error)&&!this._events.error.length){er=arguments[1];if(er instanceof Error){throw er}else{var err=new Error('Uncaught, unspecified \"error\" event. ('+er+\")\");err.context=er;throw err}}}handler=this._events[type];if(isUndefined(handler))return false;if(isFunction(handler)){switch(arguments.length){case 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:args=Array.prototype.slice.call(arguments,1);handler.apply(this,args)}}else if(isObject(handler)){args=Array.prototype.slice.call(arguments,1);listeners=handler.slice();len=listeners.length;for(i=0;i<len;i++)listeners[i].apply(this,args)}return true};EventEmitter.prototype.addListener=function(type,listener){var m;if(!isFunction(listener))throw TypeError(\"listener must be a function\");if(!this._events)this._events={};if(this._events.newListener)this.emit(\"newListener\",type,isFunction(listener.listener)?listener.listener:listener);if(!this._events[type])this._events[type]=listener;else if(isObject(this._events[type]))this._events[type].push(listener);else this._events[type]=[this._events[type],listener];if(isObject(this._events[type])&&!this._events[type].warned){if(!isUndefined(this._maxListeners)){m=this._maxListeners}else{m=EventEmitter.defaultMaxListeners}if(m&&m>0&&this._events[type].length>m){this._events[type].warned=true;console.error(\"(node) warning: possible EventEmitter memory \"+\"leak detected. %d listeners added. \"+\"Use emitter.setMaxListeners() to increase limit.\",this._events[type].length);if(typeof console.trace===\"function\"){console.trace()}}}return this};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(type,listener){if(!isFunction(listener))throw TypeError(\"listener must be a function\");var fired=false;function g(){this.removeListener(type,g);if(!fired){fired=true;listener.apply(this,arguments)}}g.listener=listener;this.on(type,g);return this};EventEmitter.prototype.removeListener=function(type,listener){var list,position,length,i;if(!isFunction(listener))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[type])return this;list=this._events[type];length=list.length;position=-1;if(list===listener||isFunction(list.listener)&&list.listener===listener){delete this._events[type];if(this._events.removeListener)this.emit(\"removeListener\",type,listener)}else if(isObject(list)){for(i=length;i-- >0;){if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break}}if(position<0)return this;if(list.length===1){list.length=0;delete this._events[type]}else{list.splice(position,1)}if(this._events.removeListener)this.emit(\"removeListener\",type,listener)}return this};EventEmitter.prototype.removeAllListeners=function(type){var key,listeners;if(!this._events)return this;if(!this._events.removeListener){if(arguments.length===0)this._events={};else if(this._events[type])delete this._events[type];return this}if(arguments.length===0){for(key in this._events){if(key===\"removeListener\")continue;this.removeAllListeners(key)}this.removeAllListeners(\"removeListener\");this._events={};return this}listeners=this._events[type];if(isFunction(listeners)){this.removeListener(type,listeners)}else if(listeners){while(listeners.length)this.removeListener(type,listeners[listeners.length-1])}delete this._events[type];return this};EventEmitter.prototype.listeners=function(type){var ret;if(!this._events||!this._events[type])ret=[];else if(isFunction(this._events[type]))ret=[this._events[type]];else ret=this._events[type].slice();return ret};EventEmitter.prototype.listenerCount=function(type){if(this._events){var evlistener=this._events[type];if(isFunction(evlistener))return 1;else if(evlistener)return evlistener.length}return 0};EventEmitter.listenerCount=function(emitter,type){return emitter.listenerCount(type)};function isFunction(arg){return typeof arg===\"function\"}function isNumber(arg){return typeof arg===\"number\"}function isObject(arg){return typeof arg===\"object\"&&arg!==null}function isUndefined(arg){return arg===void 0}},{}],2:[function(require,module,exports){var NeuQuant=require(\"./TypedNeuQuant.js\");var LZWEncoder=require(\"./LZWEncoder.js\");function ByteArray(){this.page=-1;this.pages=[];this.newPage()}ByteArray.pageSize=4096;ByteArray.charMap={};for(var i=0;i<256;i++)ByteArray.charMap[i]=String.fromCharCode(i);ByteArray.prototype.newPage=function(){this.pages[++this.page]=new Uint8Array(ByteArray.pageSize);this.cursor=0};ByteArray.prototype.getData=function(){var rv=\"\";for(var p=0;p<this.pages.length;p++){for(var i=0;i<ByteArray.pageSize;i++){rv+=ByteArray.charMap[this.pages[p][i]]}}return rv};ByteArray.prototype.writeByte=function(val){if(this.cursor>=ByteArray.pageSize)this.newPage();this.pages[this.page][this.cursor++]=val};ByteArray.prototype.writeUTFBytes=function(string){for(var l=string.length,i=0;i<l;i++)this.writeByte(string.charCodeAt(i))};ByteArray.prototype.writeBytes=function(array,offset,length){for(var l=length||array.length,i=offset||0;i<l;i++)this.writeByte(array[i])};function GIFEncoder(width,height){this.width=~~width;this.height=~~height;this.transparent=null;this.transIndex=0;this.repeat=-1;this.delay=0;this.image=null;this.pixels=null;this.indexedPixels=null;this.colorDepth=null;this.colorTab=null;this.neuQuant=null;this.usedEntry=new Array;this.palSize=7;this.dispose=-1;this.firstFrame=true;this.sample=10;this.dither=false;this.globalPalette=false;this.out=new ByteArray}GIFEncoder.prototype.setDelay=function(milliseconds){this.delay=Math.round(milliseconds/10)};GIFEncoder.prototype.setFrameRate=function(fps){this.delay=Math.round(100/fps)};GIFEncoder.prototype.setDispose=function(disposalCode){if(disposalCode>=0)this.dispose=disposalCode};GIFEncoder.prototype.setRepeat=function(repeat){this.repeat=repeat};GIFEncoder.prototype.setTransparent=function(color){this.transparent=color};GIFEncoder.prototype.addFrame=function(imageData){this.image=imageData;this.colorTab=this.globalPalette&&this.globalPalette.slice?this.globalPalette:null;this.getImagePixels();this.analyzePixels();if(this.globalPalette===true)this.globalPalette=this.colorTab;if(this.firstFrame){this.writeLSD();this.writePalette();if(this.repeat>=0){this.writeNetscapeExt()}}this.writeGraphicCtrlExt();this.writeImageDesc();if(!this.firstFrame&&!this.globalPalette)this.writePalette();this.writePixels();this.firstFrame=false};GIFEncoder.prototype.finish=function(){this.out.writeByte(59)};GIFEncoder.prototype.setQuality=function(quality){if(quality<1)quality=1;this.sample=quality};GIFEncoder.prototype.setDither=function(dither){if(dither===true)dither=\"FloydSteinberg\";this.dither=dither};GIFEncoder.prototype.setGlobalPalette=function(palette){this.globalPalette=palette};GIFEncoder.prototype.getGlobalPalette=function(){return this.globalPalette&&this.globalPalette.slice&&this.globalPalette.slice(0)||this.globalPalette};GIFEncoder.prototype.writeHeader=function(){this.out.writeUTFBytes(\"GIF89a\")};GIFEncoder.prototype.analyzePixels=function(){if(!this.colorTab){this.neuQuant=new NeuQuant(this.pixels,this.sample);this.neuQuant.buildColormap();this.colorTab=this.neuQuant.getColormap()}if(this.dither){this.ditherPixels(this.dither.replace(\"-serpentine\",\"\"),this.dither.match(/-serpentine/)!==null)}else{this.indexPixels()}this.pixels=null;this.colorDepth=8;this.palSize=7;if(this.transparent!==null){this.transIndex=this.findClosest(this.transparent,true)}};GIFEncoder.prototype.indexPixels=function(imgq){var nPix=this.pixels.length/3;this.indexedPixels=new Uint8Array(nPix);var k=0;for(var j=0;j<nPix;j++){var index=this.findClosestRGB(this.pixels[k++]&255,this.pixels[k++]&255,this.pixels[k++]&255);this.usedEntry[index]=true;this.indexedPixels[j]=index}};GIFEncoder.prototype.ditherPixels=function(kernel,serpentine){var kernels={FalseFloydSteinberg:[[3/8,1,0],[3/8,0,1],[2/8,1,1]],FloydSteinberg:[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]],Stucki:[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]],Atkinson:[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]]};if(!kernel||!kernels[kernel]){throw\"Unknown dithering kernel: \"+kernel}var ds=kernels[kernel];var index=0,height=this.height,width=this.width,data=this.pixels;var direction=serpentine?-1:1;this.indexedPixels=new Uint8Array(this.pixels.length/3);for(var y=0;y<height;y++){if(serpentine)direction=direction*-1;for(var x=direction==1?0:width-1,xend=direction==1?width:0;x!==xend;x+=direction){index=y*width+x;var idx=index*3;var r1=data[idx];var g1=data[idx+1];var b1=data[idx+2];idx=this.findClosestRGB(r1,g1,b1);this.usedEntry[idx]=true;this.indexedPixels[index]=idx;idx*=3;var r2=this.colorTab[idx];var g2=this.colorTab[idx+1];var b2=this.colorTab[idx+2];var er=r1-r2;var eg=g1-g2;var eb=b1-b2;for(var i=direction==1?0:ds.length-1,end=direction==1?ds.length:0;i!==end;i+=direction){var x1=ds[i][1];var y1=ds[i][2];if(x1+x>=0&&x1+x<width&&y1+y>=0&&y1+y<height){var d=ds[i][0];idx=index+x1+y1*width;idx*=3;data[idx]=Math.max(0,Math.min(255,data[idx]+er*d));data[idx+1]=Math.max(0,Math.min(255,data[idx+1]+eg*d));data[idx+2]=Math.max(0,Math.min(255,data[idx+2]+eb*d))}}}}};GIFEncoder.prototype.findClosest=function(c,used){return this.findClosestRGB((c&16711680)>>16,(c&65280)>>8,c&255,used)};GIFEncoder.prototype.findClosestRGB=function(r,g,b,used){if(this.colorTab===null)return-1;if(this.neuQuant&&!used){return this.neuQuant.lookupRGB(r,g,b)}var c=b|g<<8|r<<16;var minpos=0;var dmin=256*256*256;var len=this.colorTab.length;for(var i=0,index=0;i<len;index++){var dr=r-(this.colorTab[i++]&255);var dg=g-(this.colorTab[i++]&255);var db=b-(this.colorTab[i++]&255);var d=dr*dr+dg*dg+db*db;if((!used||this.usedEntry[index])&&d<dmin){dmin=d;minpos=index}}return minpos};GIFEncoder.prototype.getImagePixels=function(){var w=this.width;var h=this.height;this.pixels=new Uint8Array(w*h*3);var data=this.image;var srcPos=0;var count=0;for(var i=0;i<h;i++){for(var j=0;j<w;j++){this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];this.pixels[count++]=data[srcPos++];srcPos++}}};GIFEncoder.prototype.writeGraphicCtrlExt=function(){this.out.writeByte(33);this.out.writeByte(249);this.out.writeByte(4);var transp,disp;if(this.transparent===null){transp=0;disp=0}else{transp=1;disp=2}if(this.dispose>=0){disp=this.dispose&7}disp<<=2;this.out.writeByte(0|disp|0|transp);this.writeShort(this.delay);this.out.writeByte(this.transIndex);this.out.writeByte(0)};GIFEncoder.prototype.writeImageDesc=function(){this.out.writeByte(44);this.writeShort(0);this.writeShort(0);this.writeShort(this.width);this.writeShort(this.height);if(this.firstFrame||this.globalPalette){this.out.writeByte(0)}else{this.out.writeByte(128|0|0|0|this.palSize)}};GIFEncoder.prototype.writeLSD=function(){this.writeShort(this.width);this.writeShort(this.height);this.out.writeByte(128|112|0|this.palSize);this.out.writeByte(0);this.out.writeByte(0)};GIFEncoder.prototype.writeNetscapeExt=function(){this.out.writeByte(33);this.out.writeByte(255);this.out.writeByte(11);this.out.writeUTFBytes(\"NETSCAPE2.0\");this.out.writeByte(3);this.out.writeByte(1);this.writeShort(this.repeat);this.out.writeByte(0)};GIFEncoder.prototype.writePalette=function(){this.out.writeBytes(this.colorTab);var n=3*256-this.colorTab.length;for(var i=0;i<n;i++)this.out.writeByte(0)};GIFEncoder.prototype.writeShort=function(pValue){this.out.writeByte(pValue&255);this.out.writeByte(pValue>>8&255)};GIFEncoder.prototype.writePixels=function(){var enc=new LZWEncoder(this.width,this.height,this.indexedPixels,this.colorDepth);enc.encode(this.out)};GIFEncoder.prototype.stream=function(){return this.out};module.exports=GIFEncoder},{\"./LZWEncoder.js\":3,\"./TypedNeuQuant.js\":4}],3:[function(require,module,exports){var EOF=-1;var BITS=12;var HSIZE=5003;var masks=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];function LZWEncoder(width,height,pixels,colorDepth){var initCodeSize=Math.max(2,colorDepth);var accum=new Uint8Array(256);var htab=new Int32Array(HSIZE);var codetab=new Int32Array(HSIZE);var cur_accum,cur_bits=0;var a_count;var free_ent=0;var maxcode;var clear_flg=false;var g_init_bits,ClearCode,EOFCode;function char_out(c,outs){accum[a_count++]=c;if(a_count>=254)flush_char(outs)}function cl_block(outs){cl_hash(HSIZE);free_ent=ClearCode+2;clear_flg=true;output(ClearCode,outs)}function cl_hash(hsize){for(var i=0;i<hsize;++i)htab[i]=-1}function compress(init_bits,outs){var fcode,c,i,ent,disp,hsize_reg,hshift;g_init_bits=init_bits;clear_flg=false;n_bits=g_init_bits;maxcode=MAXCODE(n_bits);ClearCode=1<<init_bits-1;EOFCode=ClearCode+1;free_ent=ClearCode+2;a_count=0;ent=nextPixel();hshift=0;for(fcode=HSIZE;fcode<65536;fcode*=2)++hshift;hshift=8-hshift;hsize_reg=HSIZE;cl_hash(hsize_reg);output(ClearCode,outs);outer_loop:while((c=nextPixel())!=EOF){fcode=(c<<BITS)+ent;i=c<<hshift^ent;if(htab[i]===fcode){ent=codetab[i];continue}else if(htab[i]>=0){disp=hsize_reg-i;if(i===0)disp=1;do{if((i-=disp)<0)i+=hsize_reg;if(htab[i]===fcode){ent=codetab[i];continue outer_loop}}while(htab[i]>=0)}output(ent,outs);ent=c;if(free_ent<1<<BITS){codetab[i]=free_ent++;htab[i]=fcode}else{cl_block(outs)}}output(ent,outs);output(EOFCode,outs)}function encode(outs){outs.writeByte(initCodeSize);remaining=width*height;curPixel=0;compress(initCodeSize+1,outs);outs.writeByte(0)}function flush_char(outs){if(a_count>0){outs.writeByte(a_count);outs.writeBytes(accum,0,a_count);a_count=0}}function MAXCODE(n_bits){return(1<<n_bits)-1}function nextPixel(){if(remaining===0)return EOF;--remaining;var pix=pixels[curPixel++];return pix&255}function output(code,outs){cur_accum&=masks[cur_bits];if(cur_bits>0)cur_accum|=code<<cur_bits;else cur_accum=code;cur_bits+=n_bits;while(cur_bits>=8){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}if(free_ent>maxcode||clear_flg){if(clear_flg){maxcode=MAXCODE(n_bits=g_init_bits);clear_flg=false}else{++n_bits;if(n_bits==BITS)maxcode=1<<BITS;else maxcode=MAXCODE(n_bits)}}if(code==EOFCode){while(cur_bits>0){char_out(cur_accum&255,outs);cur_accum>>=8;cur_bits-=8}flush_char(outs)}}this.encode=encode}module.exports=LZWEncoder},{}],4:[function(require,module,exports){var ncycles=100;var netsize=256;var maxnetpos=netsize-1;var netbiasshift=4;var intbiasshift=16;var intbias=1<<intbiasshift;var gammashift=10;var gamma=1<<gammashift;var betashift=10;var beta=intbias>>betashift;var betagamma=intbias<<gammashift-betashift;var initrad=netsize>>3;var radiusbiasshift=6;var radiusbias=1<<radiusbiasshift;var initradius=initrad*radiusbias;var radiusdec=30;var alphabiasshift=10;var initalpha=1<<alphabiasshift;var alphadec;var radbiasshift=8;var radbias=1<<radbiasshift;var alpharadbshift=alphabiasshift+radbiasshift;var alpharadbias=1<<alpharadbshift;var prime1=499;var prime2=491;var prime3=487;var prime4=503;var minpicturebytes=3*prime4;function NeuQuant(pixels,samplefac){var network;var netindex;var bias;var freq;var radpower;function init(){network=[];netindex=new Int32Array(256);bias=new Int32Array(netsize);freq=new Int32Array(netsize);radpower=new Int32Array(netsize>>3);var i,v;for(i=0;i<netsize;i++){v=(i<<netbiasshift+8)/netsize;network[i]=new Float64Array([v,v,v,0]);freq[i]=intbias/netsize;bias[i]=0}}function unbiasnet(){for(var i=0;i<netsize;i++){network[i][0]>>=netbiasshift;network[i][1]>>=netbiasshift;network[i][2]>>=netbiasshift;network[i][3]=i}}function altersingle(alpha,i,b,g,r){network[i][0]-=alpha*(network[i][0]-b)/initalpha;network[i][1]-=alpha*(network[i][1]-g)/initalpha;network[i][2]-=alpha*(network[i][2]-r)/initalpha}function alterneigh(radius,i,b,g,r){var lo=Math.abs(i-radius);var hi=Math.min(i+radius,netsize);var j=i+1;var k=i-1;var m=1;var p,a;while(j<hi||k>lo){a=radpower[m++];if(j<hi){p=network[j++];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}if(k>lo){p=network[k--];p[0]-=a*(p[0]-b)/alpharadbias;p[1]-=a*(p[1]-g)/alpharadbias;p[2]-=a*(p[2]-r)/alpharadbias}}}function contest(b,g,r){var bestd=~(1<<31);var bestbiasd=bestd;var bestpos=-1;var bestbiaspos=bestpos;var i,n,dist,biasdist,betafreq;for(i=0;i<netsize;i++){n=network[i];dist=Math.abs(n[0]-b)+Math.abs(n[1]-g)+Math.abs(n[2]-r);if(dist<bestd){bestd=dist;bestpos=i}biasdist=dist-(bias[i]>>intbiasshift-netbiasshift);if(biasdist<bestbiasd){bestbiasd=biasdist;bestbiaspos=i}betafreq=freq[i]>>betashift;freq[i]-=betafreq;bias[i]+=betafreq<<gammashift}freq[bestpos]+=beta;bias[bestpos]-=betagamma;return bestbiaspos}function inxbuild(){var i,j,p,q,smallpos,smallval,previouscol=0,startpos=0;for(i=0;i<netsize;i++){p=network[i];smallpos=i;smallval=p[1];for(j=i+1;j<netsize;j++){q=network[j];if(q[1]<smallval){smallpos=j;smallval=q[1]}}q=network[smallpos];if(i!=smallpos){j=q[0];q[0]=p[0];p[0]=j;j=q[1];q[1]=p[1];p[1]=j;j=q[2];q[2]=p[2];p[2]=j;j=q[3];q[3]=p[3];p[3]=j}if(smallval!=previouscol){netindex[previouscol]=startpos+i>>1;for(j=previouscol+1;j<smallval;j++)netindex[j]=i;previouscol=smallval;startpos=i}}netindex[previouscol]=startpos+maxnetpos>>1;for(j=previouscol+1;j<256;j++)netindex[j]=maxnetpos}function inxsearch(b,g,r){var a,p,dist;var bestd=1e3;var best=-1;var i=netindex[g];var j=i-1;while(i<netsize||j>=0){if(i<netsize){p=network[i];dist=p[1]-g;if(dist>=bestd)i=netsize;else{i++;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}if(j>=0){p=network[j];dist=g-p[1];if(dist>=bestd)j=-1;else{j--;if(dist<0)dist=-dist;a=p[0]-b;if(a<0)a=-a;dist+=a;if(dist<bestd){a=p[2]-r;if(a<0)a=-a;dist+=a;if(dist<bestd){bestd=dist;best=p[3]}}}}}return best}function learn(){var i;var lengthcount=pixels.length;var alphadec=30+(samplefac-1)/3;var samplepixels=lengthcount/(3*samplefac);var delta=~~(samplepixels/ncycles);var alpha=initalpha;var radius=initradius;var rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(i=0;i<rad;i++)radpower[i]=alpha*((rad*rad-i*i)*radbias/(rad*rad));var step;if(lengthcount<minpicturebytes){samplefac=1;step=3}else if(lengthcount%prime1!==0){step=3*prime1}else if(lengthcount%prime2!==0){step=3*prime2}else if(lengthcount%prime3!==0){step=3*prime3}else{step=3*prime4}var b,g,r,j;var pix=0;i=0;while(i<samplepixels){b=(pixels[pix]&255)<<netbiasshift;g=(pixels[pix+1]&255)<<netbiasshift;r=(pixels[pix+2]&255)<<netbiasshift;j=contest(b,g,r);altersingle(alpha,j,b,g,r);if(rad!==0)alterneigh(rad,j,b,g,r);pix+=step;if(pix>=lengthcount)pix-=lengthcount;i++;if(delta===0)delta=1;if(i%delta===0){alpha-=alpha/alphadec;radius-=radius/radiusdec;rad=radius>>radiusbiasshift;if(rad<=1)rad=0;for(j=0;j<rad;j++)radpower[j]=alpha*((rad*rad-j*j)*radbias/(rad*rad))}}}function buildColormap(){init();learn();unbiasnet();inxbuild()}this.buildColormap=buildColormap;function getColormap(){var map=[];var index=[];for(var i=0;i<netsize;i++)index[network[i][3]]=i;var k=0;for(var l=0;l<netsize;l++){var j=index[l];map[k++]=network[j][0];map[k++]=network[j][1];map[k++]=network[j][2]}return map}this.getColormap=getColormap;this.lookupRGB=inxsearch}module.exports=NeuQuant},{}],5:[function(require,module,exports){var UA,browser,mode,platform,ua;ua=navigator.userAgent.toLowerCase();platform=navigator.platform.toLowerCase();UA=ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/)||[null,\"unknown\",0];mode=UA[1]===\"ie\"&&document.documentMode;browser={name:UA[1]===\"version\"?UA[3]:UA[1],version:mode||parseFloat(UA[1]===\"opera\"&&UA[4]?UA[4]:UA[2]),platform:{name:ua.match(/ip(?:ad|od|hone)/)?\"ios\":(ua.match(/(?:webos|android)/)||platform.match(/mac|win|linux/)||[\"other\"])[0]}};browser[browser.name]=true;browser[browser.name+parseInt(browser.version,10)]=true;browser.platform[browser.platform.name]=true;module.exports=browser},{}],6:[function(require,module,exports){var EventEmitter,GIF,GIFEncoder,browser,gifWorker,extend=function(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child},hasProp={}.hasOwnProperty,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1},slice=[].slice;EventEmitter=require(\"events\").EventEmitter;browser=require(\"./browser.coffee\");GIFEncoder=require(\"./GIFEncoder.js\");gifWorker=require(\"./gif.worker.coffee\");module.exports=GIF=function(superClass){var defaults,frameDefaults;extend(GIF,superClass);defaults={workerScript:\"gif.worker.js\",workers:2,repeat:0,background:\"#fff\",quality:10,width:null,height:null,transparent:null,debug:false,dither:false};frameDefaults={delay:500,copy:false,dispose:-1};function GIF(options){var base,key,value;this.running=false;this.options={};this.frames=[];this.freeWorkers=[];this.activeWorkers=[];this.setOptions(options);for(key in defaults){value=defaults[key];if((base=this.options)[key]==null){base[key]=value}}}GIF.prototype.setOption=function(key,value){this.options[key]=value;if(this._canvas!=null&&(key===\"width\"||key===\"height\")){return this._canvas[key]=value}};GIF.prototype.setOptions=function(options){var key,results,value;results=[];for(key in options){if(!hasProp.call(options,key))continue;value=options[key];results.push(this.setOption(key,value))}return results};GIF.prototype.addFrame=function(image,options){var frame,key;if(options==null){options={}}frame={};frame.transparent=this.options.transparent;for(key in frameDefaults){frame[key]=options[key]||frameDefaults[key]}if(this.options.width==null){this.setOption(\"width\",image.width)}if(this.options.height==null){this.setOption(\"height\",image.height)}if(typeof ImageData!==\"undefined\"&&ImageData!==null&&image instanceof ImageData){frame.data=image.data}else if(typeof CanvasRenderingContext2D!==\"undefined\"&&CanvasRenderingContext2D!==null&&image instanceof CanvasRenderingContext2D||typeof WebGLRenderingContext!==\"undefined\"&&WebGLRenderingContext!==null&&image instanceof WebGLRenderingContext){if(options.copy){frame.data=this.getContextData(image)}else{frame.context=image}}else if(image.childNodes!=null){if(options.copy){frame.data=this.getImageData(image)}else{frame.image=image}}else{throw new Error(\"Invalid image\")}return this.frames.push(frame)};GIF.prototype.render=function(){var i,j,numWorkers,ref;if(this.running){throw new Error(\"Already running\")}if(this.options.width==null||this.options.height==null){throw new Error(\"Width and height must be set prior to rendering\")}this.running=true;this.nextFrame=0;this.finishedFrames=0;this.imageParts=function(){var j,ref,results;results=[];for(i=j=0,ref=this.frames.length;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){results.push(null)}return results}.call(this);numWorkers=this.spawnWorkers();if(this.options.globalPalette===true){this.renderNextFrame()}else{for(i=j=0,ref=numWorkers;0<=ref?j<ref:j>ref;i=0<=ref?++j:--j){this.renderNextFrame()}}this.emit(\"start\");return this.emit(\"progress\",0)};GIF.prototype.abort=function(){var worker;while(true){worker=this.activeWorkers.shift();if(worker==null){break}this.log(\"killing active worker\");worker.terminate()}this.running=false;return this.emit(\"abort\")};GIF.prototype.spawnWorkers=function(){var j,numWorkers,ref,results;numWorkers=Math.min(this.options.workers,this.frames.length);(function(){results=[];for(var j=ref=this.freeWorkers.length;ref<=numWorkers?j<numWorkers:j>numWorkers;ref<=numWorkers?j++:j--){results.push(j)}return results}).apply(this).forEach(function(_this){return function(i){var worker;_this.log(\"spawning worker \"+i);worker=new Worker(_this.options.workerScript);worker.onmessage=function(event){_this.activeWorkers.splice(_this.activeWorkers.indexOf(worker),1);_this.freeWorkers.push(worker);return _this.frameFinished(event.data)};return _this.freeWorkers.push(worker)}}(this));return numWorkers};GIF.prototype.frameFinished=function(frame){var i,j,ref;this.log(\"frame \"+frame.index+\" finished - \"+this.activeWorkers.length+\" active\");this.finishedFrames++;this.emit(\"progress\",this.finishedFrames/this.frames.length);this.imageParts[frame.index]=frame;if(this.options.globalPalette===true){this.options.globalPalette=frame.globalPalette;this.log(\"global palette analyzed\");if(this.frames.length>2){for(i=j=1,ref=this.freeWorkers.length;1<=ref?j<ref:j>ref;i=1<=ref?++j:--j){this.renderNextFrame()}}}if(indexOf.call(this.imageParts,null)>=0){return this.renderNextFrame()}else{return this.finishRendering()}};GIF.prototype.finishRendering=function(){var data,frame,i,image,j,k,l,len,len1,len2,len3,offset,page,ref,ref1,ref2;len=0;ref=this.imageParts;for(j=0,len1=ref.length;j<len1;j++){frame=ref[j];len+=(frame.data.length-1)*frame.pageSize+frame.cursor}len+=frame.pageSize-frame.cursor;this.log(\"rendering finished - filesize \"+Math.round(len/1e3)+\"kb\");data=new Uint8Array(len);offset=0;ref1=this.imageParts;for(k=0,len2=ref1.length;k<len2;k++){frame=ref1[k];ref2=frame.data;for(i=l=0,len3=ref2.length;l<len3;i=++l){page=ref2[i];data.set(page,offset);if(i===frame.data.length-1){offset+=frame.cursor}else{offset+=frame.pageSize}}}image=new Blob([data],{type:\"image/gif\"});return this.emit(\"finished\",image,data)};GIF.prototype.renderNextFrame=function(){var frame,task,worker;if(this.freeWorkers.length===0){throw new Error(\"No free workers\")}if(this.nextFrame>=this.frames.length){return}frame=this.frames[this.nextFrame++];worker=this.freeWorkers.shift();task=this.getTask(frame);this.log(\"starting frame \"+(task.index+1)+\" of \"+this.frames.length);this.activeWorkers.push(worker);return worker.postMessage(task)};GIF.prototype.getContextData=function(ctx){return ctx.getImageData(0,0,this.options.width,this.options.height).data};GIF.prototype.getImageData=function(image){var ctx;if(this._canvas==null){this._canvas=document.createElement(\"canvas\");this._canvas.width=this.options.width;this._canvas.height=this.options.height}ctx=this._canvas.getContext(\"2d\");ctx.setFill=this.options.background;ctx.fillRect(0,0,this.options.width,this.options.height);ctx.drawImage(image,0,0);return this.getContextData(ctx)};GIF.prototype.getTask=function(frame){var index,task;index=this.frames.indexOf(frame);task={index:index,last:index===this.frames.length-1,delay:frame.delay,dispose:frame.dispose,transparent:frame.transparent,width:this.options.width,height:this.options.height,quality:this.options.quality,dither:this.options.dither,globalPalette:this.options.globalPalette,repeat:this.options.repeat,canTransfer:browser.name===\"chrome\"};if(frame.data!=null){task.data=frame.data}else if(frame.context!=null){task.data=this.getContextData(frame.context)}else if(frame.image!=null){task.data=this.getImageData(frame.image)}else{throw new Error(\"Invalid frame\")}return task};GIF.prototype.log=function(){var args;args=1<=arguments.length?slice.call(arguments,0):[];if(!this.options.debug){return}return console.log.apply(console,args)};return GIF}(EventEmitter)},{\"./GIFEncoder.js\":2,\"./browser.coffee\":5,\"./gif.worker.coffee\":7,events:1}],7:[function(require,module,exports){var GIFEncoder,renderFrame;GIFEncoder=require(\"./GIFEncoder.js\");renderFrame=function(frame){var encoder,page,stream,transfer;encoder=new GIFEncoder(frame.width,frame.height);if(frame.index===0){encoder.writeHeader()}else{encoder.firstFrame=false}encoder.setTransparent(frame.transparent);encoder.setDispose(frame.dispose);encoder.setRepeat(frame.repeat);encoder.setDelay(frame.delay);encoder.setQuality(frame.quality);encoder.setDither(frame.dither);encoder.setGlobalPalette(frame.globalPalette);encoder.addFrame(frame.data);if(frame.last){encoder.finish()}if(frame.globalPalette===true){frame.globalPalette=encoder.getGlobalPalette()}stream=encoder.stream();frame.data=stream.pages;frame.cursor=stream.cursor;frame.pageSize=stream.constructor.pageSize;if(frame.canTransfer){transfer=function(){var i,len,ref,results;ref=frame.data;results=[];for(i=0,len=ref.length;i<len;i++){page=ref[i];results.push(page.buffer)}return results}();return self.postMessage(frame,transfer)}else{return self.postMessage(frame)}};self.onmessage=function(event){return renderFrame(event.data)}},{\"./GIFEncoder.js\":2}]},{},[6])(6)});\r\n//# sourceMappingURL=gif.js.map\r\n","(function () {\n\t\"use strict\";\n\n\tvar lookup = [\n\t\t\t'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n\t\t\t'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n\t\t\t'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',\n\t\t\t'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',\n\t\t\t'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\n\t\t\t'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n\t\t\t'w', 'x', 'y', 'z', '0', '1', '2', '3',\n\t\t\t'4', '5', '6', '7', '8', '9', '+', '/'\n\t\t];\n\tfunction clean(length) {\n\t\tvar i, buffer = new Uint8Array(length);\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tbuffer[i] = 0;\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tfunction extend(orig, length, addLength, multipleOf) {\n\t\tvar newSize = length + addLength,\n\t\t\tbuffer = clean((parseInt(newSize / multipleOf) + 1) * multipleOf);\n\n\t\tbuffer.set(orig);\n\n\t\treturn buffer;\n\t}\n\n\tfunction pad(num, bytes, base) {\n\t\tnum = num.toString(base || 8);\n\t\treturn \"000000000000\".substr(num.length + 12 - bytes) + num;\n\t}\n\n\tfunction stringToUint8 (input, out, offset) {\n\t\tvar i, length;\n\n\t\tout = out || clean(input.length);\n\n\t\toffset = offset || 0;\n\t\tfor (i = 0, length = input.length; i < length; i += 1) {\n\t\t\tout[offset] = input.charCodeAt(i);\n\t\t\toffset += 1;\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction uint8ToBase64(uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length;\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t\t};\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n\t\t\toutput += tripletToBase64(temp);\n\t\t}\n\n\t\t// this prevents an ERR_INVALID_URL in Chrome (Firefox okay)\n\t\tswitch (output.length % 4) {\n\t\t\tcase 1:\n\t\t\t\toutput += '=';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\toutput += '==';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn output;\n\t}\n\n\twindow.utils = {}\n\twindow.utils.clean = clean;\n\twindow.utils.pad = pad;\n\twindow.utils.extend = extend;\n\twindow.utils.stringToUint8 = stringToUint8;\n\twindow.utils.uint8ToBase64 = uint8ToBase64;\n}());\n\n(function () {\n\t\"use strict\";\n\n/*\nstruct posix_header {             // byte offset\n\tchar name[100];               //   0\n\tchar mode[8];                 // 100\n\tchar uid[8];                  // 108\n\tchar gid[8];                  // 116\n\tchar size[12];                // 124\n\tchar mtime[12];               // 136\n\tchar chksum[8];               // 148\n\tchar typeflag;                // 156\n\tchar linkname[100];           // 157\n\tchar magic[6];                // 257\n\tchar version[2];              // 263\n\tchar uname[32];               // 265\n\tchar gname[32];               // 297\n\tchar devmajor[8];             // 329\n\tchar devminor[8];             // 337\n\tchar prefix[155];             // 345\n                                  // 500\n};\n*/\n\n\tvar utils = window.utils,\n\t\theaderFormat;\n\n\theaderFormat = [\n\t\t{\n\t\t\t'field': 'fileName',\n\t\t\t'length': 100\n\t\t},\n\t\t{\n\t\t\t'field': 'fileMode',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'uid',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'gid',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'fileSize',\n\t\t\t'length': 12\n\t\t},\n\t\t{\n\t\t\t'field': 'mtime',\n\t\t\t'length': 12\n\t\t},\n\t\t{\n\t\t\t'field': 'checksum',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'type',\n\t\t\t'length': 1\n\t\t},\n\t\t{\n\t\t\t'field': 'linkName',\n\t\t\t'length': 100\n\t\t},\n\t\t{\n\t\t\t'field': 'ustar',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'owner',\n\t\t\t'length': 32\n\t\t},\n\t\t{\n\t\t\t'field': 'group',\n\t\t\t'length': 32\n\t\t},\n\t\t{\n\t\t\t'field': 'majorNumber',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'minorNumber',\n\t\t\t'length': 8\n\t\t},\n\t\t{\n\t\t\t'field': 'filenamePrefix',\n\t\t\t'length': 155\n\t\t},\n\t\t{\n\t\t\t'field': 'padding',\n\t\t\t'length': 12\n\t\t}\n\t];\n\n\tfunction formatHeader(data, cb) {\n\t\tvar buffer = utils.clean(512),\n\t\t\toffset = 0;\n\n\t\theaderFormat.forEach(function (value) {\n\t\t\tvar str = data[value.field] || \"\",\n\t\t\t\ti, length;\n\n\t\t\tfor (i = 0, length = str.length; i < length; i += 1) {\n\t\t\t\tbuffer[offset] = str.charCodeAt(i);\n\t\t\t\toffset += 1;\n\t\t\t}\n\n\t\t\toffset += value.length - i; // space it out with nulls\n\t\t});\n\n\t\tif (typeof cb === 'function') {\n\t\t\treturn cb(buffer, offset);\n\t\t}\n\t\treturn buffer;\n\t}\n\n\twindow.header = {}\n\twindow.header.structure = headerFormat;\n\twindow.header.format = formatHeader;\n}());\n\n(function () {\n\t\"use strict\";\n\n\tvar header = window.header,\n\t\tutils = window.utils,\n\t\trecordSize = 512,\n\t\tblockSize;\n\n\tfunction Tar(recordsPerBlock) {\n\t\tthis.written = 0;\n\t\tblockSize = (recordsPerBlock || 20) * recordSize;\n\t\tthis.out = utils.clean(blockSize);\n\t\tthis.blocks = [];\n\t\tthis.length = 0;\n\t}\n\n\tTar.prototype.append = function (filepath, input, opts, callback) {\n\t\tvar data,\n\t\t\tchecksum,\n\t\t\tmode,\n\t\t\tmtime,\n\t\t\tuid,\n\t\t\tgid,\n\t\t\theaderArr;\n\n\t\tif (typeof input === 'string') {\n\t\t\tinput = utils.stringToUint8(input);\n\t\t} else if (input.constructor !== Uint8Array.prototype.constructor) {\n\t\t\tthrow 'Invalid input type. You gave me: ' + input.constructor.toString().match(/function\\s*([$A-Za-z_][0-9A-Za-z_]*)\\s*\\(/)[1];\n\t\t}\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t\topts = {};\n\t\t}\n\n\t\topts = opts || {};\n\n\t\tmode = opts.mode || parseInt('777', 8) & 0xfff;\n\t\tmtime = opts.mtime || Math.floor(+new Date() / 1000);\n\t\tuid = opts.uid || 0;\n\t\tgid = opts.gid || 0;\n\n\t\tdata = {\n\t\t\tfileName: filepath,\n\t\t\tfileMode: utils.pad(mode, 7),\n\t\t\tuid: utils.pad(uid, 7),\n\t\t\tgid: utils.pad(gid, 7),\n\t\t\tfileSize: utils.pad(input.length, 11),\n\t\t\tmtime: utils.pad(mtime, 11),\n\t\t\tchecksum: '        ',\n\t\t\ttype: '0', // just a file\n\t\t\tustar: 'ustar  ',\n\t\t\towner: opts.owner || '',\n\t\t\tgroup: opts.group || ''\n\t\t};\n\n\t\t// calculate the checksum\n\t\tchecksum = 0;\n\t\tObject.keys(data).forEach(function (key) {\n\t\t\tvar i, value = data[key], length;\n\n\t\t\tfor (i = 0, length = value.length; i < length; i += 1) {\n\t\t\t\tchecksum += value.charCodeAt(i);\n\t\t\t}\n\t\t});\n\n\t\tdata.checksum = utils.pad(checksum, 6) + \"\\u0000 \";\n\n\t\theaderArr = header.format(data);\n\n\t\tvar headerLength = Math.ceil( headerArr.length / recordSize ) * recordSize;\n\t\tvar inputLength = Math.ceil( input.length / recordSize ) * recordSize;\n\n\t\tthis.blocks.push( { header: headerArr, input: input, headerLength: headerLength, inputLength: inputLength } );\n\n\t};\n\n\tTar.prototype.save = function() {\n\n\t\tvar buffers = [];\n\t\tvar chunks = [];\n\t\tvar length = 0;\n\t\tvar max = Math.pow( 2, 20 );\n\n\t\tvar chunk = [];\n\t\tthis.blocks.forEach( function( b ) {\n\t\t\tif( length + b.headerLength + b.inputLength > max ) {\n\t\t\t\tchunks.push( { blocks: chunk, length: length } );\n\t\t\t\tchunk = [];\n\t\t\t\tlength = 0;\n\t\t\t}\n\t\t\tchunk.push( b );\n\t\t\tlength += b.headerLength + b.inputLength;\n\t\t} );\n\t\tchunks.push( { blocks: chunk, length: length } );\n\n\t\tchunks.forEach( function( c ) {\n\n\t\t\tvar buffer = new Uint8Array( c.length );\n\t\t\tvar written = 0;\n\t\t\tc.blocks.forEach( function( b ) {\n\t\t\t\tbuffer.set( b.header, written );\n\t\t\t\twritten += b.headerLength;\n\t\t\t\tbuffer.set( b.input, written );\n\t\t\t\twritten += b.inputLength;\n\t\t\t} );\n\t\t\tbuffers.push( buffer );\n\n\t\t} );\n\n\t\tbuffers.push( new Uint8Array( 2 * recordSize ) );\n\n\t\treturn new Blob( buffers, { type: 'octet/stream' } );\n\n\t};\n\n\tTar.prototype.clear = function () {\n\t\tthis.written = 0;\n\t\tthis.out = utils.clean(blockSize);\n\t};\n\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = Tar;\n  } else {\n    window.Tar = Tar;\n  }\n}());\n","/**\n * A tool for presenting an ArrayBuffer as a stream for writing some simple data types.\n *\n * By Nicholas Sherlock\n *\n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n\n\"use strict\";\n\n// (function(){\n    /*\n     * Create an ArrayBuffer of the given length and present it as a writable stream with methods\n     * for writing data in different formats.\n     */\n    var ArrayBufferDataStream = function(length) {\n        this.data = new Uint8Array(length);\n        this.pos = 0;\n    };\n\n    ArrayBufferDataStream.prototype.seek = function(offset) {\n        this.pos = offset;\n    };\n\n    ArrayBufferDataStream.prototype.writeBytes = function(arr) {\n        for (var i = 0; i < arr.length; i++) {\n            this.data[this.pos++] = arr[i];\n        }\n    };\n\n    ArrayBufferDataStream.prototype.writeByte = function(b) {\n        this.data[this.pos++] = b;\n    };\n\n    //Synonym:\n    ArrayBufferDataStream.prototype.writeU8 = ArrayBufferDataStream.prototype.writeByte;\n\n    ArrayBufferDataStream.prototype.writeU16BE = function(u) {\n        this.data[this.pos++] = u >> 8;\n        this.data[this.pos++] = u;\n    };\n\n    ArrayBufferDataStream.prototype.writeDoubleBE = function(d) {\n        var\n            bytes = new Uint8Array(new Float64Array([d]).buffer);\n\n        for (var i = bytes.length - 1; i >= 0; i--) {\n            this.writeByte(bytes[i]);\n        }\n    };\n\n    ArrayBufferDataStream.prototype.writeFloatBE = function(d) {\n        var\n            bytes = new Uint8Array(new Float32Array([d]).buffer);\n\n        for (var i = bytes.length - 1; i >= 0; i--) {\n            this.writeByte(bytes[i]);\n        }\n    };\n\n    /**\n     * Write an ASCII string to the stream\n     */\n    ArrayBufferDataStream.prototype.writeString = function(s) {\n        for (var i = 0; i < s.length; i++) {\n            this.data[this.pos++] = s.charCodeAt(i);\n        }\n    };\n\n    /**\n     * Write the given 32-bit integer to the stream as an EBML variable-length integer using the given byte width\n     * (use measureEBMLVarInt).\n     *\n     * No error checking is performed to ensure that the supplied width is correct for the integer.\n     *\n     * @param i Integer to be written\n     * @param width Number of bytes to write to the stream\n     */\n    ArrayBufferDataStream.prototype.writeEBMLVarIntWidth = function(i, width) {\n        switch (width) {\n            case 1:\n                this.writeU8((1 << 7) | i);\n            break;\n            case 2:\n                this.writeU8((1 << 6) | (i >> 8));\n                this.writeU8(i);\n            break;\n            case 3:\n                this.writeU8((1 << 5) | (i >> 16));\n                this.writeU8(i >> 8);\n                this.writeU8(i);\n            break;\n            case 4:\n                this.writeU8((1 << 4) | (i >> 24));\n                this.writeU8(i >> 16);\n                this.writeU8(i >> 8);\n                this.writeU8(i);\n            break;\n            case 5:\n                /*\n                 * JavaScript converts its doubles to 32-bit integers for bitwise operations, so we need to do a\n                 * division by 2^32 instead of a right-shift of 32 to retain those top 3 bits\n                 */\n                this.writeU8((1 << 3) | ((i / 4294967296) & 0x7));\n                this.writeU8(i >> 24);\n                this.writeU8(i >> 16);\n                this.writeU8(i >> 8);\n                this.writeU8(i);\n            break;\n            default:\n                throw new RuntimeException(\"Bad EBML VINT size \" + width);\n        }\n    };\n\n    /**\n     * Return the number of bytes needed to encode the given integer as an EBML VINT.\n     */\n    ArrayBufferDataStream.prototype.measureEBMLVarInt = function(val) {\n        if (val < (1 << 7) - 1) {\n            /* Top bit is set, leaving 7 bits to hold the integer, but we can't store 127 because\n             * \"all bits set to one\" is a reserved value. Same thing for the other cases below:\n             */\n            return 1;\n        } else if (val < (1 << 14) - 1) {\n            return 2;\n        } else if (val < (1 << 21) - 1) {\n            return 3;\n        } else if (val < (1 << 28) - 1) {\n            return 4;\n        } else if (val < 34359738367) { // 2 ^ 35 - 1 (can address 32GB)\n            return 5;\n        } else {\n            throw new RuntimeException(\"EBML VINT size not supported \" + val);\n        }\n    };\n\n    ArrayBufferDataStream.prototype.writeEBMLVarInt = function(i) {\n        this.writeEBMLVarIntWidth(i, this.measureEBMLVarInt(i));\n    };\n\n    /**\n     * Write the given unsigned 32-bit integer to the stream in big-endian order using the given byte width.\n     * No error checking is performed to ensure that the supplied width is correct for the integer.\n     *\n     * Omit the width parameter to have it determined automatically for you.\n     *\n     * @param u Unsigned integer to be written\n     * @param width Number of bytes to write to the stream\n     */\n    ArrayBufferDataStream.prototype.writeUnsignedIntBE = function(u, width) {\n        if (width === undefined) {\n            width = this.measureUnsignedInt(u);\n        }\n\n        // Each case falls through:\n        switch (width) {\n            case 5:\n                this.writeU8(Math.floor(u / 4294967296)); // Need to use division to access >32 bits of floating point var\n            case 4:\n                this.writeU8(u >> 24);\n            case 3:\n                this.writeU8(u >> 16);\n            case 2:\n                this.writeU8(u >> 8);\n            case 1:\n                this.writeU8(u);\n            break;\n            default:\n                throw new RuntimeException(\"Bad UINT size \" + width);\n        }\n    };\n\n    /**\n     * Return the number of bytes needed to hold the non-zero bits of the given unsigned integer.\n     */\n    ArrayBufferDataStream.prototype.measureUnsignedInt = function(val) {\n        // Force to 32-bit unsigned integer\n        if (val < (1 << 8)) {\n            return 1;\n        } else if (val < (1 << 16)) {\n            return 2;\n        } else if (val < (1 << 24)) {\n            return 3;\n        } else if (val < 4294967296) {\n            return 4;\n        } else {\n            return 5;\n        }\n    };\n\n    /**\n     * Return a view on the portion of the buffer from the beginning to the current seek position as a Uint8Array.\n     */\n    ArrayBufferDataStream.prototype.getAsDataArray = function() {\n        if (this.pos < this.data.byteLength) {\n            return this.data.subarray(0, this.pos);\n        } else if (this.pos == this.data.byteLength) {\n            return this.data;\n        } else {\n            throw \"ArrayBufferDataStream's pos lies beyond end of buffer\";\n        }\n    };\n\n// \tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n// \t\tmodule.exports = ArrayBufferDataStream;\n// \t} else {\n// \t\twindow.ArrayBufferDataStream = ArrayBufferDataStream;\n// \t}\n// }());\"use strict\";\n\n/**\n * Allows a series of Blob-convertible objects (ArrayBuffer, Blob, String, etc) to be added to a buffer. Seeking and\n * overwriting of blobs is allowed.\n *\n * You can supply a FileWriter, in which case the BlobBuffer is just used as temporary storage before it writes it\n * through to the disk.\n *\n * By Nicholas Sherlock\n *\n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n// (function() {\n\tvar BlobBuffer = function(fs) {\n\t\treturn function(destination) {\n\t\t\tvar\n\t\t\t\tbuffer = [],\n\t\t\t\twritePromise = Promise.resolve(),\n\t\t\t\tfileWriter = null,\n\t\t\t\tfd = null;\n\n\t\t\tif (typeof FileWriter !== \"undefined\" && destination instanceof FileWriter) {\n\t\t\t\tfileWriter = destination;\n\t\t\t} else if (fs && destination) {\n\t\t\t\tfd = destination;\n\t\t\t}\n\n\t\t\t// Current seek offset\n\t\t\tthis.pos = 0;\n\n\t\t\t// One more than the index of the highest byte ever written\n\t\t\tthis.length = 0;\n\n\t\t\t// Returns a promise that converts the blob to an ArrayBuffer\n\t\t\tfunction readBlobAsBuffer(blob) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tvar\n\t\t\t\t\t\treader = new FileReader();\n\n\t\t\t\t\treader.addEventListener(\"loadend\", function () {\n\t\t\t\t\t\tresolve(reader.result);\n\t\t\t\t\t});\n\n\t\t\t\t\treader.readAsArrayBuffer(blob);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction convertToUint8Array(thing) {\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tif (thing instanceof Uint8Array) {\n\t\t\t\t\t\tresolve(thing);\n\t\t\t\t\t} else if (thing instanceof ArrayBuffer || ArrayBuffer.isView(thing)) {\n\t\t\t\t\t\tresolve(new Uint8Array(thing));\n\t\t\t\t\t} else if (thing instanceof Blob) {\n\t\t\t\t\t\tresolve(readBlobAsBuffer(thing).then(function (buffer) {\n\t\t\t\t\t\t\treturn new Uint8Array(buffer);\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Assume that Blob will know how to read this thing\n\t\t\t\t\t\tresolve(readBlobAsBuffer(new Blob([thing])).then(function (buffer) {\n\t\t\t\t\t\t\treturn new Uint8Array(buffer);\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction measureData(data) {\n\t\t\t\tvar\n\t\t\t\t\tresult = data.byteLength || data.length || data.size;\n\n\t\t\t\tif (!Number.isInteger(result)) {\n\t\t\t\t\tthrow \"Failed to determine size of element\";\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Seek to the given absolute offset.\n\t\t\t *\n\t\t\t * You may not seek beyond the end of the file (this would create a hole and/or allow blocks to be written in non-\n\t\t\t * sequential order, which isn't currently supported by the memory buffer backend).\n\t\t\t */\n\t\t\tthis.seek = function (offset) {\n\t\t\t\tif (offset < 0) {\n\t\t\t\t\tthrow \"Offset may not be negative\";\n\t\t\t\t}\n\n\t\t\t\tif (isNaN(offset)) {\n\t\t\t\t\tthrow \"Offset may not be NaN\";\n\t\t\t\t}\n\n\t\t\t\tif (offset > this.length) {\n\t\t\t\t\tthrow \"Seeking beyond the end of file is not allowed\";\n\t\t\t\t}\n\n\t\t\t\tthis.pos = offset;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Write the Blob-convertible data to the buffer at the current seek position.\n\t\t\t *\n\t\t\t * Note: If overwriting existing data, the write must not cross preexisting block boundaries (written data must\n\t\t\t * be fully contained by the extent of a previous write).\n\t\t\t */\n\t\t\tthis.write = function (data) {\n\t\t\t\tvar\n\t\t\t\t\tnewEntry = {\n\t\t\t\t\t\toffset: this.pos,\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tlength: measureData(data)\n\t\t\t\t\t},\n\t\t\t\t\tisAppend = newEntry.offset >= this.length;\n\n\t\t\t\tthis.pos += newEntry.length;\n\t\t\t\tthis.length = Math.max(this.length, this.pos);\n\n\t\t\t\t// After previous writes complete, perform our write\n\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\tif (fd) {\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t\t\t\tconvertToUint8Array(newEntry.data).then(function(dataArray) {\n\t\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\t\ttotalWritten = 0,\n\t\t\t\t\t\t\t\t\tbuffer = Buffer.from(dataArray.buffer),\n\n\t\t\t\t\t\t\t\t\thandleWriteComplete = function(err, written, buffer) {\n\t\t\t\t\t\t\t\t\t\ttotalWritten += written;\n\n\t\t\t\t\t\t\t\t\t\tif (totalWritten >= buffer.length) {\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t// We still have more to write...\n\t\t\t\t\t\t\t\t\t\t\tfs.write(fd, buffer, totalWritten, buffer.length - totalWritten, newEntry.offset + totalWritten, handleWriteComplete);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tfs.write(fd, buffer, 0, buffer.length, newEntry.offset, handleWriteComplete);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (fileWriter) {\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tfileWriter.onwriteend = resolve;\n\n\t\t\t\t\t\t\tfileWriter.seek(newEntry.offset);\n\t\t\t\t\t\t\tfileWriter.write(new Blob([newEntry.data]));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!isAppend) {\n\t\t\t\t\t\t// We might be modifying a write that was already buffered in memory.\n\n\t\t\t\t\t\t// Slow linear search to find a block we might be overwriting\n\t\t\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\tentry = buffer[i];\n\n\t\t\t\t\t\t\t// If our new entry overlaps the old one in any way...\n\t\t\t\t\t\t\tif (!(newEntry.offset + newEntry.length <= entry.offset || newEntry.offset >= entry.offset + entry.length)) {\n\t\t\t\t\t\t\t\tif (newEntry.offset < entry.offset || newEntry.offset + newEntry.length > entry.offset + entry.length) {\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Overwrite crosses blob boundaries\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (newEntry.offset == entry.offset && newEntry.length == entry.length) {\n\t\t\t\t\t\t\t\t\t// We overwrote the entire block\n\t\t\t\t\t\t\t\t\tentry.data = newEntry.data;\n\n\t\t\t\t\t\t\t\t\t// We're done\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn convertToUint8Array(entry.data)\n\t\t\t\t\t\t\t\t\t\t.then(function (entryArray) {\n\t\t\t\t\t\t\t\t\t\t\tentry.data = entryArray;\n\n\t\t\t\t\t\t\t\t\t\t\treturn convertToUint8Array(newEntry.data);\n\t\t\t\t\t\t\t\t\t\t}).then(function (newEntryArray) {\n\t\t\t\t\t\t\t\t\t\t\tnewEntry.data = newEntryArray;\n\n\t\t\t\t\t\t\t\t\t\t\tentry.data.set(newEntry.data, newEntry.offset - entry.offset);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Else fall through to do a simple append, as we didn't overwrite any pre-existing blocks\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffer.push(newEntry);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Finish all writes to the buffer, returning a promise that signals when that is complete.\n\t\t\t *\n\t\t\t * If a FileWriter was not provided, the promise is resolved with a Blob that represents the completed BlobBuffer\n\t\t\t * contents. You can optionally pass in a mimeType to be used for this blob.\n\t\t\t *\n\t\t\t * If a FileWriter was provided, the promise is resolved with null as the first argument.\n\t\t\t */\n\t\t\tthis.complete = function (mimeType) {\n\t\t\t\tif (fd || fileWriter) {\n\t\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// After writes complete we need to merge the buffer to give to the caller\n\t\t\t\t\twritePromise = writePromise.then(function () {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tresult = [];\n\n\t\t\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\t\t\tresult.push(buffer[i].data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn new Blob(result, {mimeType: mimeType});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn writePromise;\n\t\t\t};\n\t\t};\n\t}(null);\n\n// \tif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n// \t\tmodule.exports = BlobBuffer(require('fs'));\n// \t} else {\n// \t\twindow.BlobBuffer = BlobBuffer(null);\n// \t}\n// })();\n/**\n * WebM video encoder for Google Chrome. This implementation is suitable for creating very large video files, because\n * it can stream Blobs directly to a FileWriter without buffering the entire video in memory.\n *\n * When FileWriter is not available or not desired, it can buffer the video in memory as a series of Blobs which are\n * eventually returned as one composite Blob.\n *\n * By Nicholas Sherlock.\n *\n * Based on the ideas from Whammy: https://github.com/antimatter15/whammy\n *\n * Released under the WTFPLv2 https://en.wikipedia.org/wiki/WTFPL\n */\n\n\"use strict\";\n\n(function() {\n    var WebMWriter = function(ArrayBufferDataStream, BlobBuffer) {\n        function extend(base, top) {\n            var\n                target = {};\n\n            [base, top].forEach(function(obj) {\n                for (var prop in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                        target[prop] = obj[prop];\n                    }\n                }\n            });\n\n            return target;\n        }\n\n        /**\n         * Decode a Base64 data URL into a binary string.\n         *\n         * Returns the binary string, or false if the URL could not be decoded.\n         */\n        function decodeBase64WebPDataURL(url) {\n            if (typeof url !== \"string\" || !url.match(/^data:image\\/webp;base64,/i)) {\n                return false;\n            }\n\n            return window.atob(url.substring(\"data:image\\/webp;base64,\".length));\n        }\n\n        /**\n         * Convert a raw binary string (one character = one output byte) to an ArrayBuffer\n         */\n        function stringToArrayBuffer(string) {\n            var\n                buffer = new ArrayBuffer(string.length),\n                int8Array = new Uint8Array(buffer);\n\n            for (var i = 0; i < string.length; i++) {\n                int8Array[i] = string.charCodeAt(i);\n            }\n\n            return buffer;\n        }\n\n        /**\n         * Convert the given canvas to a WebP encoded image and return the image data as a string.\n         */\n        function renderAsWebP(canvas, quality) {\n            var\n                frame = canvas.toDataURL('image/webp', {quality: quality});\n\n            return decodeBase64WebPDataURL(frame);\n        }\n\n        function extractKeyframeFromWebP(webP) {\n            // Assume that Chrome will generate a Simple Lossy WebP which has this header:\n            var\n                keyframeStartIndex = webP.indexOf('VP8 ');\n\n            if (keyframeStartIndex == -1) {\n                throw \"Failed to identify beginning of keyframe in WebP image\";\n            }\n\n            // Skip the header and the 4 bytes that encode the length of the VP8 chunk\n            keyframeStartIndex += 'VP8 '.length + 4;\n\n            return webP.substring(keyframeStartIndex);\n        }\n\n        // Just a little utility so we can tag values as floats for the EBML encoder's benefit\n        function EBMLFloat32(value) {\n            this.value = value;\n        }\n\n        function EBMLFloat64(value) {\n            this.value = value;\n        }\n\n        /**\n         * Write the given EBML object to the provided ArrayBufferStream.\n         *\n         * The buffer's first byte is at bufferFileOffset inside the video file. This is used to complete offset and\n         * dataOffset fields in each EBML structure, indicating the file offset of the first byte of the EBML element and\n         * its data payload.\n         */\n        function writeEBML(buffer, bufferFileOffset, ebml) {\n            // Is the ebml an array of sibling elements?\n            if (Array.isArray(ebml)) {\n                for (var i = 0; i < ebml.length; i++) {\n                    writeEBML(buffer, bufferFileOffset, ebml[i]);\n                }\n            // Is this some sort of raw data that we want to write directly?\n            } else if (typeof ebml === \"string\") {\n                buffer.writeString(ebml);\n            } else if (ebml instanceof Uint8Array) {\n                buffer.writeBytes(ebml);\n            } else if (ebml.id){\n                // We're writing an EBML element\n                ebml.offset = buffer.pos + bufferFileOffset;\n\n                buffer.writeUnsignedIntBE(ebml.id); // ID field\n\n                // Now we need to write the size field, so we must know the payload size:\n\n                if (Array.isArray(ebml.data)) {\n                    // Writing an array of child elements. We won't try to measure the size of the children up-front\n\n                    var\n                        sizePos, dataBegin, dataEnd;\n\n                    if (ebml.size === -1) {\n                        // Write the reserved all-one-bits marker to note that the size of this element is unknown/unbounded\n                        buffer.writeByte(0xFF);\n                    } else {\n                        sizePos = buffer.pos;\n\n                        /* Write a dummy size field to overwrite later. 4 bytes allows an element maximum size of 256MB,\n                         * which should be plenty (we don't want to have to buffer that much data in memory at one time\n                         * anyway!)\n                         */\n                        buffer.writeBytes([0, 0, 0, 0]);\n                    }\n\n                    dataBegin = buffer.pos;\n\n                    ebml.dataOffset = dataBegin + bufferFileOffset;\n                    writeEBML(buffer, bufferFileOffset, ebml.data);\n\n                    if (ebml.size !== -1) {\n                        dataEnd = buffer.pos;\n\n                        ebml.size = dataEnd - dataBegin;\n\n                        buffer.seek(sizePos);\n                        buffer.writeEBMLVarIntWidth(ebml.size, 4); // Size field\n\n                        buffer.seek(dataEnd);\n                    }\n                } else if (typeof ebml.data === \"string\") {\n                    buffer.writeEBMLVarInt(ebml.data.length); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeString(ebml.data);\n                } else if (typeof ebml.data === \"number\") {\n                    // Allow the caller to explicitly choose the size if they wish by supplying a size field\n                    if (!ebml.size) {\n                        ebml.size = buffer.measureUnsignedInt(ebml.data);\n                    }\n\n                    buffer.writeEBMLVarInt(ebml.size); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeUnsignedIntBE(ebml.data, ebml.size);\n                } else if (ebml.data instanceof EBMLFloat64) {\n                    buffer.writeEBMLVarInt(8); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeDoubleBE(ebml.data.value);\n                } else if (ebml.data instanceof EBMLFloat32) {\n                    buffer.writeEBMLVarInt(4); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeFloatBE(ebml.data.value);\n                } else if (ebml.data instanceof Uint8Array) {\n                    buffer.writeEBMLVarInt(ebml.data.byteLength); // Size field\n                    ebml.dataOffset = buffer.pos + bufferFileOffset;\n                    buffer.writeBytes(ebml.data);\n                } else {\n                    throw \"Bad EBML datatype \" + typeof ebml.data;\n                }\n            } else {\n                throw \"Bad EBML datatype \" + typeof ebml.data;\n            }\n        }\n\n        return function(options) {\n            var\n                MAX_CLUSTER_DURATION_MSEC = 5000,\n                DEFAULT_TRACK_NUMBER = 1,\n\n                writtenHeader = false,\n                videoWidth, videoHeight,\n\n                clusterFrameBuffer = [],\n                clusterStartTime = 0,\n                clusterDuration = 0,\n\n                optionDefaults = {\n                    quality: 0.95,       // WebM image quality from 0.0 (worst) to 1.0 (best)\n                    fileWriter: null,    // Chrome FileWriter in order to stream to a file instead of buffering to memory (optional)\n                    fd: null,            // Node.JS file descriptor to write to instead of buffering (optional)\n\n                    // You must supply one of:\n                    frameDuration: null, // Duration of frames in milliseconds\n                    frameRate: null,     // Number of frames per second\n                },\n\n                seekPoints = {\n                    Cues: {id: new Uint8Array([0x1C, 0x53, 0xBB, 0x6B]), positionEBML: null},\n                    SegmentInfo: {id: new Uint8Array([0x15, 0x49, 0xA9, 0x66]), positionEBML: null},\n                    Tracks: {id: new Uint8Array([0x16, 0x54, 0xAE, 0x6B]), positionEBML: null},\n                },\n\n                ebmlSegment,\n                segmentDuration = {\n                    \"id\": 0x4489, // Duration\n                    \"data\": new EBMLFloat64(0)\n                },\n\n                seekHead,\n\n                cues = [],\n\n                blobBuffer = new BlobBuffer(options.fileWriter || options.fd);\n\n            function fileOffsetToSegmentRelative(fileOffset) {\n                return fileOffset - ebmlSegment.dataOffset;\n            }\n\n            /**\n             * Create a SeekHead element with descriptors for the points in the global seekPoints array.\n             *\n             * 5 bytes of position values are reserved for each node, which lie at the offset point.positionEBML.dataOffset,\n             * to be overwritten later.\n             */\n            function createSeekHead() {\n                var\n                    seekPositionEBMLTemplate = {\n                        \"id\": 0x53AC, // SeekPosition\n                        \"size\": 5, // Allows for 32GB video files\n                        \"data\": 0 // We'll overwrite this when the file is complete\n                    },\n\n                    result = {\n                        \"id\": 0x114D9B74, // SeekHead\n                        \"data\": []\n                    };\n\n                for (var name in seekPoints) {\n                    var\n                        seekPoint = seekPoints[name];\n\n                    seekPoint.positionEBML = Object.create(seekPositionEBMLTemplate);\n\n                    result.data.push({\n                         \"id\": 0x4DBB, // Seek\n                         \"data\": [\n                              {\n                                  \"id\": 0x53AB, // SeekID\n                                  \"data\": seekPoint.id\n                              },\n                              seekPoint.positionEBML\n                         ]\n                    });\n                }\n\n                return result;\n            }\n\n            /**\n             * Write the WebM file header to the stream.\n             */\n            function writeHeader() {\n                seekHead = createSeekHead();\n\n                var\n                    ebmlHeader = {\n                        \"id\": 0x1a45dfa3, // EBML\n                        \"data\": [\n                            {\n                                \"id\": 0x4286, // EBMLVersion\n                                \"data\": 1\n                            },\n                            {\n                                \"id\": 0x42f7, // EBMLReadVersion\n                                \"data\": 1\n                            },\n                            {\n                                \"id\": 0x42f2, // EBMLMaxIDLength\n                                \"data\": 4\n                            },\n                            {\n                                \"id\": 0x42f3, // EBMLMaxSizeLength\n                                \"data\": 8\n                            },\n                            {\n                                \"id\": 0x4282, // DocType\n                                \"data\": \"webm\"\n                            },\n                            {\n                                \"id\": 0x4287, // DocTypeVersion\n                                \"data\": 2\n                            },\n                            {\n                                \"id\": 0x4285, // DocTypeReadVersion\n                                \"data\": 2\n                            }\n                        ]\n                    },\n\n                    segmentInfo = {\n                        \"id\": 0x1549a966, // Info\n                        \"data\": [\n                            {\n                                \"id\": 0x2ad7b1, // TimecodeScale\n                                \"data\": 1e6 // Times will be in miliseconds (1e6 nanoseconds per step = 1ms)\n                            },\n                            {\n                                \"id\": 0x4d80, // MuxingApp\n                                \"data\": \"webm-writer-js\",\n                            },\n                            {\n                                \"id\": 0x5741, // WritingApp\n                                \"data\": \"webm-writer-js\"\n                            },\n                            segmentDuration // To be filled in later\n                        ]\n                    },\n\n                    tracks = {\n                        \"id\": 0x1654ae6b, // Tracks\n                        \"data\": [\n                            {\n                                \"id\": 0xae, // TrackEntry\n                                \"data\": [\n                                    {\n                                        \"id\": 0xd7, // TrackNumber\n                                        \"data\": DEFAULT_TRACK_NUMBER\n                                    },\n                                    {\n                                        \"id\": 0x73c5, // TrackUID\n                                        \"data\": DEFAULT_TRACK_NUMBER\n                                    },\n                                    {\n                                        \"id\": 0x9c, // FlagLacing\n                                        \"data\": 0\n                                    },\n                                    {\n                                        \"id\": 0x22b59c, // Language\n                                        \"data\": \"und\"\n                                    },\n                                    {\n                                        \"id\": 0x86, // CodecID\n                                        \"data\": \"V_VP8\"\n                                    },\n                                    {\n                                        \"id\": 0x258688, // CodecName\n                                        \"data\": \"VP8\"\n                                    },\n                                    {\n                                        \"id\": 0x83, // TrackType\n                                        \"data\": 1\n                                    },\n                                    {\n                                        \"id\": 0xe0,  // Video\n                                        \"data\": [\n                                            {\n                                                \"id\": 0xb0, // PixelWidth\n                                                \"data\": videoWidth\n                                            },\n                                            {\n                                                \"id\": 0xba, // PixelHeight\n                                                \"data\": videoHeight\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    };\n\n                ebmlSegment = {\n                    \"id\": 0x18538067, // Segment\n                    \"size\": -1, // Unbounded size\n                    \"data\": [\n                        seekHead,\n                        segmentInfo,\n                        tracks,\n                    ]\n                };\n\n                var\n                    bufferStream = new ArrayBufferDataStream(256);\n\n                writeEBML(bufferStream, blobBuffer.pos, [ebmlHeader, ebmlSegment]);\n                blobBuffer.write(bufferStream.getAsDataArray());\n\n                // Now we know where these top-level elements lie in the file:\n                seekPoints.SegmentInfo.positionEBML.data = fileOffsetToSegmentRelative(segmentInfo.offset);\n                seekPoints.Tracks.positionEBML.data = fileOffsetToSegmentRelative(tracks.offset);\n            };\n\n            /**\n             * Create a SimpleBlock keyframe header using these fields:\n             *     timecode    - Time of this keyframe\n             *     trackNumber - Track number from 1 to 126 (inclusive)\n             *     frame       - Raw frame data payload string\n             *\n             * Returns an EBML element.\n             */\n            function createKeyframeBlock(keyframe) {\n                var\n                    bufferStream = new ArrayBufferDataStream(1 + 2 + 1);\n\n                if (!(keyframe.trackNumber > 0 && keyframe.trackNumber < 127)) {\n                    throw \"TrackNumber must be > 0 and < 127\";\n                }\n\n                bufferStream.writeEBMLVarInt(keyframe.trackNumber); // Always 1 byte since we limit the range of trackNumber\n                bufferStream.writeU16BE(keyframe.timecode);\n\n                // Flags byte\n                bufferStream.writeByte(\n                    1 << 7 // Keyframe\n                );\n\n                return {\n                    \"id\": 0xA3, // SimpleBlock\n                    \"data\": [\n                         bufferStream.getAsDataArray(),\n                         keyframe.frame\n                    ]\n                };\n            }\n\n            /**\n             * Create a Cluster node using these fields:\n             *\n             *    timecode    - Start time for the cluster\n             *\n             * Returns an EBML element.\n             */\n            function createCluster(cluster) {\n                return {\n                    \"id\": 0x1f43b675,\n                    \"data\": [\n                         {\n                            \"id\": 0xe7, // Timecode\n                            \"data\": Math.round(cluster.timecode)\n                         }\n                    ]\n                };\n            }\n\n            function addCuePoint(trackIndex, clusterTime, clusterFileOffset) {\n                cues.push({\n                    \"id\": 0xBB, // Cue\n                    \"data\": [\n                         {\n                             \"id\": 0xB3, // CueTime\n                             \"data\": clusterTime\n                         },\n                         {\n                             \"id\": 0xB7, // CueTrackPositions\n                             \"data\": [\n                                  {\n                                      \"id\": 0xF7, // CueTrack\n                                      \"data\": trackIndex\n                                  },\n                                  {\n                                      \"id\": 0xF1, // CueClusterPosition\n                                      \"data\": fileOffsetToSegmentRelative(clusterFileOffset)\n                                  }\n                             ]\n                         }\n                    ]\n                });\n            }\n\n            /**\n             * Write a Cues element to the blobStream using the global `cues` array of CuePoints (use addCuePoint()).\n             * The seek entry for the Cues in the SeekHead is updated.\n             */\n            function writeCues() {\n                var\n                    ebml = {\n                        \"id\": 0x1C53BB6B,\n                        \"data\": cues\n                    },\n\n                    cuesBuffer = new ArrayBufferDataStream(16 + cues.length * 32); // Pretty crude estimate of the buffer size we'll need\n\n                writeEBML(cuesBuffer, blobBuffer.pos, ebml);\n                blobBuffer.write(cuesBuffer.getAsDataArray());\n\n                // Now we know where the Cues element has ended up, we can update the SeekHead\n                seekPoints.Cues.positionEBML.data = fileOffsetToSegmentRelative(ebml.offset);\n            }\n\n            /**\n             * Flush the frames in the current clusterFrameBuffer out to the stream as a Cluster.\n             */\n            function flushClusterFrameBuffer() {\n                if (clusterFrameBuffer.length == 0) {\n                    return;\n                }\n\n                // First work out how large of a buffer we need to hold the cluster data\n                var\n                    rawImageSize = 0;\n\n                for (var i = 0; i < clusterFrameBuffer.length; i++) {\n                    rawImageSize += clusterFrameBuffer[i].frame.length;\n                }\n\n                var\n                    buffer = new ArrayBufferDataStream(rawImageSize + clusterFrameBuffer.length * 32), // Estimate 32 bytes per SimpleBlock header\n\n                    cluster = createCluster({\n                        timecode: Math.round(clusterStartTime),\n                    });\n\n                for (var i = 0; i < clusterFrameBuffer.length; i++) {\n                    cluster.data.push(createKeyframeBlock(clusterFrameBuffer[i]));\n                }\n\n                writeEBML(buffer, blobBuffer.pos, cluster);\n                blobBuffer.write(buffer.getAsDataArray());\n\n                addCuePoint(DEFAULT_TRACK_NUMBER, Math.round(clusterStartTime), cluster.offset);\n\n                clusterFrameBuffer = [];\n                clusterStartTime += clusterDuration;\n                clusterDuration = 0;\n            }\n\n            function validateOptions() {\n                // Derive frameDuration setting if not already supplied\n                if (!options.frameDuration) {\n                    if (options.frameRate) {\n                        options.frameDuration = 1000 / options.frameRate;\n                    } else {\n                        throw \"Missing required frameDuration or frameRate setting\";\n                    }\n                }\n            }\n\n            function addFrameToCluster(frame) {\n                frame.trackNumber = DEFAULT_TRACK_NUMBER;\n\n                // Frame timecodes are relative to the start of their cluster:\n                frame.timecode = Math.round(clusterDuration);\n\n                clusterFrameBuffer.push(frame);\n\n                clusterDuration += frame.duration;\n\n                if (clusterDuration >= MAX_CLUSTER_DURATION_MSEC) {\n                    flushClusterFrameBuffer();\n                }\n            }\n\n            /**\n             * Rewrites the SeekHead element that was initially written to the stream with the offsets of top level elements.\n             *\n             * Call once writing is complete (so the offset of all top level elements is known).\n             */\n            function rewriteSeekHead() {\n                var\n                    seekHeadBuffer = new ArrayBufferDataStream(seekHead.size),\n                    oldPos = blobBuffer.pos;\n\n                // Write the rewritten SeekHead element's data payload to the stream (don't need to update the id or size)\n                writeEBML(seekHeadBuffer, seekHead.dataOffset, seekHead.data);\n\n                // And write that through to the file\n                blobBuffer.seek(seekHead.dataOffset);\n                blobBuffer.write(seekHeadBuffer.getAsDataArray());\n\n                blobBuffer.seek(oldPos);\n            }\n\n            /**\n             * Rewrite the Duration field of the Segment with the newly-discovered video duration.\n             */\n            function rewriteDuration() {\n                var\n                    buffer = new ArrayBufferDataStream(8),\n                    oldPos = blobBuffer.pos;\n\n                // Rewrite the data payload (don't need to update the id or size)\n                buffer.writeDoubleBE(clusterStartTime);\n\n                // And write that through to the file\n                blobBuffer.seek(segmentDuration.dataOffset);\n                blobBuffer.write(buffer.getAsDataArray());\n\n                blobBuffer.seek(oldPos);\n            }\n\n            /**\n             * Add a frame to the video. Currently the frame must be a Canvas element.\n             */\n            this.addFrame = function(canvas) {\n                if (writtenHeader) {\n                    if (canvas.width != videoWidth || canvas.height != videoHeight) {\n                        throw \"Frame size differs from previous frames\";\n                    }\n                } else {\n                    videoWidth = canvas.width;\n                    videoHeight = canvas.height;\n\n                    writeHeader();\n                    writtenHeader = true;\n                }\n\n                var\n                    webP = renderAsWebP(canvas, {quality: options.quality});\n\n                if (!webP) {\n                    throw \"Couldn't decode WebP frame, does the browser support WebP?\";\n                }\n\n                addFrameToCluster({\n                    frame: extractKeyframeFromWebP(webP),\n                    duration: options.frameDuration\n                });\n            };\n\n            /**\n             * Finish writing the video and return a Promise to signal completion.\n             *\n             * If the destination device was memory (i.e. options.fileWriter was not supplied), the Promise is resolved with\n             * a Blob with the contents of the entire video.\n             */\n            this.complete = function() {\n                flushClusterFrameBuffer();\n\n                writeCues();\n                rewriteSeekHead();\n                rewriteDuration();\n\n                return blobBuffer.complete('video/webm');\n            };\n\n            this.getWrittenSize = function() {\n                return blobBuffer.length;\n            };\n\n            options = extend(optionDefaults, options || {});\n            validateOptions();\n        };\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t    // module.exports = WebMWriter(require(\"./ArrayBufferDataStream\"), require(\"./BlobBuffer\"));\n      module.exports = WebMWriter(ArrayBufferDataStream,BlobBuffer);\n    } else {\n\t    window.WebMWriter = WebMWriter(ArrayBufferDataStream, BlobBuffer);\n    }\n})();\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// Default export.\nimport * as CanvasCapture from './CanvasCapture';\nexport default CanvasCapture;\n\n// Named export.\nexport { CanvasCapture };"],"names":["$51861dfc7ca9d588$export$a143d493d941bafc","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","$ilwiq","parcelRequire","b64","tmp","i","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","arr","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","len","$eeb0961446aae8e3$var$revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","join","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","Uint8Array","Array","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","Error","indexOf","start","end","num","output","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","string","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","slice","$51861dfc7ca9d588$var$fromString","ArrayBuffer","isView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","obj","isBuffer","$51861dfc7ca9d588$var$checked","undefined","$51861dfc7ca9d588$var$numberIsNaN","type","isArray","data","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","array","toString","mustMatch","arguments","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","toLowerCase","$51861dfc7ca9d588$var$slowToString","this","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","n","$51861dfc7ca9d588$var$bidirectionalIndexOf","val","dir","$51861dfc7ca9d588$var$arrayIndexOf","call","lastIndexOf","i1","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$51861dfc7ca9d588$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","str","byteArray","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$51861dfc7ca9d588$var$typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","bytes","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","max","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","split","$51861dfc7ca9d588$var$base64clean","src","dst","constructor","name","factory","alphabet","table","i16","self","__webpack_require__","devDependencies","module","exports","corePath","substring","resolveURL","async","_data","test","atob","map","fetch","arrayBuffer","File","Blob","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","readAsArrayBuffer","toBlobURL","url","mimeType","blobURL","URL","createObjectURL","_corePath","coreRemotePath","wasmPath","workerPath","createFFmpegCore","script","document","createElement","eventHandler","removeEventListener","addEventListener","getElementsByTagName","appendChild","defaultOptions","getCreateFFmpegCore","fetchFile","defaultArgs","baseOptions","logger","progress","setLogging","setCustomLogger","parseProgress","parseArgs","version","NO_LOAD","_options","logging","optProgress","options","Core","ffmpeg","runResolve","running","parseMessage","message","detectCompletion","setProgress","_progress","setLogger","_logger","load","mainScriptUrlOrBlob","printErr","print","locateFile","path","prefix","window","endsWith","cwrap","isLoaded","run","_args","args","filter","exit","FS","method","customLogger","_logging","argsPtr","_malloc","Uint32Array","BYTES_PER_ELEMENT","forEach","idx","writeAsciiToMemory","setValue","duration","ratio","ts2sec","ts","h","parseFloat","startsWith","t","time","calcCrc","pngDataTable","crcTable","Int32Array","k","createPngDataTable","changeDpiBlob","dpi","headerChunk","dataArray","tail","changedArray","changeDpiOnArray","changeDpiDataUrl","base64Image","b64index","dataSplitted","format","body","headerLength","overwritepHYs","PNG","b64Index","b64PhysSignature1","b64PhysSignature2","b64PhysSignature3","ceil","JPEG","stringHeader","restOfData","headerBytes","finalArray","base64Header","btoa","arr2","_toConsumableArray","_P","_H","_Y","_S","physChunk","crc","crcChunk","startingIndex","searchStartOfPhys","chunkLength","finalHeader","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","b1","autoBom","warn","c1","XMLHttpRequest","open","responseType","g1","response","send","d1","a2","status","e1","dispatchEvent","MouseEvent","createEvent","initMouseEvent","f1","g","global","a1","navigator","userAgent","saveAs","HTMLAnchorElement","webkitURL","download","rel","href","origin","location","setTimeout","revokeObjectURL","f","msSaveOrOpenBlob","title","innerText","HTMLElement","safari","onloadend","readAsDataURL","l","o","u","r","t2","t1","t3","e2","r1","d2","p","encode","getTypeOf","charAt","decode","uint8array","t4","e3","r2","n1","compressedSize","uncompressedSize","crc32","compression","compressedContent","getContentWorker","pipe","uncompressWorker","on","streamInfo","data_length","getCompressedWorker","withStreamInfo","createWorkerFrom","compressWorker","STORE","magic","DEFLATE","t5","e4","r3","i2","t6","e5","base64","binary","createFolders","date","compressionOptions","comment","unixPermissions","dosPermissions","lie","t7","e6","Uint16Array","_pako","_pakoAction","_pakoOptions","meta","inherits","processChunk","_createPako","transformTo","flush","cleanUp","raw","level","onData","pako","t8","e7","r4","A","i3","t9","e8","r5","file","O","utf8encode","I","_","v","w","S","z","C","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCFullYear","getUTCMonth","getUTCDate","B","E","fileRecord","R","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","n2","s1","bytesWritten","zipComment","zipPlatform","encodeFileName","streamFiles","accumulate","contentBuffer","dirRecords","currentSourceOffset","entriesCount","currentFile","_sources","percent","openedSource","closedSource","t10","DATA_DESCRIPTOR","shift","t11","e9","r6","i4","CENTRAL_DIRECTORY_END","prepareNextSource","previous","isPaused","pause","resume","registerPrevious","t12","generatedError","t13","lock","t14","e10","r7","i5","generateWorker","t15","e11","platform","t16","e12","r8","i6","_compressWorker","t17","e13","files","create","root","clone","loadAsync","support","defaults","external","t18","e14","r9","i7","n3","s2","t19","decompressed","t20","extend","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","isNode","isStream","prepareContent","then","all","fileNameStr","fileCommentStr","t21","e15","_upstreamEnded","_bindStream","t22","_stream","t23","e16","r10","Readable","i8","t24","e17","_helper","emit","_read","t25","e18","$89d6528cdd58799b$require$Buffer","newBufferFrom","allocBuffer","t26","e19","r11","s3","Date","toUpperCase","n4","a3","o1","h1","i9","t27","e20","folder","t28","e21","remove","e22","generate","generateInternalStream","checkSupport","t29","generateAsync","generateNodeStream","toNodejsStream","stream","t30","e23","r12","i10","n5","byteAt","zero","lastIndexOfSignature","readAndCheckSignature","readData","checkOffset","index","t31","e24","r13","checkIndex","setIndex","skip","readInt","readString","readDate","UTC","t32","e25","t33","e26","t34","e27","t35","e28","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","t36","destType","t37","t38","e29","propName","t39","e30","t40","dataIsReady","_tickScheduled","_tickAndRepeat","delay","isFinished","_tick","t41","e31","r14","extraStreamInfo","isLocked","_listeners","t42","mergeStreamInfo","hasOwnProperty","t44","e32","r15","n6","s4","i11","a4","o2","nodestream","t43","t45","e33","r16","i12","n7","_internalType","s5","_outputType","_mimeType","t46","newBlob","_worker","t48","t49","objectMode","arraybuffer","nodebuffer","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","t50","t51","e34","s6","o3","r17","i13","n8","a5","leftOver","t52","t53","applyFromCharCode","t54","e35","Utf8DecodeWorker","Utf8EncodeWorker","t55","e36","r18","i14","n9","s7","stringifyByChunk","stringifyByChar","applyCanBeUsed","t56","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","r19","t57","i15","t58","t59","t60","e37","r20","loadOptions","checkSignature","reader","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","zip64ExtensibleData","id","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","t61","e38","r21","i17","n10","isEncrypted","bitFlag","useUTF8","t62","e39","fileNameLength","fileName","compressionMethod","versionMadeBy","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","t63","e40","r22","i18","_dataBinary","n11","internalStream","_decompressWorker","t64","nodeStream","t65","e41","e42","r23","t66","MutationObserver","WebKitMutationObserver","createTextNode","observe","characterData","setImmediate","MessageChannel","onreadystatechange","parentNode","removeChild","documentElement","port1","onmessage","port2","postMessage","t67","e43","r24","n12","s8","a6","i19","o4","state","queue","outcome","h2","promise","onFulfilled","callFulfilled","otherCallFulfilled","onRejected","callRejected","otherCallRejected","t68","t69","t70","finally","catch","t71","e44","t72","race","t73","immediate","assign","t74","e45","r25","n13","s9","chunkSize","windowBits","memLevel","strategy","to","gzip","err","msg","ended","chunks","strm","avail_out","deflateInit2","header","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","i20","input","next_in","avail_in","Buf8","next_out","deflate","onEnd","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","deflateRaw","t75","e46","r26","i21","n14","s10","a7","inflateInit2","Z_OK","inflateGetHeader","o5","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","inflateRaw","ungzip","t76","e47","r27","i22","n15","s11","setTyped","Buf16","Buf32","t79","e48","r28","n16","s12","t77","t78","i23","t80","e49","r29","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","t81","e50","r30","t82","e51","r31","h3","d3","u1","c2","p1","i24","l1","f2","n17","s13","a8","o6","T","D","F","pending","pending_buf","pending_out","total_out","N","_tr_flush_block","block_start","strstart","U","P","L","max_chain_length","prev_length","nice_match","w_size","w_mask","prev","good_match","lookahead","match_start","window_size","hash_size","head","wrap","adler","total_in","insert","ins_h","hash_shift","hash_mask","Z","match_length","_tr_tally","max_lazy_match","last_lit","W","prev_match","match_available","M","good_length","max_lazy","nice_length","max_chain","func","H","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","G","data_type","_tr_init","K","t83","Y","deflateInit","deflateReset","deflateResetKeep","t84","e52","r32","i25","n18","s14","text","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","done","t85","e53","r33","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","mode","sane","t86","e54","r34","i26","n19","s15","last","havedict","flags","check","total","wbits","ncode","nlen","ndist","have","next","work","lendyn","distdyn","back","was","a9","o7","h4","u2","l2","f3","d4","inflateReset","inflateReset2","inflateResetKeep","inflateInit","inflateInfo","t87","e55","r35","t88","e56","r36","n20","o8","h5","i27","s16","a10","u3","l3","f4","d5","c3","p2","m1","static_tree","extra_bits","extra_base","elems","max_length","has_stree","dyn_tree","max_code","stat_desc","t89","e57","r37","i28","n21","s17","a11","o9","h6","u4","X","V","q","J","t90","e58","r38","i29","t91","t92","e59","r39","i30","n22","t93","t94","splice","HTMLCanvasElement","toBlob","t95","toDataURL","_defineProperties","props","descriptor","configurable","writable","key","_arrayLikeToArray","_arrayWithoutHoles","iter","iterator","_iterableToArray","minLen","_unsupportedIterableToArray","_nonIterableSpread","FOCUSABLE_ELEMENTS","Modal1","activeModal","validateModalPresence","validateArgs","MicroModal","Modal","_ref","targetModal","_ref$triggers","triggers","_ref$onShow","onShow","_ref$onClose","onClose","_ref$openTrigger","openTrigger","_ref$closeTrigger","closeTrigger","_ref$openClass","openClass","_ref$disableScroll","disableScroll","_ref$disableFocus","disableFocus","_ref$awaitCloseAnimat","awaitCloseAnimation","_ref$awaitOpenAnimati","awaitOpenAnimation","_ref$debugMode","debugMode","instance","Constructor","_classCallCheck","modal","getElementById","config","registerTriggers","onClick","bind","onKeydown","protoProps","staticProps","_this","_len","_key","Boolean","trigger","event","showModal","_this2","activeElement","setAttribute","classList","add","scrollBehaviour","addEventListeners","handler1","handler","setFocusToFirstNode","removeEventListeners","focus","closeModal","toggle","querySelector","style","overflow","hasAttribute","keyCode","retainFocus","nodes","querySelectorAll","_this3","focusableNodes","getFocusableNodes","nodesWhichAreNotCloseTargets","node","offsetParent","contains","focusedItemIndex","shiftKey","preventDefault","triggerMap","validateTriggerPresence","init","triggerAttr","attributes","generateTriggerMap","show","close","closeModalById","__WEBPACK_DEFAULT_EXPORT__","resolveUrl","numUrls","base","insertBefore","firstChild","resolved","CCapture_1","file_saver_1","ffmpegPath","changedpi_1","params_1","modals_1","gif_worker_js_1","JSZip","gifWorkersPath","default","modals_2","showDialog","GIF","WEBM","MP4","JPEGZIP","PNGZIP","activeCaptures","hotkeysSinceLastCheck","hotkeyOptions","hotkeys","canvas1","PARAMS","IS_MANUALLY_CHECKING_HOTKEYS","applyHotkeys","onResize","showWarning","setVerbose","VERBOSE","checkCanvas","setHotkey","keys","keyName","mp4","MP4s","activeCapturesOfType","stopRecord","browserSupportsMP4","errorMsg","onError","_a","beginVideoRecord","webm","WEBMs","browserSupportsWEBM","_b","gif","GIFs","beginGIFRecord","pngzip","pngzips","beginPNGFramesRecord","jpegzip","jpgzips","beginJPEGFramesRecord","png","takePNGSnapshot","jpeg","takeJPEGSnapshot","startCapture","capture","capturer","showDot","isRecording","activeVideoGifCaptures","quality","name_1","CCapture","framerate","fps","verbose","numFrames","ffmpegOptions","onExportProgress","onExport","onExportFinish","name_2","workersPath","onProgress","zipOptions","zipPromises","canvasToBlobAsync","canvas","takeImageSnapshot","filename","blob1","sent","name_5","error_1","name_6","error_2","CCaptureSaveAsync","save","stopRecordAtIndex","stop","blob2","_c","autoCloseDelay","convertWEBMtoMP4","filename1","metadata","captures","promises","handled","capture_2","error_3","_canvas","ffmpegCorePath","showAlerts","SHOW_ALERTS","showDialogs","SHOW_DIALOGS","showRecDot","SHOW_REC_DOT","initDotWithCSS","recDotCSS","dispose","bindKeyToVideoRecord","bindKeyToGIFRecord","bindKeyToPNGFramesRecord","bindKeyToJPEGFramesRecord","bindKeyToPNGSnapshot","bindKeyToJPEGSnapshot","recordFrame","_loop_1","frameName_1","i31","capture_1","checkHotkeys","ffmpegLoaded","createFFmpeg","combinedOptions","__assign","_ffmpegOptions","__spreadArray","outputBlob","browserSupportsWEBP","match","browserSupportsSharedArrayBuffer","browserSupportsGIF","Worker","css","micromodal_1","micromodal_css_1","initModalHTML","modalID","content","modalString","temp","innerHTML","textContent","alertModalInited","dialogModalInited","ALERT_MODAL_ID","alertModal","DIALOG_MODAL_ID","dialogModal","dot","dotCSS","background","width","height","display","position","top","right","margin","visible","Tar","WebMWriter","objectTypes","function","object","checkGlobal","freeExports","nodeType","freeModule","freeGlobal","freeSelf","freeWindow","thisGlobal","pad","Function","gc","callback","binStr","performance","now","getTime","nowOffset","timing","navigationStart","g_startTime","CCFrameEncoder","settings","_handlers","random","guid","extension","CCTarEncoder","fileExtension","tape","count","CCPNGEncoder","CCJPEGEncoder","baseFilename","frames","part","videoWriter","fileWriter","fd","frameRate","encoder","FFMpegServer","Video","cb","alert","JSON","stringify","mediaRecorder","workers","ctx","getContext","sizeSet","workerScript","_verbose","_time","_startTime","_performanceTime","_performanceStartTime","_step","_encoder","_timeouts","_intervals","_frameCount","_intermediateFrameCount","_requestAnimationFrameCallbacks","_capturing","_settings","motionBlurFrames","step","timeLimit","frameLimit","startTime","left","_timeDisplay","backgroundColor","fontFamily","fontSize","padding","color","zIndex","bufferMotionBlur","canvasMotionBlur","_encoders","CCGIFEncoder","CCFFMpegServerEncoder","CCStreamEncoder","ctor","_process","_emit","_oldSetTimeout","_oldSetInterval","setInterval","_oldClearInterval","clearInterval","_oldClearTimeout","clearTimeout","_oldRequestAnimationFrame","requestAnimationFrame","_oldNow","_oldPerformanceNow","_oldGetTime","media","_log","fn","_call","dt","_hookedTime","seconds","_stop","_save","setSeconds","toISOString","_updateTime","triggerTime","hookCurrentTime","_hooked","currentTime","HTMLVideoElement","HTMLAudioElement","_init","ctxMotionBlur","fillStyle","fillRect","_checkFrame","drawImage","imageData","getImageData","_blendFrame","putImageData","_saveFrame","safeToProceed","addFrame","autoSaveTime","complete","captureStream","MediaRecorder","ondataavailable","onstop","setOption","render","strFileName","strMimeType","fr","u5","a12","MozBlob","WebKitBlob","BB","msSaveBlob","bin","decodeURIComponent","pop","mx","uia","d2b","saver","winMode","click","encodeURIComponent","n23","e60","o10","require","EventEmitter","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","listeners","context","addListener","listener","newListener","warned","trace","once","fired","removeListener","removeAllListeners","listenerCount","evlistener","emitter","NeuQuant","LZWEncoder","ByteArray","page","pages","newPage","pageSize","charMap","i33","GIFEncoder","transparent","transIndex","repeat","image","pixels","indexedPixels","colorDepth","colorTab","neuQuant","usedEntry","palSize","firstFrame","sample","dither","globalPalette","cursor","getData","rv","writeByte","writeUTFBytes","writeBytes","setDelay","milliseconds","round","setFrameRate","setDispose","disposalCode","setRepeat","setTransparent","analyzePixels","writeLSD","writePalette","writeNetscapeExt","writeGraphicCtrlExt","writePixels","finish","setQuality","setDither","setGlobalPalette","palette","getGlobalPalette","writeHeader","buildColormap","getColormap","ditherPixels","indexPixels","findClosest","imgq","nPix","findClosestRGB","kernel","serpentine","kernels","FalseFloydSteinberg","Atkinson","ds","direction","xend","eg","eb","x1","y1","used","lookupRGB","minpos","dmin","dr","dg","db","getImagePixels","srcPos","transp","disp","writeShort","writeImageDesc","pValue","cur_accum","a_count","maxcode","g_init_bits","ClearCode","EOFCode","HSIZE","codetab","cur_bits","free_ent","clear_flg","char_out","outs","accum","flush_char","cl_block","cl_hash","hsize","htab","compress","init_bits","fcode","ent","hsize_reg","hshift","MAXCODE","n_bits","nextPixel","EOF","BITS","outer_loop","initCodeSize","curPixel","masks","netsize","intbiasshift","betashift","intbias","gammashift","radiusbiasshift","alphabiasshift","radbiasshift","prime4","samplefac","network","netindex","bias","freq","radpower","netbiasshift","Float64Array","alpha","initalpha","alterneigh","radius","alpharadbias","biasdist","betafreq","bestd","bestpos","dist","bestbiasd","bestbiaspos","beta","betagamma","smallpos","smallval","previouscol","startpos","maxnetpos","inxsearch","best","learn","lengthcount","alphadec","samplepixels","delta","ncycles","initradius","rad","radbias","minpicturebytes","prime1","prime2","prime3","pix","altersingle","contest","radiusdec","unbiasnet","inxbuild","ua","documentMode","UA","browser","child","parent","hasProp","__super__","item","superClass","frameDefaults","freeWorkers","activeWorkers","setOptions","results","frame","ImageData","CanvasRenderingContext2D","WebGLRenderingContext","getContextData","childNodes","j1","numWorkers","ref1","nextFrame","ref","spawnWorkers","renderNextFrame","abort","worker","terminate","frameFinished","finishedFrames","imageParts","finishRendering","len1","len3","ref2","task","getTask","setFill","canTransfer","debug","events","renderFrame","transfer","headerFormat","lookup","clean","utils","orig","addLength","multipleOf","stringToUint8","uint8ToBase64","field","structure","blockSize","recordSize","recordsPerBlock","blocks","filepath","opts","checksum","mtime","uid","gid","headerArr","group","inputLength","buffers","chunk","written","clear","seek","writeU8","ArrayBufferDataStream1","writeU16BE","Float32Array","writeString","measureEBMLVarInt","RuntimeException","writeEBMLVarInt","writeUnsignedIntBE","measureUnsignedInt","getAsDataArray","fs","destination","writePromise","thing","readBlobAsBuffer","FileWriter","newEntry","measureData","totalWritten","handleWriteComplete","buffer2","onwriteend","isAppend","entry","convertToUint8Array","entryArray","newEntryArray","buffer1","ArrayBufferDataStream","BlobBuffer","webP","keyframeStartIndex","EBMLFloat32","EBMLFloat64","bufferFileOffset","ebml","writeEBML","sizePos","dataBegin","dataEnd","dataOffset","writeEBMLVarIntWidth","videoWidth","videoHeight","writtenHeader","clusterFrameBuffer","clusterStartTime","clusterDuration","positionEBML","segmentDuration","cues","blobBuffer","fileOffset","ebmlSegment","seekPositionEBMLTemplate","seekPoints","seekPoint","segmentInfo","tracks","seekHead","bufferStream","SegmentInfo","fileOffsetToSegmentRelative","Tracks","keyframe","trackNumber","timecode","rawImageSize","trackIndex","clusterTime","clusterFileOffset","cluster","createCluster","createKeyframeBlock","extractKeyframeFromWebP","frameDuration","flushClusterFrameBuffer","cuesBuffer","seekHeadBuffer","oldPos","Cues","rewriteDuration","prop","BlobBuffer1","$89d6528cdd58799b$exports","$09fe29904f296764$var$requestAnimationFrame","$09fe29904f296764$var$renderer","$09fe29904f296764$var$controls","$09fe29904f296764$var$sceneInfo","$09fe29904f296764$var$ptRenderer","$09fe29904f296764$var$camera","$09fe29904f296764$var$fsQuad","$09fe29904f296764$var$scene","$09fe29904f296764$var$gui","$09fe29904f296764$var$model","$09fe29904f296764$var$samplesEl","$09fe29904f296764$var$videoEl","$09fe29904f296764$var$recordedFrames","$09fe29904f296764$var$animationDuration","$09fe29904f296764$var$videoUrl","$09fe29904f296764$var$UP_AXIS","Vector3","$09fe29904f296764$var$params","displayVideo","tiles","rotation","PI","samples","record","$parcel$interopDefault","domElement","play","$09fe29904f296764$var$rebuildGUI","reset","bounces","samplesPerFrame","resolutionScale","destroy","$jiuw3","GUI","disable","animationFolder","addFolder","recording","onChange","$09fe29904f296764$var$onResize","renderFolder","innerWidth","scale","dpr","devicePixelRatio","aspect","updateProjectionMatrix","setSize","setPixelRatio","$09fe29904f296764$var$regenerateScene","scene","sceneGenerator","updateMatrixWorld","bvh","textures","materials","geometry","material","updateFrom","attributesArray","normal","tangent","uv","materialIndexAttribute","materialIndex","setTextures","$09fe29904f296764$var$animate","enabled","angle","applyAxisAngle","update","mixer","autoClear","percStride","percentDone","toFixed","innerHeight","WebGLRenderer","antialias","preserveDrawingBuffer","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","Scene","PerspectiveCamera","$4CEV9","PathTracingRenderer","camera","PhysicalPathTracingMaterial","filterGlossyFactor","backgroundBlur","$RPVlj","FullScreenQuad","MeshBasicMaterial","texture","$5Rd1x","OrbitControls","envMapPromise","$891vQ","RGBELoader","setDataType","FloatType","envMapInfo","mapping","EquirectangularReflectionMapping","environment","modelPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","gltf","traverse","depthWrite","setScalar","animations","AnimationMixer","clip","action","clipAction","Group","floorTex","$1EdOY","generateRadialFloorTexture","floorPlane","Mesh","PlaneGeometry","MeshStandardMaterial","roughness","metalness","DynamicPathTracingSceneGenerator","$09fe29904f296764$var$init"],"version":3,"file":"renderVideo.63329b0d.js.map"}