{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,wGAUA,IAAIC,EAAUC,EAAUC,EAAmBC,EAAWC,EAAYC,EAAcC,EAC5EC,EAAmBC,EAAaC,EAChCC,EACJ,MAAMC,EAAS,CAEdC,qBAAsB,EACtBC,oBAAqB,EACrBC,kBAAmB,GACnBC,QAAS,GACTC,gBAAiB,EACjBC,gBAAiB,EAAIC,OAAOC,iBAC5BC,mBAAoB,IACpBC,MAAO,EACPC,iBAAkB,eAIdJ,OAAOK,SAASC,KAAKC,SAAU,kBAEnCd,EAAOe,UAAUC,UAAY,EAC7BhB,EAAOe,UAAUE,UAAY,IAC7BjB,EAAOe,UAAUG,aAAe,EAChClB,EAAOe,UAAUI,MAAQ,UACzBnB,EAAOI,QAAU,IAIlB,MAGMgB,EAAcb,OAAOc,WAAad,OAAOe,YAoL/C,SAASC,IAER,MAAMC,EAAIjB,OAAOc,WACXI,EAAIlB,OAAOe,YACXI,EAAQ1B,EAAOM,gBACfqB,EAAMpB,OAAOC,iBAEnBf,EAAWmC,QAASJ,EAAIE,EAAQC,EAAKF,EAAIC,EAAQC,GACjDlC,EAAWoC,QAEXxC,EAASuC,QAASJ,EAAGC,GACrBpC,EAASyC,cAAevB,OAAOC,iBAAmBkB,GAElD,MAAMK,EAASP,EAAIC,EAEnB7B,EAAkBmC,OAASA,EAC3BnC,EAAkBoC,yBAElB,MAAMC,EAzMY,EAyMeF,EACjClC,EAAYqC,IAAMD,EAAc,EAChCpC,EAAYsC,OAASF,GAAc,EACnCpC,EAAYmC,wB,CAIb,SAASI,IAER5C,EAAU6C,UAAUC,SAASC,IAE5BA,EAASpC,kBAAoBH,EAAOG,iBAAiB,IAGtDV,EAAWoC,O,CAIZ,SAASW,EAAc7B,GAEI,gBAArBA,GAECjB,IAAiBG,GAErBD,EAAkB6C,SAASC,KAAMhD,EAAa+C,UAI/C/C,EAAeE,EACfN,EAASqD,OAASjD,GAEc,iBAArBiB,IAENjB,IAAiBE,GAErBC,EAAY4C,SAASC,KAAMhD,EAAa+C,UAIzC/C,EAAeG,EACfP,EAASqD,OAASjD,GAIO,oBAArBiB,GAEJjB,EAAeI,EAEfR,EAASsD,SAAU,EACnBrD,EAAkBqD,SAAU,EAE5BrD,EAAkBsD,WAIlBtD,EAAkBqD,SAAU,EAC5BtD,EAASsD,SAAU,EAEnBtD,EAASuD,UAIVpD,EAAWqD,OAASpD,EAEpBa,OAAOwC,OAASrD,EAEhBD,EAAWoC,O,CAIZ,SAASmB,IAERC,sBAAuBD,GAEvBvD,EAAW8C,SAASF,UAAUa,WAAY1D,EAAU6C,UAAW7C,EAAU2D,UAEzE1D,EAAW8C,SAAS9B,mBAAqBT,EAAOS,mBAChDhB,EAAW8C,SAAStC,qBAAuBD,EAAOC,qBAClDR,EAAW8C,SAASa,gBAAkB,IACtC3D,EAAW8C,SAASnC,QAAUJ,EAAOI,QAErCV,EAAa2D,oBAEb,IAAM,IAAIC,EAAI,EAAGC,EAAIvD,EAAOK,gBAAiBiD,EAAIC,EAAGD,IAEnD7D,EAAWoD,SAIZxD,EAASmE,WAAY,EACrB7D,EAAO8D,OAAQpE,GACfA,EAASmE,WAAY,EAErBzD,EAAU2D,UAAY,YAAaC,KAAKC,MAAOnE,EAAWoE,U,CAlStDzC,EAAc,MAElBpB,EAAOI,QAAUuD,KAAKG,IAAK9D,EAAOI,QAAS,IAC3CJ,EAAOM,iBAAmB,GAC1BN,EAAOU,MAAQ,GAMhBqD,iBAEC1E,EAAW,IAAIF,EAAA6E,cAAqB,CAAEC,WAAW,IACjD5E,EAAS6E,YAAc/E,EAAAgF,sBACvB9E,EAAS+E,eAAiBjF,EAAAkF,aAC1BC,SAASC,KAAKC,YAAanF,EAASoF,YAEpC7E,EAAoB,IAAIT,EAAAuF,kBAAyB,GAAItD,EAAa,KAAO,KACzExB,EAAkB6C,SAASkC,IAAK,GAAK,GAAK,MAE1C,MAAM1C,EAxBY,EAwBeb,EACjCvB,EAAc,IAAIV,EAAAyF,oBAA0BC,IAAkBA,IAAgB5C,EAAc,EAAGA,GAAc,EAAK,EAAG,KACrHpC,EAAY4C,SAASC,KAAM9C,EAAkB6C,UAE7C3C,EAAiB,IAAIgF,EAAAC,eAGrBjF,EAAe2C,SAASkC,KAAK,GAAO,IAAM,KAE1ClF,EAAa,IAAIqF,EAAAE,oBAAqB3F,GACtCI,EAAW8C,SAAW,IAAIuC,EAAAG,4BAC1BxF,EAAWiB,MAAMiE,IAAK3E,EAAOU,MAAOV,EAAOU,OAE3Cf,EAAS,IAAIuF,EAAAC,eAAgB,IAAIhG,EAAAiG,kBAAyB,CACzDC,IAAK5F,EAAW6F,OAAOC,WAGxBjG,EAAW,IAAIkG,EAAAC,cAAe7F,EAAmBP,EAASoF,YAC1DnF,EAASgG,OAAOX,KAAK,IAAQ,KAAM,KACnC/E,EAAkB8F,OAAQpG,EAASgG,QACnChG,EAASqG,iBAAkB,UAAU,KAEpClG,EAAWoC,OAAO,IAGnBvC,EAASuD,SAETtD,EAAoB,IAAIiG,EAAAC,cAAe3F,EAAgBT,EAASoF,YAChElF,EAAkB+F,OAAOX,KAAK,IAAQ,KAAM,KAC5C7E,EAAe4F,OAAQnG,EAAkB+F,QACzC/F,EAAkBoG,iBAAkB,UAAU,KAE7ClG,EAAWoC,OAAO,IAGnBtC,EAAkBsD,SAElB9C,EAAYuE,SAASsB,eAAgB,WAErC,MAAMC,GAAgB,IAAIC,EAAAC,YAAaC,YAAa7G,EAAA8G,WAClDC,UAAW,kHACXC,MAAMZ,IAEN9F,EAAW8C,SAAS6D,WAAWlD,WAAYqC,EAAS,IAIhDc,EAAY,IAAIC,EAAAC,uBAChBC,GAAc,IAAIC,EAAAC,YACtBC,kBAAmBC,EAAAC,gBACnBX,UAAW,gHACXC,MAAMW,IAENA,EAAKC,MAAMC,UAAUC,IAEfA,EAAE1E,WAGN0E,EAAE1E,SAAS2E,UAAY,EAAG,IAM5B,MAAMC,EAAQ,IAAIhI,EAAAiI,MAClBD,EAAME,IAAKP,EAAKC,OAEhB,MAAMO,EAAM,IAAInI,EAAAoI,KAChBD,EAAIE,cAAeV,EAAKC,OAExBI,EAAM9D,oBAEN,MAAMoE,EAAS,IAAItI,EAAAuI,QAMnB,OALAJ,EAAIK,UAAWF,GAEfX,EAAKC,MAAMtE,SAASmF,gBAAiBH,GAAQ,IAC7CN,EAAM9D,oBAECgD,EAAUwB,SAAUV,EAAO,IAGlChB,MAAM2B,IAENtI,EAAYsI,EAEZ,MAlJHC,IAkJWA,EAlJX5E,SAkJgBA,EAlJhBd,UAkJ0BA,GAAcyF,EAC/BE,EAAWD,EAAIC,SACfzF,EAAW9C,EAAW8C,SAE5BA,EAASwF,IAAI7E,WAAY6E,GACzBxF,EAAS0F,gBAAgB/E,WACxB8E,EAASE,WAAWC,OACpBH,EAASE,WAAWE,QACpBJ,EAASE,WAAWG,GACpBL,EAASE,WAAW/G,OAErBoB,EAAS+F,uBAAuBpF,WAAY8E,EAASE,WAAWK,eAChEhG,EAASY,SAASqF,YAAanJ,EAAU,KAAM,KAAM8D,GACrDZ,EAASF,UAAUa,WAAYb,EAAWc,GAE1CkD,EAAUoC,SAAS,UAIfC,QAAQC,IAAK,CAAEnC,EAAaX,IAElCvB,SAASsB,eAAgB,WAAYgD,SAErCrH,IACAhB,OAAOoF,iBAAkB,SAAUpE,GAEnCiB,EAAcxC,EAAOW,kBAErB,MAAMkI,EAAM,IAAIC,EAAAC,IAChBF,EAAIxB,IAAKrH,EAAQ,QAAS,EAAG,EAAG,GAAIgJ,UAAUC,IAE7CxJ,EAAWiB,MAAMiE,IAAKsE,EAAOA,EAAO,IAGrCJ,EAAIxB,IAAKrH,EAAQ,kBAAmB,EAAG,GAAI,GAC3C6I,EAAIxB,IAAKrH,EAAQ,qBAAsB,EAAG,GAAIgJ,UAAU,KAEvDvJ,EAAWoC,OAAO,IAGnBgH,EAAIxB,IAAKrH,EAAQ,uBAAwB,EAAG,IAAKgJ,UAAU,KAE1DvJ,EAAWoC,OAAO,IAGnBgH,EAAIxB,IAAKrH,EAAQ,sBAAuB,EAAG,IAAKgJ,UAAUE,IAEzDzJ,EAAW8C,SAASrC,oBAAoBiJ,cAAeD,GACvDzJ,EAAWoC,OAAO,IAGnBgH,EAAIxB,IAAKrH,EAAQ,oBAAqB,EAAG,IAAKgJ,SAAU5G,GACxDyG,EAAIxB,IAAKrH,EAAQ,UAAW,EAAG,GAAI,GAAIgJ,UAAU,KAEhDvJ,EAAWoC,OAAO,IAGnBgH,EAAIxB,IAAKrH,EAAQ,kBAAmB,GAAK,GAAIgJ,UAAU,KAEtDzH,GAAU,IAGXsH,EAAIxB,IAAKrH,EAAQ,mBAAoB,CAAE,cAAe,eAAgB,oBAAsBgJ,UAAUE,IAErG1G,EAAc0G,EAAG,IAIlB9G,IAEAY,G,CAvKDoG","sources":["example/interior.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, EquirectCamera } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sphericalControls, sceneInfo, ptRenderer, activeCamera, fsQuad;\nlet perspectiveCamera, orthoCamera, equirectCamera;\nlet samplesEl;\nconst params = {\n\n\tenvironmentIntensity: 0,\n\tenvironmentRotation: 0,\n\temissiveIntensity: 12,\n\tbounces: 20,\n\tsamplesPerFrame: 1,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\tfilterGlossyFactor: 0.25,\n\ttiles: 2,\n\tcameraProjection: 'Perspective'\n\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\nconst orthoWidth = 5;\n\n// clamp value for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.min( params.bounces, 10 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 3;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tperspectiveCamera = new THREE.PerspectiveCamera( 75, aspectRatio, 0.025, 500 );\n\tperspectiveCamera.position.set( 0.4, 0.6, 2.65 );\n\n\tconst orthoHeight = orthoWidth / aspectRatio;\n\torthoCamera = new THREE.OrthographicCamera( orthoWidth / - 2, orthoWidth / 2, orthoHeight / 2, orthoHeight / - 2, 0, 100 );\n\torthoCamera.position.copy( perspectiveCamera.position );\n\n\tequirectCamera = new EquirectCamera();\n\t// Almost, but not quite on top of the control target.\n\t// This allows for full rotation without moving the camera very much.\n\tequirectCamera.position.set( - 0.2, 0.33, 0.08 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.target.set( - 0.15, 0.33, - 0.08 );\n\tperspectiveCamera.lookAt( controls.target );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tcontrols.update();\n\n\tsphericalControls = new OrbitControls( equirectCamera, renderer.domElement );\n\tsphericalControls.target.set( - 0.15, 0.33, - 0.08 );\n\tequirectCamera.lookAt( sphericalControls.target );\n\tsphericalControls.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tsphericalControls.update();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tconst envMapPromise = new RGBELoader().setDataType( THREE.FloatType )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr' )\n\t\t.then( texture => {\n\n\t\t\tptRenderer.material.envMapInfo.updateFrom( texture );\n\n\t\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/pathtracing-bathroom/modernbathroom.glb' )\n\t\t.then( gltf => {\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\tif ( c.material ) {\n\n\t\t\t\t\t// set the thickness so volume rendering is used for transmissive objects.\n\t\t\t\t\tc.material.thickness = 1.0;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tconst group = new THREE.Group();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tgroup.updateMatrixWorld();\n\n\t\t\tconst center = new THREE.Vector3();\n\t\t\tbox.getCenter( center );\n\n\t\t\tgltf.scene.position.addScaledVector( center, - 0.5 );\n\t\t\tgroup.updateMatrixWorld();\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.attributesArray.updateFrom(\n\t\t\t\tgeometry.attributes.normal,\n\t\t\t\tgeometry.attributes.tangent,\n\t\t\t\tgeometry.attributes.uv,\n\t\t\t\tgeometry.attributes.color,\n\t\t\t);\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tupdateCamera( params.cameraProjection );\n\n\tconst gui = new GUI();\n\tgui.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tgui.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tgui.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tgui.add( params, 'environmentIntensity', 0, 25 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tgui.add( params, 'environmentRotation', 0, 40 ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.makeRotationY( v );\n\t\tptRenderer.reset();\n\n\t} );\n\tgui.add( params, 'emissiveIntensity', 0, 50 ).onChange( updateIntensity );\n\tgui.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tgui.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\tgui.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic', 'Equirectangular' ] ).onChange( v => {\n\n\t\tupdateCamera( v );\n\n\t} );\n\n\tupdateIntensity();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera.top = orthoHeight / 2;\n\torthoCamera.bottom = orthoHeight / - 2;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction updateIntensity() {\n\n\tsceneInfo.materials.forEach( material => {\n\n\t\tmaterial.emissiveIntensity = params.emissiveIntensity;\n\n\t} );\n\tptRenderer.reset();\n\n}\n\nfunction updateCamera( cameraProjection ) {\n\n\tif ( cameraProjection === 'Perspective' ) {\n\n\t\tif ( activeCamera === orthoCamera ) {\n\n\t\t\tperspectiveCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = perspectiveCamera;\n\t\tcontrols.object = activeCamera;\n\n\t} else if ( cameraProjection === 'Orthographic' ) {\n\n\t\tif ( activeCamera === perspectiveCamera ) {\n\n\t\t\torthoCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = orthoCamera;\n\t\tcontrols.object = activeCamera;\n\n\t}\n\n\tif ( cameraProjection === 'Equirectangular' ) {\n\n\t\tactiveCamera = equirectCamera;\n\n\t\tcontrols.enabled = false;\n\t\tsphericalControls.enabled = true;\n\n\t\tsphericalControls.update();\n\n\t} else {\n\n\t\tsphericalControls.enabled = false;\n\t\tcontrols.enabled = true;\n\n\t\tcontrols.update();\n\n\t}\n\n\tptRenderer.camera = activeCamera;\n\n\twindow.CAMERA = activeCamera;\n\n\tptRenderer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.environmentBlur = 0.35;\n\tptRenderer.material.bounces = params.bounces;\n\n\tactiveCamera.updateMatrixWorld();\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0d847323f1f8b53b$var$renderer","$0d847323f1f8b53b$var$controls","$0d847323f1f8b53b$var$sphericalControls","$0d847323f1f8b53b$var$sceneInfo","$0d847323f1f8b53b$var$ptRenderer","$0d847323f1f8b53b$var$activeCamera","$0d847323f1f8b53b$var$fsQuad","$0d847323f1f8b53b$var$perspectiveCamera","$0d847323f1f8b53b$var$orthoCamera","$0d847323f1f8b53b$var$equirectCamera","$0d847323f1f8b53b$var$samplesEl","$0d847323f1f8b53b$var$params","environmentIntensity","environmentRotation","emissiveIntensity","bounces","samplesPerFrame","resolutionScale","window","devicePixelRatio","filterGlossyFactor","tiles","cameraProjection","location","hash","includes","material1","metalness","roughness","transmission","color","$0d847323f1f8b53b$var$aspectRatio","innerWidth","innerHeight","$0d847323f1f8b53b$var$onResize","w","h","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","orthoHeight","top","bottom","$0d847323f1f8b53b$var$updateIntensity","materials","forEach","material","$0d847323f1f8b53b$var$updateCamera","position","copy","object","enabled","update","camera","CAMERA","$0d847323f1f8b53b$var$animate","requestAnimationFrame","updateFrom","textures","environmentBlur","updateMatrixWorld","i","l","autoClear","render","innerText","Math","floor","samples","min","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","document","body","appendChild","domElement","PerspectiveCamera","set","OrthographicCamera","$0d847323f1f8b53b$var$orthoWidth","$4CEV9","EquirectCamera","PathTracingRenderer","PhysicalPathTracingMaterial","$RPVlj","FullScreenQuad","MeshBasicMaterial","map","target","texture","$5Rd1x","OrbitControls","lookAt","addEventListener","getElementById","envMapPromise","$891vQ","RGBELoader","setDataType","FloatType","loadAsync","then","envMapInfo","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","gltf","scene","traverse","c","thickness","group","Group","add","box","Box3","setFromObject","center","Vector3","getCenter","addScaledVector","generate","result","bvh","geometry","attributesArray","attributes","normal","tangent","uv","materialIndexAttribute","materialIndex","setTextures","dispose","Promise","all","remove","gui","$jiuw3","GUI","onChange","value","v","makeRotationY","$0d847323f1f8b53b$var$init"],"version":3,"file":"interior.fb823b71.js.map"}